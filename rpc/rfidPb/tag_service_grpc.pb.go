// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.19.4
// source: tag_service.proto

package rfidPb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	RfidPurchaseController_Create_FullMethodName                     = "/ito_rfid_mongo.tag_service.RfidPurchaseController/Create"
	RfidPurchaseController_Destroy_FullMethodName                    = "/ito_rfid_mongo.tag_service.RfidPurchaseController/Destroy"
	RfidPurchaseController_List_FullMethodName                       = "/ito_rfid_mongo.tag_service.RfidPurchaseController/List"
	RfidPurchaseController_PartialUpdate_FullMethodName              = "/ito_rfid_mongo.tag_service.RfidPurchaseController/PartialUpdate"
	RfidPurchaseController_Retrieve_FullMethodName                   = "/ito_rfid_mongo.tag_service.RfidPurchaseController/Retrieve"
	RfidPurchaseController_RfidPurchaseOutScanQuery_FullMethodName   = "/ito_rfid_mongo.tag_service.RfidPurchaseController/RfidPurchaseOutScanQuery"
	RfidPurchaseController_RfidPurchaseOutScanRetreat_FullMethodName = "/ito_rfid_mongo.tag_service.RfidPurchaseController/RfidPurchaseOutScanRetreat"
	RfidPurchaseController_RfidPurchaseOutScanSave_FullMethodName    = "/ito_rfid_mongo.tag_service.RfidPurchaseController/RfidPurchaseOutScanSave"
	RfidPurchaseController_RfidPurchaseScanQuery_FullMethodName      = "/ito_rfid_mongo.tag_service.RfidPurchaseController/RfidPurchaseScanQuery"
	RfidPurchaseController_RfidPurchaseScanRetreat_FullMethodName    = "/ito_rfid_mongo.tag_service.RfidPurchaseController/RfidPurchaseScanRetreat"
	RfidPurchaseController_RfidPurchaseScanSave_FullMethodName       = "/ito_rfid_mongo.tag_service.RfidPurchaseController/RfidPurchaseScanSave"
	RfidPurchaseController_Update_FullMethodName                     = "/ito_rfid_mongo.tag_service.RfidPurchaseController/Update"
)

// RfidPurchaseControllerClient is the client API for RfidPurchaseController service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type RfidPurchaseControllerClient interface {
	Create(ctx context.Context, in *RfidPurchaseRequest, opts ...grpc.CallOption) (*RfidPurchaseResponse, error)
	Destroy(ctx context.Context, in *RfidPurchaseDestroyRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	List(ctx context.Context, in *RfidPurchaseListRequest, opts ...grpc.CallOption) (*RfidPurchaseListResponse, error)
	PartialUpdate(ctx context.Context, in *RfidPurchasePartialUpdateRequest, opts ...grpc.CallOption) (*RfidPurchaseResponse, error)
	Retrieve(ctx context.Context, in *RfidPurchaseRetrieveRequest, opts ...grpc.CallOption) (*RfidPurchaseResponse, error)
	RfidPurchaseOutScanQuery(ctx context.Context, in *RfidPurchaseOutScanQueryRequest, opts ...grpc.CallOption) (*RfidPurchaseOutScanQueryResponse, error)
	RfidPurchaseOutScanRetreat(ctx context.Context, in *RfidPurchaseOutScanRetreatRequest, opts ...grpc.CallOption) (*RfidPurchaseOutScanRetreatResponse, error)
	RfidPurchaseOutScanSave(ctx context.Context, in *RfidPurchaseOutScanSaveRequest, opts ...grpc.CallOption) (*RfidPurchaseOutScanSaveResponse, error)
	RfidPurchaseScanQuery(ctx context.Context, in *RfidPurchaseScanQueryRequest, opts ...grpc.CallOption) (*RfidPurchaseScanQueryResponse, error)
	RfidPurchaseScanRetreat(ctx context.Context, in *RfidPurchaseInScanRetreatRequest, opts ...grpc.CallOption) (*RfidPurchaseInScanRetreatResponse, error)
	RfidPurchaseScanSave(ctx context.Context, in *RfidPurchaseInScanSaveRequest, opts ...grpc.CallOption) (*RfidPurchaseInScanSaveResponse, error)
	Update(ctx context.Context, in *RfidPurchaseRequest, opts ...grpc.CallOption) (*RfidPurchaseResponse, error)
}

type rfidPurchaseControllerClient struct {
	cc grpc.ClientConnInterface
}

func NewRfidPurchaseControllerClient(cc grpc.ClientConnInterface) RfidPurchaseControllerClient {
	return &rfidPurchaseControllerClient{cc}
}

func (c *rfidPurchaseControllerClient) Create(ctx context.Context, in *RfidPurchaseRequest, opts ...grpc.CallOption) (*RfidPurchaseResponse, error) {
	out := new(RfidPurchaseResponse)
	err := c.cc.Invoke(ctx, RfidPurchaseController_Create_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidPurchaseControllerClient) Destroy(ctx context.Context, in *RfidPurchaseDestroyRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, RfidPurchaseController_Destroy_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidPurchaseControllerClient) List(ctx context.Context, in *RfidPurchaseListRequest, opts ...grpc.CallOption) (*RfidPurchaseListResponse, error) {
	out := new(RfidPurchaseListResponse)
	err := c.cc.Invoke(ctx, RfidPurchaseController_List_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidPurchaseControllerClient) PartialUpdate(ctx context.Context, in *RfidPurchasePartialUpdateRequest, opts ...grpc.CallOption) (*RfidPurchaseResponse, error) {
	out := new(RfidPurchaseResponse)
	err := c.cc.Invoke(ctx, RfidPurchaseController_PartialUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidPurchaseControllerClient) Retrieve(ctx context.Context, in *RfidPurchaseRetrieveRequest, opts ...grpc.CallOption) (*RfidPurchaseResponse, error) {
	out := new(RfidPurchaseResponse)
	err := c.cc.Invoke(ctx, RfidPurchaseController_Retrieve_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidPurchaseControllerClient) RfidPurchaseOutScanQuery(ctx context.Context, in *RfidPurchaseOutScanQueryRequest, opts ...grpc.CallOption) (*RfidPurchaseOutScanQueryResponse, error) {
	out := new(RfidPurchaseOutScanQueryResponse)
	err := c.cc.Invoke(ctx, RfidPurchaseController_RfidPurchaseOutScanQuery_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidPurchaseControllerClient) RfidPurchaseOutScanRetreat(ctx context.Context, in *RfidPurchaseOutScanRetreatRequest, opts ...grpc.CallOption) (*RfidPurchaseOutScanRetreatResponse, error) {
	out := new(RfidPurchaseOutScanRetreatResponse)
	err := c.cc.Invoke(ctx, RfidPurchaseController_RfidPurchaseOutScanRetreat_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidPurchaseControllerClient) RfidPurchaseOutScanSave(ctx context.Context, in *RfidPurchaseOutScanSaveRequest, opts ...grpc.CallOption) (*RfidPurchaseOutScanSaveResponse, error) {
	out := new(RfidPurchaseOutScanSaveResponse)
	err := c.cc.Invoke(ctx, RfidPurchaseController_RfidPurchaseOutScanSave_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidPurchaseControllerClient) RfidPurchaseScanQuery(ctx context.Context, in *RfidPurchaseScanQueryRequest, opts ...grpc.CallOption) (*RfidPurchaseScanQueryResponse, error) {
	out := new(RfidPurchaseScanQueryResponse)
	err := c.cc.Invoke(ctx, RfidPurchaseController_RfidPurchaseScanQuery_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidPurchaseControllerClient) RfidPurchaseScanRetreat(ctx context.Context, in *RfidPurchaseInScanRetreatRequest, opts ...grpc.CallOption) (*RfidPurchaseInScanRetreatResponse, error) {
	out := new(RfidPurchaseInScanRetreatResponse)
	err := c.cc.Invoke(ctx, RfidPurchaseController_RfidPurchaseScanRetreat_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidPurchaseControllerClient) RfidPurchaseScanSave(ctx context.Context, in *RfidPurchaseInScanSaveRequest, opts ...grpc.CallOption) (*RfidPurchaseInScanSaveResponse, error) {
	out := new(RfidPurchaseInScanSaveResponse)
	err := c.cc.Invoke(ctx, RfidPurchaseController_RfidPurchaseScanSave_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidPurchaseControllerClient) Update(ctx context.Context, in *RfidPurchaseRequest, opts ...grpc.CallOption) (*RfidPurchaseResponse, error) {
	out := new(RfidPurchaseResponse)
	err := c.cc.Invoke(ctx, RfidPurchaseController_Update_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RfidPurchaseControllerServer is the server API for RfidPurchaseController service.
// All implementations must embed UnimplementedRfidPurchaseControllerServer
// for forward compatibility
type RfidPurchaseControllerServer interface {
	Create(context.Context, *RfidPurchaseRequest) (*RfidPurchaseResponse, error)
	Destroy(context.Context, *RfidPurchaseDestroyRequest) (*emptypb.Empty, error)
	List(context.Context, *RfidPurchaseListRequest) (*RfidPurchaseListResponse, error)
	PartialUpdate(context.Context, *RfidPurchasePartialUpdateRequest) (*RfidPurchaseResponse, error)
	Retrieve(context.Context, *RfidPurchaseRetrieveRequest) (*RfidPurchaseResponse, error)
	RfidPurchaseOutScanQuery(context.Context, *RfidPurchaseOutScanQueryRequest) (*RfidPurchaseOutScanQueryResponse, error)
	RfidPurchaseOutScanRetreat(context.Context, *RfidPurchaseOutScanRetreatRequest) (*RfidPurchaseOutScanRetreatResponse, error)
	RfidPurchaseOutScanSave(context.Context, *RfidPurchaseOutScanSaveRequest) (*RfidPurchaseOutScanSaveResponse, error)
	RfidPurchaseScanQuery(context.Context, *RfidPurchaseScanQueryRequest) (*RfidPurchaseScanQueryResponse, error)
	RfidPurchaseScanRetreat(context.Context, *RfidPurchaseInScanRetreatRequest) (*RfidPurchaseInScanRetreatResponse, error)
	RfidPurchaseScanSave(context.Context, *RfidPurchaseInScanSaveRequest) (*RfidPurchaseInScanSaveResponse, error)
	Update(context.Context, *RfidPurchaseRequest) (*RfidPurchaseResponse, error)
	mustEmbedUnimplementedRfidPurchaseControllerServer()
}

// UnimplementedRfidPurchaseControllerServer must be embedded to have forward compatible implementations.
type UnimplementedRfidPurchaseControllerServer struct {
}

func (UnimplementedRfidPurchaseControllerServer) Create(context.Context, *RfidPurchaseRequest) (*RfidPurchaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (UnimplementedRfidPurchaseControllerServer) Destroy(context.Context, *RfidPurchaseDestroyRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Destroy not implemented")
}
func (UnimplementedRfidPurchaseControllerServer) List(context.Context, *RfidPurchaseListRequest) (*RfidPurchaseListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (UnimplementedRfidPurchaseControllerServer) PartialUpdate(context.Context, *RfidPurchasePartialUpdateRequest) (*RfidPurchaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PartialUpdate not implemented")
}
func (UnimplementedRfidPurchaseControllerServer) Retrieve(context.Context, *RfidPurchaseRetrieveRequest) (*RfidPurchaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Retrieve not implemented")
}
func (UnimplementedRfidPurchaseControllerServer) RfidPurchaseOutScanQuery(context.Context, *RfidPurchaseOutScanQueryRequest) (*RfidPurchaseOutScanQueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RfidPurchaseOutScanQuery not implemented")
}
func (UnimplementedRfidPurchaseControllerServer) RfidPurchaseOutScanRetreat(context.Context, *RfidPurchaseOutScanRetreatRequest) (*RfidPurchaseOutScanRetreatResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RfidPurchaseOutScanRetreat not implemented")
}
func (UnimplementedRfidPurchaseControllerServer) RfidPurchaseOutScanSave(context.Context, *RfidPurchaseOutScanSaveRequest) (*RfidPurchaseOutScanSaveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RfidPurchaseOutScanSave not implemented")
}
func (UnimplementedRfidPurchaseControllerServer) RfidPurchaseScanQuery(context.Context, *RfidPurchaseScanQueryRequest) (*RfidPurchaseScanQueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RfidPurchaseScanQuery not implemented")
}
func (UnimplementedRfidPurchaseControllerServer) RfidPurchaseScanRetreat(context.Context, *RfidPurchaseInScanRetreatRequest) (*RfidPurchaseInScanRetreatResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RfidPurchaseScanRetreat not implemented")
}
func (UnimplementedRfidPurchaseControllerServer) RfidPurchaseScanSave(context.Context, *RfidPurchaseInScanSaveRequest) (*RfidPurchaseInScanSaveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RfidPurchaseScanSave not implemented")
}
func (UnimplementedRfidPurchaseControllerServer) Update(context.Context, *RfidPurchaseRequest) (*RfidPurchaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (UnimplementedRfidPurchaseControllerServer) mustEmbedUnimplementedRfidPurchaseControllerServer() {
}

// UnsafeRfidPurchaseControllerServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to RfidPurchaseControllerServer will
// result in compilation errors.
type UnsafeRfidPurchaseControllerServer interface {
	mustEmbedUnimplementedRfidPurchaseControllerServer()
}

func RegisterRfidPurchaseControllerServer(s grpc.ServiceRegistrar, srv RfidPurchaseControllerServer) {
	s.RegisterService(&RfidPurchaseController_ServiceDesc, srv)
}

func _RfidPurchaseController_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidPurchaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidPurchaseControllerServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidPurchaseController_Create_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidPurchaseControllerServer).Create(ctx, req.(*RfidPurchaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidPurchaseController_Destroy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidPurchaseDestroyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidPurchaseControllerServer).Destroy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidPurchaseController_Destroy_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidPurchaseControllerServer).Destroy(ctx, req.(*RfidPurchaseDestroyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidPurchaseController_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidPurchaseListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidPurchaseControllerServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidPurchaseController_List_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidPurchaseControllerServer).List(ctx, req.(*RfidPurchaseListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidPurchaseController_PartialUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidPurchasePartialUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidPurchaseControllerServer).PartialUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidPurchaseController_PartialUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidPurchaseControllerServer).PartialUpdate(ctx, req.(*RfidPurchasePartialUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidPurchaseController_Retrieve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidPurchaseRetrieveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidPurchaseControllerServer).Retrieve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidPurchaseController_Retrieve_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidPurchaseControllerServer).Retrieve(ctx, req.(*RfidPurchaseRetrieveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidPurchaseController_RfidPurchaseOutScanQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidPurchaseOutScanQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidPurchaseControllerServer).RfidPurchaseOutScanQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidPurchaseController_RfidPurchaseOutScanQuery_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidPurchaseControllerServer).RfidPurchaseOutScanQuery(ctx, req.(*RfidPurchaseOutScanQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidPurchaseController_RfidPurchaseOutScanRetreat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidPurchaseOutScanRetreatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidPurchaseControllerServer).RfidPurchaseOutScanRetreat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidPurchaseController_RfidPurchaseOutScanRetreat_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidPurchaseControllerServer).RfidPurchaseOutScanRetreat(ctx, req.(*RfidPurchaseOutScanRetreatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidPurchaseController_RfidPurchaseOutScanSave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidPurchaseOutScanSaveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidPurchaseControllerServer).RfidPurchaseOutScanSave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidPurchaseController_RfidPurchaseOutScanSave_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidPurchaseControllerServer).RfidPurchaseOutScanSave(ctx, req.(*RfidPurchaseOutScanSaveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidPurchaseController_RfidPurchaseScanQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidPurchaseScanQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidPurchaseControllerServer).RfidPurchaseScanQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidPurchaseController_RfidPurchaseScanQuery_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidPurchaseControllerServer).RfidPurchaseScanQuery(ctx, req.(*RfidPurchaseScanQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidPurchaseController_RfidPurchaseScanRetreat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidPurchaseInScanRetreatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidPurchaseControllerServer).RfidPurchaseScanRetreat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidPurchaseController_RfidPurchaseScanRetreat_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidPurchaseControllerServer).RfidPurchaseScanRetreat(ctx, req.(*RfidPurchaseInScanRetreatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidPurchaseController_RfidPurchaseScanSave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidPurchaseInScanSaveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidPurchaseControllerServer).RfidPurchaseScanSave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidPurchaseController_RfidPurchaseScanSave_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidPurchaseControllerServer).RfidPurchaseScanSave(ctx, req.(*RfidPurchaseInScanSaveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidPurchaseController_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidPurchaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidPurchaseControllerServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidPurchaseController_Update_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidPurchaseControllerServer).Update(ctx, req.(*RfidPurchaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// RfidPurchaseController_ServiceDesc is the grpc.ServiceDesc for RfidPurchaseController service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var RfidPurchaseController_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "ito_rfid_mongo.tag_service.RfidPurchaseController",
	HandlerType: (*RfidPurchaseControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _RfidPurchaseController_Create_Handler,
		},
		{
			MethodName: "Destroy",
			Handler:    _RfidPurchaseController_Destroy_Handler,
		},
		{
			MethodName: "List",
			Handler:    _RfidPurchaseController_List_Handler,
		},
		{
			MethodName: "PartialUpdate",
			Handler:    _RfidPurchaseController_PartialUpdate_Handler,
		},
		{
			MethodName: "Retrieve",
			Handler:    _RfidPurchaseController_Retrieve_Handler,
		},
		{
			MethodName: "RfidPurchaseOutScanQuery",
			Handler:    _RfidPurchaseController_RfidPurchaseOutScanQuery_Handler,
		},
		{
			MethodName: "RfidPurchaseOutScanRetreat",
			Handler:    _RfidPurchaseController_RfidPurchaseOutScanRetreat_Handler,
		},
		{
			MethodName: "RfidPurchaseOutScanSave",
			Handler:    _RfidPurchaseController_RfidPurchaseOutScanSave_Handler,
		},
		{
			MethodName: "RfidPurchaseScanQuery",
			Handler:    _RfidPurchaseController_RfidPurchaseScanQuery_Handler,
		},
		{
			MethodName: "RfidPurchaseScanRetreat",
			Handler:    _RfidPurchaseController_RfidPurchaseScanRetreat_Handler,
		},
		{
			MethodName: "RfidPurchaseScanSave",
			Handler:    _RfidPurchaseController_RfidPurchaseScanSave_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _RfidPurchaseController_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tag_service.proto",
}

const (
	RfidTagIndexController_BulkPushReturnInspectAgg_FullMethodName          = "/ito_rfid_mongo.tag_service.RfidTagIndexController/BulkPushReturnInspectAgg"
	RfidTagIndexController_Create_FullMethodName                            = "/ito_rfid_mongo.tag_service.RfidTagIndexController/Create"
	RfidTagIndexController_CreateRfidPublishEntities_FullMethodName         = "/ito_rfid_mongo.tag_service.RfidTagIndexController/CreateRfidPublishEntities"
	RfidTagIndexController_CreateRfidQualityEntities_FullMethodName         = "/ito_rfid_mongo.tag_service.RfidTagIndexController/CreateRfidQualityEntities"
	RfidTagIndexController_CreateRfidReasonEntities_FullMethodName          = "/ito_rfid_mongo.tag_service.RfidTagIndexController/CreateRfidReasonEntities"
	RfidTagIndexController_CreateRfidReturnInspectConfig_FullMethodName     = "/ito_rfid_mongo.tag_service.RfidTagIndexController/CreateRfidReturnInspectConfig"
	RfidTagIndexController_CreateRfidReturnInspectEntities_FullMethodName   = "/ito_rfid_mongo.tag_service.RfidTagIndexController/CreateRfidReturnInspectEntities"
	RfidTagIndexController_CreateRfidStockInOutEntities_FullMethodName      = "/ito_rfid_mongo.tag_service.RfidTagIndexController/CreateRfidStockInOutEntities"
	RfidTagIndexController_Destroy_FullMethodName                           = "/ito_rfid_mongo.tag_service.RfidTagIndexController/Destroy"
	RfidTagIndexController_DestroyReturnInspectAgg_FullMethodName           = "/ito_rfid_mongo.tag_service.RfidTagIndexController/DestroyReturnInspectAgg"
	RfidTagIndexController_DestroyRfidPublishEntities_FullMethodName        = "/ito_rfid_mongo.tag_service.RfidTagIndexController/DestroyRfidPublishEntities"
	RfidTagIndexController_DestroyRfidQualityEntities_FullMethodName        = "/ito_rfid_mongo.tag_service.RfidTagIndexController/DestroyRfidQualityEntities"
	RfidTagIndexController_DestroyRfidReasonEntities_FullMethodName         = "/ito_rfid_mongo.tag_service.RfidTagIndexController/DestroyRfidReasonEntities"
	RfidTagIndexController_DestroyRfidReturnInspectConfig_FullMethodName    = "/ito_rfid_mongo.tag_service.RfidTagIndexController/DestroyRfidReturnInspectConfig"
	RfidTagIndexController_DestroyRfidReturnInspectEntities_FullMethodName  = "/ito_rfid_mongo.tag_service.RfidTagIndexController/DestroyRfidReturnInspectEntities"
	RfidTagIndexController_DestroyRfidStockInOutEntities_FullMethodName     = "/ito_rfid_mongo.tag_service.RfidTagIndexController/DestroyRfidStockInOutEntities"
	RfidTagIndexController_InspectConfigOptions_FullMethodName              = "/ito_rfid_mongo.tag_service.RfidTagIndexController/InspectConfigOptions"
	RfidTagIndexController_List_FullMethodName                              = "/ito_rfid_mongo.tag_service.RfidTagIndexController/List"
	RfidTagIndexController_ListRfidPublishEntities_FullMethodName           = "/ito_rfid_mongo.tag_service.RfidTagIndexController/ListRfidPublishEntities"
	RfidTagIndexController_ListRfidQualityEntities_FullMethodName           = "/ito_rfid_mongo.tag_service.RfidTagIndexController/ListRfidQualityEntities"
	RfidTagIndexController_ListRfidReasonEntities_FullMethodName            = "/ito_rfid_mongo.tag_service.RfidTagIndexController/ListRfidReasonEntities"
	RfidTagIndexController_ListRfidReturnInspectAgg_FullMethodName          = "/ito_rfid_mongo.tag_service.RfidTagIndexController/ListRfidReturnInspectAgg"
	RfidTagIndexController_ListRfidReturnInspectConfig_FullMethodName       = "/ito_rfid_mongo.tag_service.RfidTagIndexController/ListRfidReturnInspectConfig"
	RfidTagIndexController_ListRfidReturnInspectEntities_FullMethodName     = "/ito_rfid_mongo.tag_service.RfidTagIndexController/ListRfidReturnInspectEntities"
	RfidTagIndexController_ListRfidStockInOutEntities_FullMethodName        = "/ito_rfid_mongo.tag_service.RfidTagIndexController/ListRfidStockInOutEntities"
	RfidTagIndexController_PartialUpdate_FullMethodName                     = "/ito_rfid_mongo.tag_service.RfidTagIndexController/PartialUpdate"
	RfidTagIndexController_Retrieve_FullMethodName                          = "/ito_rfid_mongo.tag_service.RfidTagIndexController/Retrieve"
	RfidTagIndexController_RetrieveReturnInspectAgg_FullMethodName          = "/ito_rfid_mongo.tag_service.RfidTagIndexController/RetrieveReturnInspectAgg"
	RfidTagIndexController_RetrieveRfidPublishEntities_FullMethodName       = "/ito_rfid_mongo.tag_service.RfidTagIndexController/RetrieveRfidPublishEntities"
	RfidTagIndexController_RetrieveRfidQualityEntities_FullMethodName       = "/ito_rfid_mongo.tag_service.RfidTagIndexController/RetrieveRfidQualityEntities"
	RfidTagIndexController_RetrieveRfidReasonEntities_FullMethodName        = "/ito_rfid_mongo.tag_service.RfidTagIndexController/RetrieveRfidReasonEntities"
	RfidTagIndexController_RetrieveRfidReturnInspectConfig_FullMethodName   = "/ito_rfid_mongo.tag_service.RfidTagIndexController/RetrieveRfidReturnInspectConfig"
	RfidTagIndexController_RetrieveRfidReturnInspectEntities_FullMethodName = "/ito_rfid_mongo.tag_service.RfidTagIndexController/RetrieveRfidReturnInspectEntities"
	RfidTagIndexController_RetrieveRfidStockInOutEntities_FullMethodName    = "/ito_rfid_mongo.tag_service.RfidTagIndexController/RetrieveRfidStockInOutEntities"
	RfidTagIndexController_RfidEpcCheckOptionsQuery_FullMethodName          = "/ito_rfid_mongo.tag_service.RfidTagIndexController/RfidEpcCheckOptionsQuery"
	RfidTagIndexController_RfidEpcSync_FullMethodName                       = "/ito_rfid_mongo.tag_service.RfidTagIndexController/RfidEpcSync"
	RfidTagIndexController_RfidReturnInspectAggSync_FullMethodName          = "/ito_rfid_mongo.tag_service.RfidTagIndexController/RfidReturnInspectAggSync"
	RfidTagIndexController_Update_FullMethodName                            = "/ito_rfid_mongo.tag_service.RfidTagIndexController/Update"
	RfidTagIndexController_UpdateRfidPublishEntities_FullMethodName         = "/ito_rfid_mongo.tag_service.RfidTagIndexController/UpdateRfidPublishEntities"
	RfidTagIndexController_UpdateRfidQualityEntities_FullMethodName         = "/ito_rfid_mongo.tag_service.RfidTagIndexController/UpdateRfidQualityEntities"
	RfidTagIndexController_UpdateRfidReasonEntities_FullMethodName          = "/ito_rfid_mongo.tag_service.RfidTagIndexController/UpdateRfidReasonEntities"
	RfidTagIndexController_UpdateRfidReturnInspectConfig_FullMethodName     = "/ito_rfid_mongo.tag_service.RfidTagIndexController/UpdateRfidReturnInspectConfig"
	RfidTagIndexController_UpdateRfidReturnInspectEntities_FullMethodName   = "/ito_rfid_mongo.tag_service.RfidTagIndexController/UpdateRfidReturnInspectEntities"
	RfidTagIndexController_UpdateRfidStockInOutEntities_FullMethodName      = "/ito_rfid_mongo.tag_service.RfidTagIndexController/UpdateRfidStockInOutEntities"
)

// RfidTagIndexControllerClient is the client API for RfidTagIndexController service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type RfidTagIndexControllerClient interface {
	BulkPushReturnInspectAgg(ctx context.Context, in *BulkPushReturnInspectAggRequest, opts ...grpc.CallOption) (*BulkPushReturnInspectAggResponse, error)
	Create(ctx context.Context, in *RfidTagIndexRequest, opts ...grpc.CallOption) (*RfidTagIndexResponse, error)
	CreateRfidPublishEntities(ctx context.Context, in *RfidPublishEntitiesCreateRequest, opts ...grpc.CallOption) (*RfidPublishEntitiesResponse, error)
	CreateRfidQualityEntities(ctx context.Context, in *RfidQualityEntitiesCreateRequest, opts ...grpc.CallOption) (*RfidQualityEntitiesResponse, error)
	CreateRfidReasonEntities(ctx context.Context, in *RfidReasonEntitiesCreateRequest, opts ...grpc.CallOption) (*RfidReasonEntitiesResponse, error)
	CreateRfidReturnInspectConfig(ctx context.Context, in *RfidReturnInspectConfigCreateRequest, opts ...grpc.CallOption) (*RfidReturnInspectConfigResponse, error)
	CreateRfidReturnInspectEntities(ctx context.Context, in *RfidReturnInspectEntitiesCreateRequest, opts ...grpc.CallOption) (*RfidReturnInspectEntitiesResponse, error)
	CreateRfidStockInOutEntities(ctx context.Context, in *RfidStockInOutEntitiesCreateRequest, opts ...grpc.CallOption) (*RfidStockInOutEntitiesResponse, error)
	Destroy(ctx context.Context, in *RfidTagIndexDestroyRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DestroyReturnInspectAgg(ctx context.Context, in *DestroyReturnInspectAggRequest, opts ...grpc.CallOption) (*DestroyReturnInspectAggResponse, error)
	DestroyRfidPublishEntities(ctx context.Context, in *RfidPublishEntitiesDestroyRequest, opts ...grpc.CallOption) (*RfidTagIndexDestroyRfidPublishEntitiesResponse, error)
	DestroyRfidQualityEntities(ctx context.Context, in *RfidQualityEntitiesDestroyRequest, opts ...grpc.CallOption) (*RfidTagIndexDestroyRfidQualityEntitiesResponse, error)
	DestroyRfidReasonEntities(ctx context.Context, in *RfidReasonEntitiesDestroyRequest, opts ...grpc.CallOption) (*RfidTagIndexDestroyRfidReasonEntitiesResponse, error)
	DestroyRfidReturnInspectConfig(ctx context.Context, in *RfidReturnInspectConfigDestroyRequest, opts ...grpc.CallOption) (*RfidTagIndexDestroyRfidReturnInspectConfigResponse, error)
	DestroyRfidReturnInspectEntities(ctx context.Context, in *RfidReturnInspectEntitiesDestroyRequest, opts ...grpc.CallOption) (*RfidTagIndexDestroyRfidReturnInspectEntitiesResponse, error)
	DestroyRfidStockInOutEntities(ctx context.Context, in *RfidStockInOutEntitiesDestroyRequest, opts ...grpc.CallOption) (*RfidTagIndexDestroyRfidStockInOutEntitiesResponse, error)
	InspectConfigOptions(ctx context.Context, in *InspectConfigOptionsRequest, opts ...grpc.CallOption) (*InspectConfigOptionsResponse, error)
	List(ctx context.Context, in *RfidTagIndexListRequest, opts ...grpc.CallOption) (*RfidTagIndexListResponse, error)
	ListRfidPublishEntities(ctx context.Context, in *RfidPublishEntitiesListRequest, opts ...grpc.CallOption) (*RfidPublishEntitiesListResponse, error)
	ListRfidQualityEntities(ctx context.Context, in *RfidQualityEntitiesListRequest, opts ...grpc.CallOption) (*RfidQualityEntitiesListResponse, error)
	ListRfidReasonEntities(ctx context.Context, in *RfidReasonEntitiesListRequest, opts ...grpc.CallOption) (*RfidReasonEntitiesListResponse, error)
	ListRfidReturnInspectAgg(ctx context.Context, in *RfidReturnInspectAggListRequest, opts ...grpc.CallOption) (*RfidReturnInspectAggListResponse, error)
	ListRfidReturnInspectConfig(ctx context.Context, in *RfidReturnInspectConfigListRequest, opts ...grpc.CallOption) (*RfidReturnInspectConfigListResponse, error)
	ListRfidReturnInspectEntities(ctx context.Context, in *RfidReturnInspectEntitiesListRequest, opts ...grpc.CallOption) (*RfidReturnInspectEntitiesListResponse, error)
	ListRfidStockInOutEntities(ctx context.Context, in *RfidStockInOutEntitiesListRequest, opts ...grpc.CallOption) (*RfidStockInOutEntitiesListResponse, error)
	PartialUpdate(ctx context.Context, in *RfidTagIndexPartialUpdateRequest, opts ...grpc.CallOption) (*RfidTagIndexResponse, error)
	Retrieve(ctx context.Context, in *RfidTagIndexRetrieveRequest, opts ...grpc.CallOption) (*RfidTagIndexResponse, error)
	RetrieveReturnInspectAgg(ctx context.Context, in *RetrieveReturnInspectAggRequest, opts ...grpc.CallOption) (*RfidReturnInspectAggResponse, error)
	RetrieveRfidPublishEntities(ctx context.Context, in *RfidPublishEntitiesRetrieveRequest, opts ...grpc.CallOption) (*RfidPublishEntitiesResponse, error)
	RetrieveRfidQualityEntities(ctx context.Context, in *RfidQualityEntitiesRetrieveRequest, opts ...grpc.CallOption) (*RfidQualityEntitiesResponse, error)
	RetrieveRfidReasonEntities(ctx context.Context, in *RfidReasonEntitiesRetrieveRequest, opts ...grpc.CallOption) (*RfidReasonEntitiesResponse, error)
	RetrieveRfidReturnInspectConfig(ctx context.Context, in *RfidReturnInspectConfigRetrieveRequest, opts ...grpc.CallOption) (*RfidReturnInspectConfigResponse, error)
	RetrieveRfidReturnInspectEntities(ctx context.Context, in *RfidReturnInspectEntitiesRetrieveRequest, opts ...grpc.CallOption) (*RfidReturnInspectEntitiesResponse, error)
	RetrieveRfidStockInOutEntities(ctx context.Context, in *RfidStockInOutEntitiesRetrieveRequest, opts ...grpc.CallOption) (*RfidStockInOutEntitiesResponse, error)
	RfidEpcCheckOptionsQuery(ctx context.Context, in *RfidTagIndexRfidEpcCheckOptionsQueryRequest, opts ...grpc.CallOption) (*RfidEpcCheckResponse, error)
	RfidEpcSync(ctx context.Context, in *EpcSyncRequest, opts ...grpc.CallOption) (*EpcSyncResponse, error)
	RfidReturnInspectAggSync(ctx context.Context, in *RfidReturnInspectAggSyncRequest, opts ...grpc.CallOption) (*RfidReturnInspectAggSyncResponse, error)
	Update(ctx context.Context, in *RfidTagIndexRequest, opts ...grpc.CallOption) (*RfidTagIndexResponse, error)
	UpdateRfidPublishEntities(ctx context.Context, in *RfidPublishEntitiesUpdateRequest, opts ...grpc.CallOption) (*RfidPublishEntitiesResponse, error)
	UpdateRfidQualityEntities(ctx context.Context, in *RfidQualityEntitiesUpdateRequest, opts ...grpc.CallOption) (*RfidQualityEntitiesResponse, error)
	UpdateRfidReasonEntities(ctx context.Context, in *RfidReasonEntitiesUpdateRequest, opts ...grpc.CallOption) (*RfidReasonEntitiesResponse, error)
	UpdateRfidReturnInspectConfig(ctx context.Context, in *RfidReturnInspectConfigUpdateRequest, opts ...grpc.CallOption) (*RfidReturnInspectConfigResponse, error)
	UpdateRfidReturnInspectEntities(ctx context.Context, in *RfidReturnInspectEntitiesUpdateRequest, opts ...grpc.CallOption) (*RfidReturnInspectEntitiesResponse, error)
	UpdateRfidStockInOutEntities(ctx context.Context, in *RfidStockInOutEntitiesUpdateRequest, opts ...grpc.CallOption) (*RfidStockInOutEntitiesResponse, error)
}

type rfidTagIndexControllerClient struct {
	cc grpc.ClientConnInterface
}

func NewRfidTagIndexControllerClient(cc grpc.ClientConnInterface) RfidTagIndexControllerClient {
	return &rfidTagIndexControllerClient{cc}
}

func (c *rfidTagIndexControllerClient) BulkPushReturnInspectAgg(ctx context.Context, in *BulkPushReturnInspectAggRequest, opts ...grpc.CallOption) (*BulkPushReturnInspectAggResponse, error) {
	out := new(BulkPushReturnInspectAggResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_BulkPushReturnInspectAgg_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) Create(ctx context.Context, in *RfidTagIndexRequest, opts ...grpc.CallOption) (*RfidTagIndexResponse, error) {
	out := new(RfidTagIndexResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_Create_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) CreateRfidPublishEntities(ctx context.Context, in *RfidPublishEntitiesCreateRequest, opts ...grpc.CallOption) (*RfidPublishEntitiesResponse, error) {
	out := new(RfidPublishEntitiesResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_CreateRfidPublishEntities_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) CreateRfidQualityEntities(ctx context.Context, in *RfidQualityEntitiesCreateRequest, opts ...grpc.CallOption) (*RfidQualityEntitiesResponse, error) {
	out := new(RfidQualityEntitiesResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_CreateRfidQualityEntities_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) CreateRfidReasonEntities(ctx context.Context, in *RfidReasonEntitiesCreateRequest, opts ...grpc.CallOption) (*RfidReasonEntitiesResponse, error) {
	out := new(RfidReasonEntitiesResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_CreateRfidReasonEntities_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) CreateRfidReturnInspectConfig(ctx context.Context, in *RfidReturnInspectConfigCreateRequest, opts ...grpc.CallOption) (*RfidReturnInspectConfigResponse, error) {
	out := new(RfidReturnInspectConfigResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_CreateRfidReturnInspectConfig_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) CreateRfidReturnInspectEntities(ctx context.Context, in *RfidReturnInspectEntitiesCreateRequest, opts ...grpc.CallOption) (*RfidReturnInspectEntitiesResponse, error) {
	out := new(RfidReturnInspectEntitiesResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_CreateRfidReturnInspectEntities_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) CreateRfidStockInOutEntities(ctx context.Context, in *RfidStockInOutEntitiesCreateRequest, opts ...grpc.CallOption) (*RfidStockInOutEntitiesResponse, error) {
	out := new(RfidStockInOutEntitiesResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_CreateRfidStockInOutEntities_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) Destroy(ctx context.Context, in *RfidTagIndexDestroyRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, RfidTagIndexController_Destroy_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) DestroyReturnInspectAgg(ctx context.Context, in *DestroyReturnInspectAggRequest, opts ...grpc.CallOption) (*DestroyReturnInspectAggResponse, error) {
	out := new(DestroyReturnInspectAggResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_DestroyReturnInspectAgg_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) DestroyRfidPublishEntities(ctx context.Context, in *RfidPublishEntitiesDestroyRequest, opts ...grpc.CallOption) (*RfidTagIndexDestroyRfidPublishEntitiesResponse, error) {
	out := new(RfidTagIndexDestroyRfidPublishEntitiesResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_DestroyRfidPublishEntities_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) DestroyRfidQualityEntities(ctx context.Context, in *RfidQualityEntitiesDestroyRequest, opts ...grpc.CallOption) (*RfidTagIndexDestroyRfidQualityEntitiesResponse, error) {
	out := new(RfidTagIndexDestroyRfidQualityEntitiesResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_DestroyRfidQualityEntities_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) DestroyRfidReasonEntities(ctx context.Context, in *RfidReasonEntitiesDestroyRequest, opts ...grpc.CallOption) (*RfidTagIndexDestroyRfidReasonEntitiesResponse, error) {
	out := new(RfidTagIndexDestroyRfidReasonEntitiesResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_DestroyRfidReasonEntities_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) DestroyRfidReturnInspectConfig(ctx context.Context, in *RfidReturnInspectConfigDestroyRequest, opts ...grpc.CallOption) (*RfidTagIndexDestroyRfidReturnInspectConfigResponse, error) {
	out := new(RfidTagIndexDestroyRfidReturnInspectConfigResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_DestroyRfidReturnInspectConfig_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) DestroyRfidReturnInspectEntities(ctx context.Context, in *RfidReturnInspectEntitiesDestroyRequest, opts ...grpc.CallOption) (*RfidTagIndexDestroyRfidReturnInspectEntitiesResponse, error) {
	out := new(RfidTagIndexDestroyRfidReturnInspectEntitiesResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_DestroyRfidReturnInspectEntities_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) DestroyRfidStockInOutEntities(ctx context.Context, in *RfidStockInOutEntitiesDestroyRequest, opts ...grpc.CallOption) (*RfidTagIndexDestroyRfidStockInOutEntitiesResponse, error) {
	out := new(RfidTagIndexDestroyRfidStockInOutEntitiesResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_DestroyRfidStockInOutEntities_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) InspectConfigOptions(ctx context.Context, in *InspectConfigOptionsRequest, opts ...grpc.CallOption) (*InspectConfigOptionsResponse, error) {
	out := new(InspectConfigOptionsResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_InspectConfigOptions_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) List(ctx context.Context, in *RfidTagIndexListRequest, opts ...grpc.CallOption) (*RfidTagIndexListResponse, error) {
	out := new(RfidTagIndexListResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_List_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) ListRfidPublishEntities(ctx context.Context, in *RfidPublishEntitiesListRequest, opts ...grpc.CallOption) (*RfidPublishEntitiesListResponse, error) {
	out := new(RfidPublishEntitiesListResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_ListRfidPublishEntities_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) ListRfidQualityEntities(ctx context.Context, in *RfidQualityEntitiesListRequest, opts ...grpc.CallOption) (*RfidQualityEntitiesListResponse, error) {
	out := new(RfidQualityEntitiesListResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_ListRfidQualityEntities_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) ListRfidReasonEntities(ctx context.Context, in *RfidReasonEntitiesListRequest, opts ...grpc.CallOption) (*RfidReasonEntitiesListResponse, error) {
	out := new(RfidReasonEntitiesListResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_ListRfidReasonEntities_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) ListRfidReturnInspectAgg(ctx context.Context, in *RfidReturnInspectAggListRequest, opts ...grpc.CallOption) (*RfidReturnInspectAggListResponse, error) {
	out := new(RfidReturnInspectAggListResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_ListRfidReturnInspectAgg_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) ListRfidReturnInspectConfig(ctx context.Context, in *RfidReturnInspectConfigListRequest, opts ...grpc.CallOption) (*RfidReturnInspectConfigListResponse, error) {
	out := new(RfidReturnInspectConfigListResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_ListRfidReturnInspectConfig_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) ListRfidReturnInspectEntities(ctx context.Context, in *RfidReturnInspectEntitiesListRequest, opts ...grpc.CallOption) (*RfidReturnInspectEntitiesListResponse, error) {
	out := new(RfidReturnInspectEntitiesListResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_ListRfidReturnInspectEntities_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) ListRfidStockInOutEntities(ctx context.Context, in *RfidStockInOutEntitiesListRequest, opts ...grpc.CallOption) (*RfidStockInOutEntitiesListResponse, error) {
	out := new(RfidStockInOutEntitiesListResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_ListRfidStockInOutEntities_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) PartialUpdate(ctx context.Context, in *RfidTagIndexPartialUpdateRequest, opts ...grpc.CallOption) (*RfidTagIndexResponse, error) {
	out := new(RfidTagIndexResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_PartialUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) Retrieve(ctx context.Context, in *RfidTagIndexRetrieveRequest, opts ...grpc.CallOption) (*RfidTagIndexResponse, error) {
	out := new(RfidTagIndexResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_Retrieve_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) RetrieveReturnInspectAgg(ctx context.Context, in *RetrieveReturnInspectAggRequest, opts ...grpc.CallOption) (*RfidReturnInspectAggResponse, error) {
	out := new(RfidReturnInspectAggResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_RetrieveReturnInspectAgg_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) RetrieveRfidPublishEntities(ctx context.Context, in *RfidPublishEntitiesRetrieveRequest, opts ...grpc.CallOption) (*RfidPublishEntitiesResponse, error) {
	out := new(RfidPublishEntitiesResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_RetrieveRfidPublishEntities_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) RetrieveRfidQualityEntities(ctx context.Context, in *RfidQualityEntitiesRetrieveRequest, opts ...grpc.CallOption) (*RfidQualityEntitiesResponse, error) {
	out := new(RfidQualityEntitiesResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_RetrieveRfidQualityEntities_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) RetrieveRfidReasonEntities(ctx context.Context, in *RfidReasonEntitiesRetrieveRequest, opts ...grpc.CallOption) (*RfidReasonEntitiesResponse, error) {
	out := new(RfidReasonEntitiesResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_RetrieveRfidReasonEntities_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) RetrieveRfidReturnInspectConfig(ctx context.Context, in *RfidReturnInspectConfigRetrieveRequest, opts ...grpc.CallOption) (*RfidReturnInspectConfigResponse, error) {
	out := new(RfidReturnInspectConfigResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_RetrieveRfidReturnInspectConfig_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) RetrieveRfidReturnInspectEntities(ctx context.Context, in *RfidReturnInspectEntitiesRetrieveRequest, opts ...grpc.CallOption) (*RfidReturnInspectEntitiesResponse, error) {
	out := new(RfidReturnInspectEntitiesResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_RetrieveRfidReturnInspectEntities_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) RetrieveRfidStockInOutEntities(ctx context.Context, in *RfidStockInOutEntitiesRetrieveRequest, opts ...grpc.CallOption) (*RfidStockInOutEntitiesResponse, error) {
	out := new(RfidStockInOutEntitiesResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_RetrieveRfidStockInOutEntities_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) RfidEpcCheckOptionsQuery(ctx context.Context, in *RfidTagIndexRfidEpcCheckOptionsQueryRequest, opts ...grpc.CallOption) (*RfidEpcCheckResponse, error) {
	out := new(RfidEpcCheckResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_RfidEpcCheckOptionsQuery_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) RfidEpcSync(ctx context.Context, in *EpcSyncRequest, opts ...grpc.CallOption) (*EpcSyncResponse, error) {
	out := new(EpcSyncResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_RfidEpcSync_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) RfidReturnInspectAggSync(ctx context.Context, in *RfidReturnInspectAggSyncRequest, opts ...grpc.CallOption) (*RfidReturnInspectAggSyncResponse, error) {
	out := new(RfidReturnInspectAggSyncResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_RfidReturnInspectAggSync_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) Update(ctx context.Context, in *RfidTagIndexRequest, opts ...grpc.CallOption) (*RfidTagIndexResponse, error) {
	out := new(RfidTagIndexResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_Update_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) UpdateRfidPublishEntities(ctx context.Context, in *RfidPublishEntitiesUpdateRequest, opts ...grpc.CallOption) (*RfidPublishEntitiesResponse, error) {
	out := new(RfidPublishEntitiesResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_UpdateRfidPublishEntities_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) UpdateRfidQualityEntities(ctx context.Context, in *RfidQualityEntitiesUpdateRequest, opts ...grpc.CallOption) (*RfidQualityEntitiesResponse, error) {
	out := new(RfidQualityEntitiesResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_UpdateRfidQualityEntities_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) UpdateRfidReasonEntities(ctx context.Context, in *RfidReasonEntitiesUpdateRequest, opts ...grpc.CallOption) (*RfidReasonEntitiesResponse, error) {
	out := new(RfidReasonEntitiesResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_UpdateRfidReasonEntities_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) UpdateRfidReturnInspectConfig(ctx context.Context, in *RfidReturnInspectConfigUpdateRequest, opts ...grpc.CallOption) (*RfidReturnInspectConfigResponse, error) {
	out := new(RfidReturnInspectConfigResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_UpdateRfidReturnInspectConfig_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) UpdateRfidReturnInspectEntities(ctx context.Context, in *RfidReturnInspectEntitiesUpdateRequest, opts ...grpc.CallOption) (*RfidReturnInspectEntitiesResponse, error) {
	out := new(RfidReturnInspectEntitiesResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_UpdateRfidReturnInspectEntities_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTagIndexControllerClient) UpdateRfidStockInOutEntities(ctx context.Context, in *RfidStockInOutEntitiesUpdateRequest, opts ...grpc.CallOption) (*RfidStockInOutEntitiesResponse, error) {
	out := new(RfidStockInOutEntitiesResponse)
	err := c.cc.Invoke(ctx, RfidTagIndexController_UpdateRfidStockInOutEntities_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RfidTagIndexControllerServer is the server API for RfidTagIndexController service.
// All implementations must embed UnimplementedRfidTagIndexControllerServer
// for forward compatibility
type RfidTagIndexControllerServer interface {
	BulkPushReturnInspectAgg(context.Context, *BulkPushReturnInspectAggRequest) (*BulkPushReturnInspectAggResponse, error)
	Create(context.Context, *RfidTagIndexRequest) (*RfidTagIndexResponse, error)
	CreateRfidPublishEntities(context.Context, *RfidPublishEntitiesCreateRequest) (*RfidPublishEntitiesResponse, error)
	CreateRfidQualityEntities(context.Context, *RfidQualityEntitiesCreateRequest) (*RfidQualityEntitiesResponse, error)
	CreateRfidReasonEntities(context.Context, *RfidReasonEntitiesCreateRequest) (*RfidReasonEntitiesResponse, error)
	CreateRfidReturnInspectConfig(context.Context, *RfidReturnInspectConfigCreateRequest) (*RfidReturnInspectConfigResponse, error)
	CreateRfidReturnInspectEntities(context.Context, *RfidReturnInspectEntitiesCreateRequest) (*RfidReturnInspectEntitiesResponse, error)
	CreateRfidStockInOutEntities(context.Context, *RfidStockInOutEntitiesCreateRequest) (*RfidStockInOutEntitiesResponse, error)
	Destroy(context.Context, *RfidTagIndexDestroyRequest) (*emptypb.Empty, error)
	DestroyReturnInspectAgg(context.Context, *DestroyReturnInspectAggRequest) (*DestroyReturnInspectAggResponse, error)
	DestroyRfidPublishEntities(context.Context, *RfidPublishEntitiesDestroyRequest) (*RfidTagIndexDestroyRfidPublishEntitiesResponse, error)
	DestroyRfidQualityEntities(context.Context, *RfidQualityEntitiesDestroyRequest) (*RfidTagIndexDestroyRfidQualityEntitiesResponse, error)
	DestroyRfidReasonEntities(context.Context, *RfidReasonEntitiesDestroyRequest) (*RfidTagIndexDestroyRfidReasonEntitiesResponse, error)
	DestroyRfidReturnInspectConfig(context.Context, *RfidReturnInspectConfigDestroyRequest) (*RfidTagIndexDestroyRfidReturnInspectConfigResponse, error)
	DestroyRfidReturnInspectEntities(context.Context, *RfidReturnInspectEntitiesDestroyRequest) (*RfidTagIndexDestroyRfidReturnInspectEntitiesResponse, error)
	DestroyRfidStockInOutEntities(context.Context, *RfidStockInOutEntitiesDestroyRequest) (*RfidTagIndexDestroyRfidStockInOutEntitiesResponse, error)
	InspectConfigOptions(context.Context, *InspectConfigOptionsRequest) (*InspectConfigOptionsResponse, error)
	List(context.Context, *RfidTagIndexListRequest) (*RfidTagIndexListResponse, error)
	ListRfidPublishEntities(context.Context, *RfidPublishEntitiesListRequest) (*RfidPublishEntitiesListResponse, error)
	ListRfidQualityEntities(context.Context, *RfidQualityEntitiesListRequest) (*RfidQualityEntitiesListResponse, error)
	ListRfidReasonEntities(context.Context, *RfidReasonEntitiesListRequest) (*RfidReasonEntitiesListResponse, error)
	ListRfidReturnInspectAgg(context.Context, *RfidReturnInspectAggListRequest) (*RfidReturnInspectAggListResponse, error)
	ListRfidReturnInspectConfig(context.Context, *RfidReturnInspectConfigListRequest) (*RfidReturnInspectConfigListResponse, error)
	ListRfidReturnInspectEntities(context.Context, *RfidReturnInspectEntitiesListRequest) (*RfidReturnInspectEntitiesListResponse, error)
	ListRfidStockInOutEntities(context.Context, *RfidStockInOutEntitiesListRequest) (*RfidStockInOutEntitiesListResponse, error)
	PartialUpdate(context.Context, *RfidTagIndexPartialUpdateRequest) (*RfidTagIndexResponse, error)
	Retrieve(context.Context, *RfidTagIndexRetrieveRequest) (*RfidTagIndexResponse, error)
	RetrieveReturnInspectAgg(context.Context, *RetrieveReturnInspectAggRequest) (*RfidReturnInspectAggResponse, error)
	RetrieveRfidPublishEntities(context.Context, *RfidPublishEntitiesRetrieveRequest) (*RfidPublishEntitiesResponse, error)
	RetrieveRfidQualityEntities(context.Context, *RfidQualityEntitiesRetrieveRequest) (*RfidQualityEntitiesResponse, error)
	RetrieveRfidReasonEntities(context.Context, *RfidReasonEntitiesRetrieveRequest) (*RfidReasonEntitiesResponse, error)
	RetrieveRfidReturnInspectConfig(context.Context, *RfidReturnInspectConfigRetrieveRequest) (*RfidReturnInspectConfigResponse, error)
	RetrieveRfidReturnInspectEntities(context.Context, *RfidReturnInspectEntitiesRetrieveRequest) (*RfidReturnInspectEntitiesResponse, error)
	RetrieveRfidStockInOutEntities(context.Context, *RfidStockInOutEntitiesRetrieveRequest) (*RfidStockInOutEntitiesResponse, error)
	RfidEpcCheckOptionsQuery(context.Context, *RfidTagIndexRfidEpcCheckOptionsQueryRequest) (*RfidEpcCheckResponse, error)
	RfidEpcSync(context.Context, *EpcSyncRequest) (*EpcSyncResponse, error)
	RfidReturnInspectAggSync(context.Context, *RfidReturnInspectAggSyncRequest) (*RfidReturnInspectAggSyncResponse, error)
	Update(context.Context, *RfidTagIndexRequest) (*RfidTagIndexResponse, error)
	UpdateRfidPublishEntities(context.Context, *RfidPublishEntitiesUpdateRequest) (*RfidPublishEntitiesResponse, error)
	UpdateRfidQualityEntities(context.Context, *RfidQualityEntitiesUpdateRequest) (*RfidQualityEntitiesResponse, error)
	UpdateRfidReasonEntities(context.Context, *RfidReasonEntitiesUpdateRequest) (*RfidReasonEntitiesResponse, error)
	UpdateRfidReturnInspectConfig(context.Context, *RfidReturnInspectConfigUpdateRequest) (*RfidReturnInspectConfigResponse, error)
	UpdateRfidReturnInspectEntities(context.Context, *RfidReturnInspectEntitiesUpdateRequest) (*RfidReturnInspectEntitiesResponse, error)
	UpdateRfidStockInOutEntities(context.Context, *RfidStockInOutEntitiesUpdateRequest) (*RfidStockInOutEntitiesResponse, error)
	mustEmbedUnimplementedRfidTagIndexControllerServer()
}

// UnimplementedRfidTagIndexControllerServer must be embedded to have forward compatible implementations.
type UnimplementedRfidTagIndexControllerServer struct {
}

func (UnimplementedRfidTagIndexControllerServer) BulkPushReturnInspectAgg(context.Context, *BulkPushReturnInspectAggRequest) (*BulkPushReturnInspectAggResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BulkPushReturnInspectAgg not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) Create(context.Context, *RfidTagIndexRequest) (*RfidTagIndexResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) CreateRfidPublishEntities(context.Context, *RfidPublishEntitiesCreateRequest) (*RfidPublishEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRfidPublishEntities not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) CreateRfidQualityEntities(context.Context, *RfidQualityEntitiesCreateRequest) (*RfidQualityEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRfidQualityEntities not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) CreateRfidReasonEntities(context.Context, *RfidReasonEntitiesCreateRequest) (*RfidReasonEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRfidReasonEntities not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) CreateRfidReturnInspectConfig(context.Context, *RfidReturnInspectConfigCreateRequest) (*RfidReturnInspectConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRfidReturnInspectConfig not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) CreateRfidReturnInspectEntities(context.Context, *RfidReturnInspectEntitiesCreateRequest) (*RfidReturnInspectEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRfidReturnInspectEntities not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) CreateRfidStockInOutEntities(context.Context, *RfidStockInOutEntitiesCreateRequest) (*RfidStockInOutEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRfidStockInOutEntities not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) Destroy(context.Context, *RfidTagIndexDestroyRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Destroy not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) DestroyReturnInspectAgg(context.Context, *DestroyReturnInspectAggRequest) (*DestroyReturnInspectAggResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyReturnInspectAgg not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) DestroyRfidPublishEntities(context.Context, *RfidPublishEntitiesDestroyRequest) (*RfidTagIndexDestroyRfidPublishEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyRfidPublishEntities not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) DestroyRfidQualityEntities(context.Context, *RfidQualityEntitiesDestroyRequest) (*RfidTagIndexDestroyRfidQualityEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyRfidQualityEntities not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) DestroyRfidReasonEntities(context.Context, *RfidReasonEntitiesDestroyRequest) (*RfidTagIndexDestroyRfidReasonEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyRfidReasonEntities not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) DestroyRfidReturnInspectConfig(context.Context, *RfidReturnInspectConfigDestroyRequest) (*RfidTagIndexDestroyRfidReturnInspectConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyRfidReturnInspectConfig not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) DestroyRfidReturnInspectEntities(context.Context, *RfidReturnInspectEntitiesDestroyRequest) (*RfidTagIndexDestroyRfidReturnInspectEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyRfidReturnInspectEntities not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) DestroyRfidStockInOutEntities(context.Context, *RfidStockInOutEntitiesDestroyRequest) (*RfidTagIndexDestroyRfidStockInOutEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyRfidStockInOutEntities not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) InspectConfigOptions(context.Context, *InspectConfigOptionsRequest) (*InspectConfigOptionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InspectConfigOptions not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) List(context.Context, *RfidTagIndexListRequest) (*RfidTagIndexListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) ListRfidPublishEntities(context.Context, *RfidPublishEntitiesListRequest) (*RfidPublishEntitiesListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRfidPublishEntities not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) ListRfidQualityEntities(context.Context, *RfidQualityEntitiesListRequest) (*RfidQualityEntitiesListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRfidQualityEntities not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) ListRfidReasonEntities(context.Context, *RfidReasonEntitiesListRequest) (*RfidReasonEntitiesListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRfidReasonEntities not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) ListRfidReturnInspectAgg(context.Context, *RfidReturnInspectAggListRequest) (*RfidReturnInspectAggListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRfidReturnInspectAgg not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) ListRfidReturnInspectConfig(context.Context, *RfidReturnInspectConfigListRequest) (*RfidReturnInspectConfigListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRfidReturnInspectConfig not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) ListRfidReturnInspectEntities(context.Context, *RfidReturnInspectEntitiesListRequest) (*RfidReturnInspectEntitiesListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRfidReturnInspectEntities not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) ListRfidStockInOutEntities(context.Context, *RfidStockInOutEntitiesListRequest) (*RfidStockInOutEntitiesListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRfidStockInOutEntities not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) PartialUpdate(context.Context, *RfidTagIndexPartialUpdateRequest) (*RfidTagIndexResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PartialUpdate not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) Retrieve(context.Context, *RfidTagIndexRetrieveRequest) (*RfidTagIndexResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Retrieve not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) RetrieveReturnInspectAgg(context.Context, *RetrieveReturnInspectAggRequest) (*RfidReturnInspectAggResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveReturnInspectAgg not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) RetrieveRfidPublishEntities(context.Context, *RfidPublishEntitiesRetrieveRequest) (*RfidPublishEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveRfidPublishEntities not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) RetrieveRfidQualityEntities(context.Context, *RfidQualityEntitiesRetrieveRequest) (*RfidQualityEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveRfidQualityEntities not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) RetrieveRfidReasonEntities(context.Context, *RfidReasonEntitiesRetrieveRequest) (*RfidReasonEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveRfidReasonEntities not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) RetrieveRfidReturnInspectConfig(context.Context, *RfidReturnInspectConfigRetrieveRequest) (*RfidReturnInspectConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveRfidReturnInspectConfig not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) RetrieveRfidReturnInspectEntities(context.Context, *RfidReturnInspectEntitiesRetrieveRequest) (*RfidReturnInspectEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveRfidReturnInspectEntities not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) RetrieveRfidStockInOutEntities(context.Context, *RfidStockInOutEntitiesRetrieveRequest) (*RfidStockInOutEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveRfidStockInOutEntities not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) RfidEpcCheckOptionsQuery(context.Context, *RfidTagIndexRfidEpcCheckOptionsQueryRequest) (*RfidEpcCheckResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RfidEpcCheckOptionsQuery not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) RfidEpcSync(context.Context, *EpcSyncRequest) (*EpcSyncResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RfidEpcSync not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) RfidReturnInspectAggSync(context.Context, *RfidReturnInspectAggSyncRequest) (*RfidReturnInspectAggSyncResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RfidReturnInspectAggSync not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) Update(context.Context, *RfidTagIndexRequest) (*RfidTagIndexResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) UpdateRfidPublishEntities(context.Context, *RfidPublishEntitiesUpdateRequest) (*RfidPublishEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRfidPublishEntities not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) UpdateRfidQualityEntities(context.Context, *RfidQualityEntitiesUpdateRequest) (*RfidQualityEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRfidQualityEntities not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) UpdateRfidReasonEntities(context.Context, *RfidReasonEntitiesUpdateRequest) (*RfidReasonEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRfidReasonEntities not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) UpdateRfidReturnInspectConfig(context.Context, *RfidReturnInspectConfigUpdateRequest) (*RfidReturnInspectConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRfidReturnInspectConfig not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) UpdateRfidReturnInspectEntities(context.Context, *RfidReturnInspectEntitiesUpdateRequest) (*RfidReturnInspectEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRfidReturnInspectEntities not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) UpdateRfidStockInOutEntities(context.Context, *RfidStockInOutEntitiesUpdateRequest) (*RfidStockInOutEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRfidStockInOutEntities not implemented")
}
func (UnimplementedRfidTagIndexControllerServer) mustEmbedUnimplementedRfidTagIndexControllerServer() {
}

// UnsafeRfidTagIndexControllerServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to RfidTagIndexControllerServer will
// result in compilation errors.
type UnsafeRfidTagIndexControllerServer interface {
	mustEmbedUnimplementedRfidTagIndexControllerServer()
}

func RegisterRfidTagIndexControllerServer(s grpc.ServiceRegistrar, srv RfidTagIndexControllerServer) {
	s.RegisterService(&RfidTagIndexController_ServiceDesc, srv)
}

func _RfidTagIndexController_BulkPushReturnInspectAgg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BulkPushReturnInspectAggRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).BulkPushReturnInspectAgg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_BulkPushReturnInspectAgg_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).BulkPushReturnInspectAgg(ctx, req.(*BulkPushReturnInspectAggRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTagIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_Create_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).Create(ctx, req.(*RfidTagIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_CreateRfidPublishEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidPublishEntitiesCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).CreateRfidPublishEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_CreateRfidPublishEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).CreateRfidPublishEntities(ctx, req.(*RfidPublishEntitiesCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_CreateRfidQualityEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidQualityEntitiesCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).CreateRfidQualityEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_CreateRfidQualityEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).CreateRfidQualityEntities(ctx, req.(*RfidQualityEntitiesCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_CreateRfidReasonEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidReasonEntitiesCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).CreateRfidReasonEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_CreateRfidReasonEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).CreateRfidReasonEntities(ctx, req.(*RfidReasonEntitiesCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_CreateRfidReturnInspectConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidReturnInspectConfigCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).CreateRfidReturnInspectConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_CreateRfidReturnInspectConfig_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).CreateRfidReturnInspectConfig(ctx, req.(*RfidReturnInspectConfigCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_CreateRfidReturnInspectEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidReturnInspectEntitiesCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).CreateRfidReturnInspectEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_CreateRfidReturnInspectEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).CreateRfidReturnInspectEntities(ctx, req.(*RfidReturnInspectEntitiesCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_CreateRfidStockInOutEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidStockInOutEntitiesCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).CreateRfidStockInOutEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_CreateRfidStockInOutEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).CreateRfidStockInOutEntities(ctx, req.(*RfidStockInOutEntitiesCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_Destroy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTagIndexDestroyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).Destroy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_Destroy_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).Destroy(ctx, req.(*RfidTagIndexDestroyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_DestroyReturnInspectAgg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestroyReturnInspectAggRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).DestroyReturnInspectAgg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_DestroyReturnInspectAgg_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).DestroyReturnInspectAgg(ctx, req.(*DestroyReturnInspectAggRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_DestroyRfidPublishEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidPublishEntitiesDestroyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).DestroyRfidPublishEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_DestroyRfidPublishEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).DestroyRfidPublishEntities(ctx, req.(*RfidPublishEntitiesDestroyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_DestroyRfidQualityEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidQualityEntitiesDestroyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).DestroyRfidQualityEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_DestroyRfidQualityEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).DestroyRfidQualityEntities(ctx, req.(*RfidQualityEntitiesDestroyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_DestroyRfidReasonEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidReasonEntitiesDestroyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).DestroyRfidReasonEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_DestroyRfidReasonEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).DestroyRfidReasonEntities(ctx, req.(*RfidReasonEntitiesDestroyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_DestroyRfidReturnInspectConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidReturnInspectConfigDestroyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).DestroyRfidReturnInspectConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_DestroyRfidReturnInspectConfig_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).DestroyRfidReturnInspectConfig(ctx, req.(*RfidReturnInspectConfigDestroyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_DestroyRfidReturnInspectEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidReturnInspectEntitiesDestroyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).DestroyRfidReturnInspectEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_DestroyRfidReturnInspectEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).DestroyRfidReturnInspectEntities(ctx, req.(*RfidReturnInspectEntitiesDestroyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_DestroyRfidStockInOutEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidStockInOutEntitiesDestroyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).DestroyRfidStockInOutEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_DestroyRfidStockInOutEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).DestroyRfidStockInOutEntities(ctx, req.(*RfidStockInOutEntitiesDestroyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_InspectConfigOptions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InspectConfigOptionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).InspectConfigOptions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_InspectConfigOptions_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).InspectConfigOptions(ctx, req.(*InspectConfigOptionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTagIndexListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_List_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).List(ctx, req.(*RfidTagIndexListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_ListRfidPublishEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidPublishEntitiesListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).ListRfidPublishEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_ListRfidPublishEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).ListRfidPublishEntities(ctx, req.(*RfidPublishEntitiesListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_ListRfidQualityEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidQualityEntitiesListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).ListRfidQualityEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_ListRfidQualityEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).ListRfidQualityEntities(ctx, req.(*RfidQualityEntitiesListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_ListRfidReasonEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidReasonEntitiesListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).ListRfidReasonEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_ListRfidReasonEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).ListRfidReasonEntities(ctx, req.(*RfidReasonEntitiesListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_ListRfidReturnInspectAgg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidReturnInspectAggListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).ListRfidReturnInspectAgg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_ListRfidReturnInspectAgg_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).ListRfidReturnInspectAgg(ctx, req.(*RfidReturnInspectAggListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_ListRfidReturnInspectConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidReturnInspectConfigListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).ListRfidReturnInspectConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_ListRfidReturnInspectConfig_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).ListRfidReturnInspectConfig(ctx, req.(*RfidReturnInspectConfigListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_ListRfidReturnInspectEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidReturnInspectEntitiesListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).ListRfidReturnInspectEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_ListRfidReturnInspectEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).ListRfidReturnInspectEntities(ctx, req.(*RfidReturnInspectEntitiesListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_ListRfidStockInOutEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidStockInOutEntitiesListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).ListRfidStockInOutEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_ListRfidStockInOutEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).ListRfidStockInOutEntities(ctx, req.(*RfidStockInOutEntitiesListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_PartialUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTagIndexPartialUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).PartialUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_PartialUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).PartialUpdate(ctx, req.(*RfidTagIndexPartialUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_Retrieve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTagIndexRetrieveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).Retrieve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_Retrieve_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).Retrieve(ctx, req.(*RfidTagIndexRetrieveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_RetrieveReturnInspectAgg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveReturnInspectAggRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).RetrieveReturnInspectAgg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_RetrieveReturnInspectAgg_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).RetrieveReturnInspectAgg(ctx, req.(*RetrieveReturnInspectAggRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_RetrieveRfidPublishEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidPublishEntitiesRetrieveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).RetrieveRfidPublishEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_RetrieveRfidPublishEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).RetrieveRfidPublishEntities(ctx, req.(*RfidPublishEntitiesRetrieveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_RetrieveRfidQualityEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidQualityEntitiesRetrieveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).RetrieveRfidQualityEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_RetrieveRfidQualityEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).RetrieveRfidQualityEntities(ctx, req.(*RfidQualityEntitiesRetrieveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_RetrieveRfidReasonEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidReasonEntitiesRetrieveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).RetrieveRfidReasonEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_RetrieveRfidReasonEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).RetrieveRfidReasonEntities(ctx, req.(*RfidReasonEntitiesRetrieveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_RetrieveRfidReturnInspectConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidReturnInspectConfigRetrieveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).RetrieveRfidReturnInspectConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_RetrieveRfidReturnInspectConfig_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).RetrieveRfidReturnInspectConfig(ctx, req.(*RfidReturnInspectConfigRetrieveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_RetrieveRfidReturnInspectEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidReturnInspectEntitiesRetrieveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).RetrieveRfidReturnInspectEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_RetrieveRfidReturnInspectEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).RetrieveRfidReturnInspectEntities(ctx, req.(*RfidReturnInspectEntitiesRetrieveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_RetrieveRfidStockInOutEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidStockInOutEntitiesRetrieveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).RetrieveRfidStockInOutEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_RetrieveRfidStockInOutEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).RetrieveRfidStockInOutEntities(ctx, req.(*RfidStockInOutEntitiesRetrieveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_RfidEpcCheckOptionsQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTagIndexRfidEpcCheckOptionsQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).RfidEpcCheckOptionsQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_RfidEpcCheckOptionsQuery_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).RfidEpcCheckOptionsQuery(ctx, req.(*RfidTagIndexRfidEpcCheckOptionsQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_RfidEpcSync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EpcSyncRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).RfidEpcSync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_RfidEpcSync_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).RfidEpcSync(ctx, req.(*EpcSyncRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_RfidReturnInspectAggSync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidReturnInspectAggSyncRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).RfidReturnInspectAggSync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_RfidReturnInspectAggSync_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).RfidReturnInspectAggSync(ctx, req.(*RfidReturnInspectAggSyncRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTagIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_Update_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).Update(ctx, req.(*RfidTagIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_UpdateRfidPublishEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidPublishEntitiesUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).UpdateRfidPublishEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_UpdateRfidPublishEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).UpdateRfidPublishEntities(ctx, req.(*RfidPublishEntitiesUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_UpdateRfidQualityEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidQualityEntitiesUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).UpdateRfidQualityEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_UpdateRfidQualityEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).UpdateRfidQualityEntities(ctx, req.(*RfidQualityEntitiesUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_UpdateRfidReasonEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidReasonEntitiesUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).UpdateRfidReasonEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_UpdateRfidReasonEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).UpdateRfidReasonEntities(ctx, req.(*RfidReasonEntitiesUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_UpdateRfidReturnInspectConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidReturnInspectConfigUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).UpdateRfidReturnInspectConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_UpdateRfidReturnInspectConfig_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).UpdateRfidReturnInspectConfig(ctx, req.(*RfidReturnInspectConfigUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_UpdateRfidReturnInspectEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidReturnInspectEntitiesUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).UpdateRfidReturnInspectEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_UpdateRfidReturnInspectEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).UpdateRfidReturnInspectEntities(ctx, req.(*RfidReturnInspectEntitiesUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTagIndexController_UpdateRfidStockInOutEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidStockInOutEntitiesUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTagIndexControllerServer).UpdateRfidStockInOutEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTagIndexController_UpdateRfidStockInOutEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTagIndexControllerServer).UpdateRfidStockInOutEntities(ctx, req.(*RfidStockInOutEntitiesUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// RfidTagIndexController_ServiceDesc is the grpc.ServiceDesc for RfidTagIndexController service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var RfidTagIndexController_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "ito_rfid_mongo.tag_service.RfidTagIndexController",
	HandlerType: (*RfidTagIndexControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BulkPushReturnInspectAgg",
			Handler:    _RfidTagIndexController_BulkPushReturnInspectAgg_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _RfidTagIndexController_Create_Handler,
		},
		{
			MethodName: "CreateRfidPublishEntities",
			Handler:    _RfidTagIndexController_CreateRfidPublishEntities_Handler,
		},
		{
			MethodName: "CreateRfidQualityEntities",
			Handler:    _RfidTagIndexController_CreateRfidQualityEntities_Handler,
		},
		{
			MethodName: "CreateRfidReasonEntities",
			Handler:    _RfidTagIndexController_CreateRfidReasonEntities_Handler,
		},
		{
			MethodName: "CreateRfidReturnInspectConfig",
			Handler:    _RfidTagIndexController_CreateRfidReturnInspectConfig_Handler,
		},
		{
			MethodName: "CreateRfidReturnInspectEntities",
			Handler:    _RfidTagIndexController_CreateRfidReturnInspectEntities_Handler,
		},
		{
			MethodName: "CreateRfidStockInOutEntities",
			Handler:    _RfidTagIndexController_CreateRfidStockInOutEntities_Handler,
		},
		{
			MethodName: "Destroy",
			Handler:    _RfidTagIndexController_Destroy_Handler,
		},
		{
			MethodName: "DestroyReturnInspectAgg",
			Handler:    _RfidTagIndexController_DestroyReturnInspectAgg_Handler,
		},
		{
			MethodName: "DestroyRfidPublishEntities",
			Handler:    _RfidTagIndexController_DestroyRfidPublishEntities_Handler,
		},
		{
			MethodName: "DestroyRfidQualityEntities",
			Handler:    _RfidTagIndexController_DestroyRfidQualityEntities_Handler,
		},
		{
			MethodName: "DestroyRfidReasonEntities",
			Handler:    _RfidTagIndexController_DestroyRfidReasonEntities_Handler,
		},
		{
			MethodName: "DestroyRfidReturnInspectConfig",
			Handler:    _RfidTagIndexController_DestroyRfidReturnInspectConfig_Handler,
		},
		{
			MethodName: "DestroyRfidReturnInspectEntities",
			Handler:    _RfidTagIndexController_DestroyRfidReturnInspectEntities_Handler,
		},
		{
			MethodName: "DestroyRfidStockInOutEntities",
			Handler:    _RfidTagIndexController_DestroyRfidStockInOutEntities_Handler,
		},
		{
			MethodName: "InspectConfigOptions",
			Handler:    _RfidTagIndexController_InspectConfigOptions_Handler,
		},
		{
			MethodName: "List",
			Handler:    _RfidTagIndexController_List_Handler,
		},
		{
			MethodName: "ListRfidPublishEntities",
			Handler:    _RfidTagIndexController_ListRfidPublishEntities_Handler,
		},
		{
			MethodName: "ListRfidQualityEntities",
			Handler:    _RfidTagIndexController_ListRfidQualityEntities_Handler,
		},
		{
			MethodName: "ListRfidReasonEntities",
			Handler:    _RfidTagIndexController_ListRfidReasonEntities_Handler,
		},
		{
			MethodName: "ListRfidReturnInspectAgg",
			Handler:    _RfidTagIndexController_ListRfidReturnInspectAgg_Handler,
		},
		{
			MethodName: "ListRfidReturnInspectConfig",
			Handler:    _RfidTagIndexController_ListRfidReturnInspectConfig_Handler,
		},
		{
			MethodName: "ListRfidReturnInspectEntities",
			Handler:    _RfidTagIndexController_ListRfidReturnInspectEntities_Handler,
		},
		{
			MethodName: "ListRfidStockInOutEntities",
			Handler:    _RfidTagIndexController_ListRfidStockInOutEntities_Handler,
		},
		{
			MethodName: "PartialUpdate",
			Handler:    _RfidTagIndexController_PartialUpdate_Handler,
		},
		{
			MethodName: "Retrieve",
			Handler:    _RfidTagIndexController_Retrieve_Handler,
		},
		{
			MethodName: "RetrieveReturnInspectAgg",
			Handler:    _RfidTagIndexController_RetrieveReturnInspectAgg_Handler,
		},
		{
			MethodName: "RetrieveRfidPublishEntities",
			Handler:    _RfidTagIndexController_RetrieveRfidPublishEntities_Handler,
		},
		{
			MethodName: "RetrieveRfidQualityEntities",
			Handler:    _RfidTagIndexController_RetrieveRfidQualityEntities_Handler,
		},
		{
			MethodName: "RetrieveRfidReasonEntities",
			Handler:    _RfidTagIndexController_RetrieveRfidReasonEntities_Handler,
		},
		{
			MethodName: "RetrieveRfidReturnInspectConfig",
			Handler:    _RfidTagIndexController_RetrieveRfidReturnInspectConfig_Handler,
		},
		{
			MethodName: "RetrieveRfidReturnInspectEntities",
			Handler:    _RfidTagIndexController_RetrieveRfidReturnInspectEntities_Handler,
		},
		{
			MethodName: "RetrieveRfidStockInOutEntities",
			Handler:    _RfidTagIndexController_RetrieveRfidStockInOutEntities_Handler,
		},
		{
			MethodName: "RfidEpcCheckOptionsQuery",
			Handler:    _RfidTagIndexController_RfidEpcCheckOptionsQuery_Handler,
		},
		{
			MethodName: "RfidEpcSync",
			Handler:    _RfidTagIndexController_RfidEpcSync_Handler,
		},
		{
			MethodName: "RfidReturnInspectAggSync",
			Handler:    _RfidTagIndexController_RfidReturnInspectAggSync_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _RfidTagIndexController_Update_Handler,
		},
		{
			MethodName: "UpdateRfidPublishEntities",
			Handler:    _RfidTagIndexController_UpdateRfidPublishEntities_Handler,
		},
		{
			MethodName: "UpdateRfidQualityEntities",
			Handler:    _RfidTagIndexController_UpdateRfidQualityEntities_Handler,
		},
		{
			MethodName: "UpdateRfidReasonEntities",
			Handler:    _RfidTagIndexController_UpdateRfidReasonEntities_Handler,
		},
		{
			MethodName: "UpdateRfidReturnInspectConfig",
			Handler:    _RfidTagIndexController_UpdateRfidReturnInspectConfig_Handler,
		},
		{
			MethodName: "UpdateRfidReturnInspectEntities",
			Handler:    _RfidTagIndexController_UpdateRfidReturnInspectEntities_Handler,
		},
		{
			MethodName: "UpdateRfidStockInOutEntities",
			Handler:    _RfidTagIndexController_UpdateRfidStockInOutEntities_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tag_service.proto",
}

const (
	RfidTradeController_Create_FullMethodName                     = "/ito_rfid_mongo.tag_service.RfidTradeController/Create"
	RfidTradeController_Destroy_FullMethodName                    = "/ito_rfid_mongo.tag_service.RfidTradeController/Destroy"
	RfidTradeController_List_FullMethodName                       = "/ito_rfid_mongo.tag_service.RfidTradeController/List"
	RfidTradeController_PartialUpdate_FullMethodName              = "/ito_rfid_mongo.tag_service.RfidTradeController/PartialUpdate"
	RfidTradeController_Retrieve_FullMethodName                   = "/ito_rfid_mongo.tag_service.RfidTradeController/Retrieve"
	RfidTradeController_RfidTradeReturnScanQuery_FullMethodName   = "/ito_rfid_mongo.tag_service.RfidTradeController/RfidTradeReturnScanQuery"
	RfidTradeController_RfidTradeReturnScanRetreat_FullMethodName = "/ito_rfid_mongo.tag_service.RfidTradeController/RfidTradeReturnScanRetreat"
	RfidTradeController_RfidTradeReturnScanSave_FullMethodName    = "/ito_rfid_mongo.tag_service.RfidTradeController/RfidTradeReturnScanSave"
	RfidTradeController_RfidTradeScanQuery_FullMethodName         = "/ito_rfid_mongo.tag_service.RfidTradeController/RfidTradeScanQuery"
	RfidTradeController_RfidTradeScanRetreat_FullMethodName       = "/ito_rfid_mongo.tag_service.RfidTradeController/RfidTradeScanRetreat"
	RfidTradeController_RfidTradeScanSave_FullMethodName          = "/ito_rfid_mongo.tag_service.RfidTradeController/RfidTradeScanSave"
	RfidTradeController_Update_FullMethodName                     = "/ito_rfid_mongo.tag_service.RfidTradeController/Update"
)

// RfidTradeControllerClient is the client API for RfidTradeController service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type RfidTradeControllerClient interface {
	Create(ctx context.Context, in *RfidTradeRequest, opts ...grpc.CallOption) (*RfidTradeResponse, error)
	Destroy(ctx context.Context, in *RfidTradeDestroyRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	List(ctx context.Context, in *RfidTradeListRequest, opts ...grpc.CallOption) (*RfidTradeListResponse, error)
	PartialUpdate(ctx context.Context, in *RfidTradePartialUpdateRequest, opts ...grpc.CallOption) (*RfidTradeResponse, error)
	Retrieve(ctx context.Context, in *RfidTradeRetrieveRequest, opts ...grpc.CallOption) (*RfidTradeResponse, error)
	RfidTradeReturnScanQuery(ctx context.Context, in *RfidTradeReturnScanQueryRequest, opts ...grpc.CallOption) (*RfidTradeReturnScanQueryResponse, error)
	RfidTradeReturnScanRetreat(ctx context.Context, in *RfidTradeReturnScanRetreatRequest, opts ...grpc.CallOption) (*RfidTradeReturnScanRetreatResponse, error)
	RfidTradeReturnScanSave(ctx context.Context, in *RfidTradeReturnScanSaveRequest, opts ...grpc.CallOption) (*RfidTradeReturnScanSaveResponse, error)
	RfidTradeScanQuery(ctx context.Context, in *RfidTradeScanQueryRequest, opts ...grpc.CallOption) (*RfidTradeScanQueryResponse, error)
	RfidTradeScanRetreat(ctx context.Context, in *RfidTradeScanRetreatRequest, opts ...grpc.CallOption) (*RfidTradeScanRetreatResponse, error)
	RfidTradeScanSave(ctx context.Context, in *RfidTradeScanSaveRequest, opts ...grpc.CallOption) (*RfidTradeScanSaveResponse, error)
	Update(ctx context.Context, in *RfidTradeRequest, opts ...grpc.CallOption) (*RfidTradeResponse, error)
}

type rfidTradeControllerClient struct {
	cc grpc.ClientConnInterface
}

func NewRfidTradeControllerClient(cc grpc.ClientConnInterface) RfidTradeControllerClient {
	return &rfidTradeControllerClient{cc}
}

func (c *rfidTradeControllerClient) Create(ctx context.Context, in *RfidTradeRequest, opts ...grpc.CallOption) (*RfidTradeResponse, error) {
	out := new(RfidTradeResponse)
	err := c.cc.Invoke(ctx, RfidTradeController_Create_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTradeControllerClient) Destroy(ctx context.Context, in *RfidTradeDestroyRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, RfidTradeController_Destroy_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTradeControllerClient) List(ctx context.Context, in *RfidTradeListRequest, opts ...grpc.CallOption) (*RfidTradeListResponse, error) {
	out := new(RfidTradeListResponse)
	err := c.cc.Invoke(ctx, RfidTradeController_List_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTradeControllerClient) PartialUpdate(ctx context.Context, in *RfidTradePartialUpdateRequest, opts ...grpc.CallOption) (*RfidTradeResponse, error) {
	out := new(RfidTradeResponse)
	err := c.cc.Invoke(ctx, RfidTradeController_PartialUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTradeControllerClient) Retrieve(ctx context.Context, in *RfidTradeRetrieveRequest, opts ...grpc.CallOption) (*RfidTradeResponse, error) {
	out := new(RfidTradeResponse)
	err := c.cc.Invoke(ctx, RfidTradeController_Retrieve_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTradeControllerClient) RfidTradeReturnScanQuery(ctx context.Context, in *RfidTradeReturnScanQueryRequest, opts ...grpc.CallOption) (*RfidTradeReturnScanQueryResponse, error) {
	out := new(RfidTradeReturnScanQueryResponse)
	err := c.cc.Invoke(ctx, RfidTradeController_RfidTradeReturnScanQuery_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTradeControllerClient) RfidTradeReturnScanRetreat(ctx context.Context, in *RfidTradeReturnScanRetreatRequest, opts ...grpc.CallOption) (*RfidTradeReturnScanRetreatResponse, error) {
	out := new(RfidTradeReturnScanRetreatResponse)
	err := c.cc.Invoke(ctx, RfidTradeController_RfidTradeReturnScanRetreat_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTradeControllerClient) RfidTradeReturnScanSave(ctx context.Context, in *RfidTradeReturnScanSaveRequest, opts ...grpc.CallOption) (*RfidTradeReturnScanSaveResponse, error) {
	out := new(RfidTradeReturnScanSaveResponse)
	err := c.cc.Invoke(ctx, RfidTradeController_RfidTradeReturnScanSave_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTradeControllerClient) RfidTradeScanQuery(ctx context.Context, in *RfidTradeScanQueryRequest, opts ...grpc.CallOption) (*RfidTradeScanQueryResponse, error) {
	out := new(RfidTradeScanQueryResponse)
	err := c.cc.Invoke(ctx, RfidTradeController_RfidTradeScanQuery_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTradeControllerClient) RfidTradeScanRetreat(ctx context.Context, in *RfidTradeScanRetreatRequest, opts ...grpc.CallOption) (*RfidTradeScanRetreatResponse, error) {
	out := new(RfidTradeScanRetreatResponse)
	err := c.cc.Invoke(ctx, RfidTradeController_RfidTradeScanRetreat_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTradeControllerClient) RfidTradeScanSave(ctx context.Context, in *RfidTradeScanSaveRequest, opts ...grpc.CallOption) (*RfidTradeScanSaveResponse, error) {
	out := new(RfidTradeScanSaveResponse)
	err := c.cc.Invoke(ctx, RfidTradeController_RfidTradeScanSave_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTradeControllerClient) Update(ctx context.Context, in *RfidTradeRequest, opts ...grpc.CallOption) (*RfidTradeResponse, error) {
	out := new(RfidTradeResponse)
	err := c.cc.Invoke(ctx, RfidTradeController_Update_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RfidTradeControllerServer is the server API for RfidTradeController service.
// All implementations must embed UnimplementedRfidTradeControllerServer
// for forward compatibility
type RfidTradeControllerServer interface {
	Create(context.Context, *RfidTradeRequest) (*RfidTradeResponse, error)
	Destroy(context.Context, *RfidTradeDestroyRequest) (*emptypb.Empty, error)
	List(context.Context, *RfidTradeListRequest) (*RfidTradeListResponse, error)
	PartialUpdate(context.Context, *RfidTradePartialUpdateRequest) (*RfidTradeResponse, error)
	Retrieve(context.Context, *RfidTradeRetrieveRequest) (*RfidTradeResponse, error)
	RfidTradeReturnScanQuery(context.Context, *RfidTradeReturnScanQueryRequest) (*RfidTradeReturnScanQueryResponse, error)
	RfidTradeReturnScanRetreat(context.Context, *RfidTradeReturnScanRetreatRequest) (*RfidTradeReturnScanRetreatResponse, error)
	RfidTradeReturnScanSave(context.Context, *RfidTradeReturnScanSaveRequest) (*RfidTradeReturnScanSaveResponse, error)
	RfidTradeScanQuery(context.Context, *RfidTradeScanQueryRequest) (*RfidTradeScanQueryResponse, error)
	RfidTradeScanRetreat(context.Context, *RfidTradeScanRetreatRequest) (*RfidTradeScanRetreatResponse, error)
	RfidTradeScanSave(context.Context, *RfidTradeScanSaveRequest) (*RfidTradeScanSaveResponse, error)
	Update(context.Context, *RfidTradeRequest) (*RfidTradeResponse, error)
	mustEmbedUnimplementedRfidTradeControllerServer()
}

// UnimplementedRfidTradeControllerServer must be embedded to have forward compatible implementations.
type UnimplementedRfidTradeControllerServer struct {
}

func (UnimplementedRfidTradeControllerServer) Create(context.Context, *RfidTradeRequest) (*RfidTradeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (UnimplementedRfidTradeControllerServer) Destroy(context.Context, *RfidTradeDestroyRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Destroy not implemented")
}
func (UnimplementedRfidTradeControllerServer) List(context.Context, *RfidTradeListRequest) (*RfidTradeListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (UnimplementedRfidTradeControllerServer) PartialUpdate(context.Context, *RfidTradePartialUpdateRequest) (*RfidTradeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PartialUpdate not implemented")
}
func (UnimplementedRfidTradeControllerServer) Retrieve(context.Context, *RfidTradeRetrieveRequest) (*RfidTradeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Retrieve not implemented")
}
func (UnimplementedRfidTradeControllerServer) RfidTradeReturnScanQuery(context.Context, *RfidTradeReturnScanQueryRequest) (*RfidTradeReturnScanQueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RfidTradeReturnScanQuery not implemented")
}
func (UnimplementedRfidTradeControllerServer) RfidTradeReturnScanRetreat(context.Context, *RfidTradeReturnScanRetreatRequest) (*RfidTradeReturnScanRetreatResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RfidTradeReturnScanRetreat not implemented")
}
func (UnimplementedRfidTradeControllerServer) RfidTradeReturnScanSave(context.Context, *RfidTradeReturnScanSaveRequest) (*RfidTradeReturnScanSaveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RfidTradeReturnScanSave not implemented")
}
func (UnimplementedRfidTradeControllerServer) RfidTradeScanQuery(context.Context, *RfidTradeScanQueryRequest) (*RfidTradeScanQueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RfidTradeScanQuery not implemented")
}
func (UnimplementedRfidTradeControllerServer) RfidTradeScanRetreat(context.Context, *RfidTradeScanRetreatRequest) (*RfidTradeScanRetreatResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RfidTradeScanRetreat not implemented")
}
func (UnimplementedRfidTradeControllerServer) RfidTradeScanSave(context.Context, *RfidTradeScanSaveRequest) (*RfidTradeScanSaveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RfidTradeScanSave not implemented")
}
func (UnimplementedRfidTradeControllerServer) Update(context.Context, *RfidTradeRequest) (*RfidTradeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (UnimplementedRfidTradeControllerServer) mustEmbedUnimplementedRfidTradeControllerServer() {}

// UnsafeRfidTradeControllerServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to RfidTradeControllerServer will
// result in compilation errors.
type UnsafeRfidTradeControllerServer interface {
	mustEmbedUnimplementedRfidTradeControllerServer()
}

func RegisterRfidTradeControllerServer(s grpc.ServiceRegistrar, srv RfidTradeControllerServer) {
	s.RegisterService(&RfidTradeController_ServiceDesc, srv)
}

func _RfidTradeController_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTradeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTradeControllerServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTradeController_Create_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTradeControllerServer).Create(ctx, req.(*RfidTradeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTradeController_Destroy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTradeDestroyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTradeControllerServer).Destroy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTradeController_Destroy_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTradeControllerServer).Destroy(ctx, req.(*RfidTradeDestroyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTradeController_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTradeListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTradeControllerServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTradeController_List_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTradeControllerServer).List(ctx, req.(*RfidTradeListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTradeController_PartialUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTradePartialUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTradeControllerServer).PartialUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTradeController_PartialUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTradeControllerServer).PartialUpdate(ctx, req.(*RfidTradePartialUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTradeController_Retrieve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTradeRetrieveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTradeControllerServer).Retrieve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTradeController_Retrieve_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTradeControllerServer).Retrieve(ctx, req.(*RfidTradeRetrieveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTradeController_RfidTradeReturnScanQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTradeReturnScanQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTradeControllerServer).RfidTradeReturnScanQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTradeController_RfidTradeReturnScanQuery_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTradeControllerServer).RfidTradeReturnScanQuery(ctx, req.(*RfidTradeReturnScanQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTradeController_RfidTradeReturnScanRetreat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTradeReturnScanRetreatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTradeControllerServer).RfidTradeReturnScanRetreat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTradeController_RfidTradeReturnScanRetreat_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTradeControllerServer).RfidTradeReturnScanRetreat(ctx, req.(*RfidTradeReturnScanRetreatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTradeController_RfidTradeReturnScanSave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTradeReturnScanSaveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTradeControllerServer).RfidTradeReturnScanSave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTradeController_RfidTradeReturnScanSave_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTradeControllerServer).RfidTradeReturnScanSave(ctx, req.(*RfidTradeReturnScanSaveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTradeController_RfidTradeScanQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTradeScanQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTradeControllerServer).RfidTradeScanQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTradeController_RfidTradeScanQuery_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTradeControllerServer).RfidTradeScanQuery(ctx, req.(*RfidTradeScanQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTradeController_RfidTradeScanRetreat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTradeScanRetreatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTradeControllerServer).RfidTradeScanRetreat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTradeController_RfidTradeScanRetreat_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTradeControllerServer).RfidTradeScanRetreat(ctx, req.(*RfidTradeScanRetreatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTradeController_RfidTradeScanSave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTradeScanSaveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTradeControllerServer).RfidTradeScanSave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTradeController_RfidTradeScanSave_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTradeControllerServer).RfidTradeScanSave(ctx, req.(*RfidTradeScanSaveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTradeController_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTradeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTradeControllerServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTradeController_Update_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTradeControllerServer).Update(ctx, req.(*RfidTradeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// RfidTradeController_ServiceDesc is the grpc.ServiceDesc for RfidTradeController service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var RfidTradeController_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "ito_rfid_mongo.tag_service.RfidTradeController",
	HandlerType: (*RfidTradeControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _RfidTradeController_Create_Handler,
		},
		{
			MethodName: "Destroy",
			Handler:    _RfidTradeController_Destroy_Handler,
		},
		{
			MethodName: "List",
			Handler:    _RfidTradeController_List_Handler,
		},
		{
			MethodName: "PartialUpdate",
			Handler:    _RfidTradeController_PartialUpdate_Handler,
		},
		{
			MethodName: "Retrieve",
			Handler:    _RfidTradeController_Retrieve_Handler,
		},
		{
			MethodName: "RfidTradeReturnScanQuery",
			Handler:    _RfidTradeController_RfidTradeReturnScanQuery_Handler,
		},
		{
			MethodName: "RfidTradeReturnScanRetreat",
			Handler:    _RfidTradeController_RfidTradeReturnScanRetreat_Handler,
		},
		{
			MethodName: "RfidTradeReturnScanSave",
			Handler:    _RfidTradeController_RfidTradeReturnScanSave_Handler,
		},
		{
			MethodName: "RfidTradeScanQuery",
			Handler:    _RfidTradeController_RfidTradeScanQuery_Handler,
		},
		{
			MethodName: "RfidTradeScanRetreat",
			Handler:    _RfidTradeController_RfidTradeScanRetreat_Handler,
		},
		{
			MethodName: "RfidTradeScanSave",
			Handler:    _RfidTradeController_RfidTradeScanSave_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _RfidTradeController_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tag_service.proto",
}

const (
	RfidTransferController_Create_FullMethodName                     = "/ito_rfid_mongo.tag_service.RfidTransferController/Create"
	RfidTransferController_Destroy_FullMethodName                    = "/ito_rfid_mongo.tag_service.RfidTransferController/Destroy"
	RfidTransferController_List_FullMethodName                       = "/ito_rfid_mongo.tag_service.RfidTransferController/List"
	RfidTransferController_PartialUpdate_FullMethodName              = "/ito_rfid_mongo.tag_service.RfidTransferController/PartialUpdate"
	RfidTransferController_Retrieve_FullMethodName                   = "/ito_rfid_mongo.tag_service.RfidTransferController/Retrieve"
	RfidTransferController_RfidTransferInScanQuery_FullMethodName    = "/ito_rfid_mongo.tag_service.RfidTransferController/RfidTransferInScanQuery"
	RfidTransferController_RfidTransferInScanRetreat_FullMethodName  = "/ito_rfid_mongo.tag_service.RfidTransferController/RfidTransferInScanRetreat"
	RfidTransferController_RfidTransferInScanSave_FullMethodName     = "/ito_rfid_mongo.tag_service.RfidTransferController/RfidTransferInScanSave"
	RfidTransferController_RfidTransferOutScanQuery_FullMethodName   = "/ito_rfid_mongo.tag_service.RfidTransferController/RfidTransferOutScanQuery"
	RfidTransferController_RfidTransferOutScanRetreat_FullMethodName = "/ito_rfid_mongo.tag_service.RfidTransferController/RfidTransferOutScanRetreat"
	RfidTransferController_RfidTransferOutScanSave_FullMethodName    = "/ito_rfid_mongo.tag_service.RfidTransferController/RfidTransferOutScanSave"
	RfidTransferController_Update_FullMethodName                     = "/ito_rfid_mongo.tag_service.RfidTransferController/Update"
)

// RfidTransferControllerClient is the client API for RfidTransferController service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type RfidTransferControllerClient interface {
	Create(ctx context.Context, in *RfidTransferOutRequest, opts ...grpc.CallOption) (*RfidTransferOutResponse, error)
	Destroy(ctx context.Context, in *RfidTransferOutDestroyRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	List(ctx context.Context, in *RfidTransferOutListRequest, opts ...grpc.CallOption) (*RfidTransferOutListResponse, error)
	PartialUpdate(ctx context.Context, in *RfidTransferOutPartialUpdateRequest, opts ...grpc.CallOption) (*RfidTransferOutResponse, error)
	Retrieve(ctx context.Context, in *RfidTransferOutRetrieveRequest, opts ...grpc.CallOption) (*RfidTransferOutResponse, error)
	RfidTransferInScanQuery(ctx context.Context, in *RfidTransferStockInScanQueryRequest, opts ...grpc.CallOption) (*RfidTransferStockInScanQueryResponse, error)
	RfidTransferInScanRetreat(ctx context.Context, in *RfidTransferStockInScanRetreatRequest, opts ...grpc.CallOption) (*RfidTransferStockInScanRetreatResponse, error)
	RfidTransferInScanSave(ctx context.Context, in *RfidTransferStockInScanSaveRequest, opts ...grpc.CallOption) (*RfidTransferStockInScanSaveResponse, error)
	RfidTransferOutScanQuery(ctx context.Context, in *RfidTransferStockOutScanQueryRequest, opts ...grpc.CallOption) (*RfidTransferStockOutScanQueryResponse, error)
	RfidTransferOutScanRetreat(ctx context.Context, in *RfidTransferStockOutScanRetreatRequest, opts ...grpc.CallOption) (*RfidTransferStockOutScanRetreatResponse, error)
	RfidTransferOutScanSave(ctx context.Context, in *RfidTransferStockOutScanSaveRequest, opts ...grpc.CallOption) (*RfidTransferStockOutScanSaveResponse, error)
	Update(ctx context.Context, in *RfidTransferOutRequest, opts ...grpc.CallOption) (*RfidTransferOutResponse, error)
}

type rfidTransferControllerClient struct {
	cc grpc.ClientConnInterface
}

func NewRfidTransferControllerClient(cc grpc.ClientConnInterface) RfidTransferControllerClient {
	return &rfidTransferControllerClient{cc}
}

func (c *rfidTransferControllerClient) Create(ctx context.Context, in *RfidTransferOutRequest, opts ...grpc.CallOption) (*RfidTransferOutResponse, error) {
	out := new(RfidTransferOutResponse)
	err := c.cc.Invoke(ctx, RfidTransferController_Create_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTransferControllerClient) Destroy(ctx context.Context, in *RfidTransferOutDestroyRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, RfidTransferController_Destroy_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTransferControllerClient) List(ctx context.Context, in *RfidTransferOutListRequest, opts ...grpc.CallOption) (*RfidTransferOutListResponse, error) {
	out := new(RfidTransferOutListResponse)
	err := c.cc.Invoke(ctx, RfidTransferController_List_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTransferControllerClient) PartialUpdate(ctx context.Context, in *RfidTransferOutPartialUpdateRequest, opts ...grpc.CallOption) (*RfidTransferOutResponse, error) {
	out := new(RfidTransferOutResponse)
	err := c.cc.Invoke(ctx, RfidTransferController_PartialUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTransferControllerClient) Retrieve(ctx context.Context, in *RfidTransferOutRetrieveRequest, opts ...grpc.CallOption) (*RfidTransferOutResponse, error) {
	out := new(RfidTransferOutResponse)
	err := c.cc.Invoke(ctx, RfidTransferController_Retrieve_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTransferControllerClient) RfidTransferInScanQuery(ctx context.Context, in *RfidTransferStockInScanQueryRequest, opts ...grpc.CallOption) (*RfidTransferStockInScanQueryResponse, error) {
	out := new(RfidTransferStockInScanQueryResponse)
	err := c.cc.Invoke(ctx, RfidTransferController_RfidTransferInScanQuery_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTransferControllerClient) RfidTransferInScanRetreat(ctx context.Context, in *RfidTransferStockInScanRetreatRequest, opts ...grpc.CallOption) (*RfidTransferStockInScanRetreatResponse, error) {
	out := new(RfidTransferStockInScanRetreatResponse)
	err := c.cc.Invoke(ctx, RfidTransferController_RfidTransferInScanRetreat_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTransferControllerClient) RfidTransferInScanSave(ctx context.Context, in *RfidTransferStockInScanSaveRequest, opts ...grpc.CallOption) (*RfidTransferStockInScanSaveResponse, error) {
	out := new(RfidTransferStockInScanSaveResponse)
	err := c.cc.Invoke(ctx, RfidTransferController_RfidTransferInScanSave_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTransferControllerClient) RfidTransferOutScanQuery(ctx context.Context, in *RfidTransferStockOutScanQueryRequest, opts ...grpc.CallOption) (*RfidTransferStockOutScanQueryResponse, error) {
	out := new(RfidTransferStockOutScanQueryResponse)
	err := c.cc.Invoke(ctx, RfidTransferController_RfidTransferOutScanQuery_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTransferControllerClient) RfidTransferOutScanRetreat(ctx context.Context, in *RfidTransferStockOutScanRetreatRequest, opts ...grpc.CallOption) (*RfidTransferStockOutScanRetreatResponse, error) {
	out := new(RfidTransferStockOutScanRetreatResponse)
	err := c.cc.Invoke(ctx, RfidTransferController_RfidTransferOutScanRetreat_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTransferControllerClient) RfidTransferOutScanSave(ctx context.Context, in *RfidTransferStockOutScanSaveRequest, opts ...grpc.CallOption) (*RfidTransferStockOutScanSaveResponse, error) {
	out := new(RfidTransferStockOutScanSaveResponse)
	err := c.cc.Invoke(ctx, RfidTransferController_RfidTransferOutScanSave_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rfidTransferControllerClient) Update(ctx context.Context, in *RfidTransferOutRequest, opts ...grpc.CallOption) (*RfidTransferOutResponse, error) {
	out := new(RfidTransferOutResponse)
	err := c.cc.Invoke(ctx, RfidTransferController_Update_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RfidTransferControllerServer is the server API for RfidTransferController service.
// All implementations must embed UnimplementedRfidTransferControllerServer
// for forward compatibility
type RfidTransferControllerServer interface {
	Create(context.Context, *RfidTransferOutRequest) (*RfidTransferOutResponse, error)
	Destroy(context.Context, *RfidTransferOutDestroyRequest) (*emptypb.Empty, error)
	List(context.Context, *RfidTransferOutListRequest) (*RfidTransferOutListResponse, error)
	PartialUpdate(context.Context, *RfidTransferOutPartialUpdateRequest) (*RfidTransferOutResponse, error)
	Retrieve(context.Context, *RfidTransferOutRetrieveRequest) (*RfidTransferOutResponse, error)
	RfidTransferInScanQuery(context.Context, *RfidTransferStockInScanQueryRequest) (*RfidTransferStockInScanQueryResponse, error)
	RfidTransferInScanRetreat(context.Context, *RfidTransferStockInScanRetreatRequest) (*RfidTransferStockInScanRetreatResponse, error)
	RfidTransferInScanSave(context.Context, *RfidTransferStockInScanSaveRequest) (*RfidTransferStockInScanSaveResponse, error)
	RfidTransferOutScanQuery(context.Context, *RfidTransferStockOutScanQueryRequest) (*RfidTransferStockOutScanQueryResponse, error)
	RfidTransferOutScanRetreat(context.Context, *RfidTransferStockOutScanRetreatRequest) (*RfidTransferStockOutScanRetreatResponse, error)
	RfidTransferOutScanSave(context.Context, *RfidTransferStockOutScanSaveRequest) (*RfidTransferStockOutScanSaveResponse, error)
	Update(context.Context, *RfidTransferOutRequest) (*RfidTransferOutResponse, error)
	mustEmbedUnimplementedRfidTransferControllerServer()
}

// UnimplementedRfidTransferControllerServer must be embedded to have forward compatible implementations.
type UnimplementedRfidTransferControllerServer struct {
}

func (UnimplementedRfidTransferControllerServer) Create(context.Context, *RfidTransferOutRequest) (*RfidTransferOutResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (UnimplementedRfidTransferControllerServer) Destroy(context.Context, *RfidTransferOutDestroyRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Destroy not implemented")
}
func (UnimplementedRfidTransferControllerServer) List(context.Context, *RfidTransferOutListRequest) (*RfidTransferOutListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (UnimplementedRfidTransferControllerServer) PartialUpdate(context.Context, *RfidTransferOutPartialUpdateRequest) (*RfidTransferOutResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PartialUpdate not implemented")
}
func (UnimplementedRfidTransferControllerServer) Retrieve(context.Context, *RfidTransferOutRetrieveRequest) (*RfidTransferOutResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Retrieve not implemented")
}
func (UnimplementedRfidTransferControllerServer) RfidTransferInScanQuery(context.Context, *RfidTransferStockInScanQueryRequest) (*RfidTransferStockInScanQueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RfidTransferInScanQuery not implemented")
}
func (UnimplementedRfidTransferControllerServer) RfidTransferInScanRetreat(context.Context, *RfidTransferStockInScanRetreatRequest) (*RfidTransferStockInScanRetreatResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RfidTransferInScanRetreat not implemented")
}
func (UnimplementedRfidTransferControllerServer) RfidTransferInScanSave(context.Context, *RfidTransferStockInScanSaveRequest) (*RfidTransferStockInScanSaveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RfidTransferInScanSave not implemented")
}
func (UnimplementedRfidTransferControllerServer) RfidTransferOutScanQuery(context.Context, *RfidTransferStockOutScanQueryRequest) (*RfidTransferStockOutScanQueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RfidTransferOutScanQuery not implemented")
}
func (UnimplementedRfidTransferControllerServer) RfidTransferOutScanRetreat(context.Context, *RfidTransferStockOutScanRetreatRequest) (*RfidTransferStockOutScanRetreatResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RfidTransferOutScanRetreat not implemented")
}
func (UnimplementedRfidTransferControllerServer) RfidTransferOutScanSave(context.Context, *RfidTransferStockOutScanSaveRequest) (*RfidTransferStockOutScanSaveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RfidTransferOutScanSave not implemented")
}
func (UnimplementedRfidTransferControllerServer) Update(context.Context, *RfidTransferOutRequest) (*RfidTransferOutResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (UnimplementedRfidTransferControllerServer) mustEmbedUnimplementedRfidTransferControllerServer() {
}

// UnsafeRfidTransferControllerServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to RfidTransferControllerServer will
// result in compilation errors.
type UnsafeRfidTransferControllerServer interface {
	mustEmbedUnimplementedRfidTransferControllerServer()
}

func RegisterRfidTransferControllerServer(s grpc.ServiceRegistrar, srv RfidTransferControllerServer) {
	s.RegisterService(&RfidTransferController_ServiceDesc, srv)
}

func _RfidTransferController_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTransferOutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTransferControllerServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTransferController_Create_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTransferControllerServer).Create(ctx, req.(*RfidTransferOutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTransferController_Destroy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTransferOutDestroyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTransferControllerServer).Destroy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTransferController_Destroy_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTransferControllerServer).Destroy(ctx, req.(*RfidTransferOutDestroyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTransferController_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTransferOutListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTransferControllerServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTransferController_List_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTransferControllerServer).List(ctx, req.(*RfidTransferOutListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTransferController_PartialUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTransferOutPartialUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTransferControllerServer).PartialUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTransferController_PartialUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTransferControllerServer).PartialUpdate(ctx, req.(*RfidTransferOutPartialUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTransferController_Retrieve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTransferOutRetrieveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTransferControllerServer).Retrieve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTransferController_Retrieve_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTransferControllerServer).Retrieve(ctx, req.(*RfidTransferOutRetrieveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTransferController_RfidTransferInScanQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTransferStockInScanQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTransferControllerServer).RfidTransferInScanQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTransferController_RfidTransferInScanQuery_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTransferControllerServer).RfidTransferInScanQuery(ctx, req.(*RfidTransferStockInScanQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTransferController_RfidTransferInScanRetreat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTransferStockInScanRetreatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTransferControllerServer).RfidTransferInScanRetreat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTransferController_RfidTransferInScanRetreat_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTransferControllerServer).RfidTransferInScanRetreat(ctx, req.(*RfidTransferStockInScanRetreatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTransferController_RfidTransferInScanSave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTransferStockInScanSaveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTransferControllerServer).RfidTransferInScanSave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTransferController_RfidTransferInScanSave_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTransferControllerServer).RfidTransferInScanSave(ctx, req.(*RfidTransferStockInScanSaveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTransferController_RfidTransferOutScanQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTransferStockOutScanQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTransferControllerServer).RfidTransferOutScanQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTransferController_RfidTransferOutScanQuery_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTransferControllerServer).RfidTransferOutScanQuery(ctx, req.(*RfidTransferStockOutScanQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTransferController_RfidTransferOutScanRetreat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTransferStockOutScanRetreatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTransferControllerServer).RfidTransferOutScanRetreat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTransferController_RfidTransferOutScanRetreat_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTransferControllerServer).RfidTransferOutScanRetreat(ctx, req.(*RfidTransferStockOutScanRetreatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTransferController_RfidTransferOutScanSave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTransferStockOutScanSaveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTransferControllerServer).RfidTransferOutScanSave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTransferController_RfidTransferOutScanSave_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTransferControllerServer).RfidTransferOutScanSave(ctx, req.(*RfidTransferStockOutScanSaveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RfidTransferController_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RfidTransferOutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RfidTransferControllerServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RfidTransferController_Update_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RfidTransferControllerServer).Update(ctx, req.(*RfidTransferOutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// RfidTransferController_ServiceDesc is the grpc.ServiceDesc for RfidTransferController service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var RfidTransferController_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "ito_rfid_mongo.tag_service.RfidTransferController",
	HandlerType: (*RfidTransferControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _RfidTransferController_Create_Handler,
		},
		{
			MethodName: "Destroy",
			Handler:    _RfidTransferController_Destroy_Handler,
		},
		{
			MethodName: "List",
			Handler:    _RfidTransferController_List_Handler,
		},
		{
			MethodName: "PartialUpdate",
			Handler:    _RfidTransferController_PartialUpdate_Handler,
		},
		{
			MethodName: "Retrieve",
			Handler:    _RfidTransferController_Retrieve_Handler,
		},
		{
			MethodName: "RfidTransferInScanQuery",
			Handler:    _RfidTransferController_RfidTransferInScanQuery_Handler,
		},
		{
			MethodName: "RfidTransferInScanRetreat",
			Handler:    _RfidTransferController_RfidTransferInScanRetreat_Handler,
		},
		{
			MethodName: "RfidTransferInScanSave",
			Handler:    _RfidTransferController_RfidTransferInScanSave_Handler,
		},
		{
			MethodName: "RfidTransferOutScanQuery",
			Handler:    _RfidTransferController_RfidTransferOutScanQuery_Handler,
		},
		{
			MethodName: "RfidTransferOutScanRetreat",
			Handler:    _RfidTransferController_RfidTransferOutScanRetreat_Handler,
		},
		{
			MethodName: "RfidTransferOutScanSave",
			Handler:    _RfidTransferController_RfidTransferOutScanSave_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _RfidTransferController_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tag_service.proto",
}
