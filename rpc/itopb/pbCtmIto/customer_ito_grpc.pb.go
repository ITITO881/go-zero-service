// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.19.4
// source: customer_ito.proto

package pbCtmIto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	CtmItoController_ChangeSelectedAllCart_FullMethodName   = "/customer_service.customer_ito.CtmItoController/ChangeSelectedAllCart"
	CtmItoController_Create_FullMethodName                  = "/customer_service.customer_ito.CtmItoController/Create"
	CtmItoController_CreateAddr_FullMethodName              = "/customer_service.customer_ito.CtmItoController/CreateAddr"
	CtmItoController_CreateCart_FullMethodName              = "/customer_service.customer_ito.CtmItoController/CreateCart"
	CtmItoController_CreateCtmCardCares_FullMethodName      = "/customer_service.customer_ito.CtmItoController/CreateCtmCardCares"
	CtmItoController_CreateCtmProduct_FullMethodName        = "/customer_service.customer_ito.CtmItoController/CreateCtmProduct"
	CtmItoController_CreateCtmWallet_FullMethodName         = "/customer_service.customer_ito.CtmItoController/CreateCtmWallet"
	CtmItoController_CreateCtmWalletRecord_FullMethodName   = "/customer_service.customer_ito.CtmItoController/CreateCtmWalletRecord"
	CtmItoController_DefaultAddr_FullMethodName             = "/customer_service.customer_ito.CtmItoController/DefaultAddr"
	CtmItoController_Destroy_FullMethodName                 = "/customer_service.customer_ito.CtmItoController/Destroy"
	CtmItoController_DestroyAddr_FullMethodName             = "/customer_service.customer_ito.CtmItoController/DestroyAddr"
	CtmItoController_DestroyCart_FullMethodName             = "/customer_service.customer_ito.CtmItoController/DestroyCart"
	CtmItoController_DestroyCtmCardCares_FullMethodName     = "/customer_service.customer_ito.CtmItoController/DestroyCtmCardCares"
	CtmItoController_DestroyCtmProduct_FullMethodName       = "/customer_service.customer_ito.CtmItoController/DestroyCtmProduct"
	CtmItoController_DestroyCtmWallet_FullMethodName        = "/customer_service.customer_ito.CtmItoController/DestroyCtmWallet"
	CtmItoController_DestroyCtmWalletRecord_FullMethodName  = "/customer_service.customer_ito.CtmItoController/DestroyCtmWalletRecord"
	CtmItoController_List_FullMethodName                    = "/customer_service.customer_ito.CtmItoController/List"
	CtmItoController_ListAddr_FullMethodName                = "/customer_service.customer_ito.CtmItoController/ListAddr"
	CtmItoController_ListCart_FullMethodName                = "/customer_service.customer_ito.CtmItoController/ListCart"
	CtmItoController_ListCtmCardCares_FullMethodName        = "/customer_service.customer_ito.CtmItoController/ListCtmCardCares"
	CtmItoController_ListCtmProduct_FullMethodName          = "/customer_service.customer_ito.CtmItoController/ListCtmProduct"
	CtmItoController_ListCtmWallet_FullMethodName           = "/customer_service.customer_ito.CtmItoController/ListCtmWallet"
	CtmItoController_ListCtmWalletRecord_FullMethodName     = "/customer_service.customer_ito.CtmItoController/ListCtmWalletRecord"
	CtmItoController_NextCardNoCtmWallet_FullMethodName     = "/customer_service.customer_ito.CtmItoController/NextCardNoCtmWallet"
	CtmItoController_OptionsCtmWallet_FullMethodName        = "/customer_service.customer_ito.CtmItoController/OptionsCtmWallet"
	CtmItoController_PartialUpdate_FullMethodName           = "/customer_service.customer_ito.CtmItoController/PartialUpdate"
	CtmItoController_Retrieve_FullMethodName                = "/customer_service.customer_ito.CtmItoController/Retrieve"
	CtmItoController_RetrieveAddr_FullMethodName            = "/customer_service.customer_ito.CtmItoController/RetrieveAddr"
	CtmItoController_RetrieveCart_FullMethodName            = "/customer_service.customer_ito.CtmItoController/RetrieveCart"
	CtmItoController_RetrieveCtmCardCares_FullMethodName    = "/customer_service.customer_ito.CtmItoController/RetrieveCtmCardCares"
	CtmItoController_RetrieveCtmProduct_FullMethodName      = "/customer_service.customer_ito.CtmItoController/RetrieveCtmProduct"
	CtmItoController_RetrieveCtmWallet_FullMethodName       = "/customer_service.customer_ito.CtmItoController/RetrieveCtmWallet"
	CtmItoController_RetrieveCtmWalletRecord_FullMethodName = "/customer_service.customer_ito.CtmItoController/RetrieveCtmWalletRecord"
	CtmItoController_Update_FullMethodName                  = "/customer_service.customer_ito.CtmItoController/Update"
	CtmItoController_UpdateAddr_FullMethodName              = "/customer_service.customer_ito.CtmItoController/UpdateAddr"
	CtmItoController_UpdateByIdCtmProduct_FullMethodName    = "/customer_service.customer_ito.CtmItoController/UpdateByIdCtmProduct"
	CtmItoController_UpdateCart_FullMethodName              = "/customer_service.customer_ito.CtmItoController/UpdateCart"
	CtmItoController_UpdateCtmCardCares_FullMethodName      = "/customer_service.customer_ito.CtmItoController/UpdateCtmCardCares"
	CtmItoController_UpdateCtmProduct_FullMethodName        = "/customer_service.customer_ito.CtmItoController/UpdateCtmProduct"
	CtmItoController_UpdateCtmWallet_FullMethodName         = "/customer_service.customer_ito.CtmItoController/UpdateCtmWallet"
	CtmItoController_UpdateCtmWalletRecord_FullMethodName   = "/customer_service.customer_ito.CtmItoController/UpdateCtmWalletRecord"
	CtmItoController_UpdateSpuSnapshot_FullMethodName       = "/customer_service.customer_ito.CtmItoController/UpdateSpuSnapshot"
)

// CtmItoControllerClient is the client API for CtmItoController service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CtmItoControllerClient interface {
	ChangeSelectedAllCart(ctx context.Context, in *CtmCartSelectedAllChangeRequest, opts ...grpc.CallOption) (*CtmItoChangeSelectedAllCartResponse, error)
	Create(ctx context.Context, in *CtmBaseRequest, opts ...grpc.CallOption) (*CtmBaseResponse, error)
	CreateAddr(ctx context.Context, in *CtmAddrCreateRequest, opts ...grpc.CallOption) (*CtmAddrResponse, error)
	CreateCart(ctx context.Context, in *CtmCartCreateRequest, opts ...grpc.CallOption) (*CtmCartResponse, error)
	CreateCtmCardCares(ctx context.Context, in *CtmCardCaresCreateRequest, opts ...grpc.CallOption) (*CtmCardCaresResponse, error)
	CreateCtmProduct(ctx context.Context, in *CtmProductCreateRequest, opts ...grpc.CallOption) (*CtmProductResponse, error)
	CreateCtmWallet(ctx context.Context, in *CreateCtmWalletRequest, opts ...grpc.CallOption) (*CtmWalletResponse, error)
	CreateCtmWalletRecord(ctx context.Context, in *CreateCtmWalletRecordRequest, opts ...grpc.CallOption) (*CtmWalletRecordResponse, error)
	DefaultAddr(ctx context.Context, in *CtmDefaultAddrRequest, opts ...grpc.CallOption) (*CtmItoDefaultAddrResponse, error)
	Destroy(ctx context.Context, in *CtmBaseDestroyRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DestroyAddr(ctx context.Context, in *CtmAddrDestroyRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DestroyCart(ctx context.Context, in *CtmCartDestroyRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DestroyCtmCardCares(ctx context.Context, in *CtmItoDestroyCtmCardCaresRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DestroyCtmProduct(ctx context.Context, in *CtmItoDestroyCtmProductRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DestroyCtmWallet(ctx context.Context, in *DestroyCtmWalletRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DestroyCtmWalletRecord(ctx context.Context, in *DestroyCtmWalletRecordRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	List(ctx context.Context, in *CtmBaseListRequest, opts ...grpc.CallOption) (*CtmBaseListResponse, error)
	ListAddr(ctx context.Context, in *CtmAddrListRequest, opts ...grpc.CallOption) (*CtmAddrListResponse, error)
	ListCart(ctx context.Context, in *CtmCartListRequest, opts ...grpc.CallOption) (*CtmCartListResponse, error)
	ListCtmCardCares(ctx context.Context, in *CtmCardCaresListRequest, opts ...grpc.CallOption) (*CtmCardCaresListResponse, error)
	ListCtmProduct(ctx context.Context, in *CtmProductListRequest, opts ...grpc.CallOption) (*CtmProductListResponse, error)
	ListCtmWallet(ctx context.Context, in *ListCtmWalletRequest, opts ...grpc.CallOption) (*CtmWalletListResponse, error)
	ListCtmWalletRecord(ctx context.Context, in *ListCtmWalletRecordRequest, opts ...grpc.CallOption) (*CtmWalletRecordListResponse, error)
	NextCardNoCtmWallet(ctx context.Context, in *WalletNextCardCodeRequest, opts ...grpc.CallOption) (*WalletNextCardCodeResponse, error)
	OptionsCtmWallet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*CtmWalletOptionsResponse, error)
	PartialUpdate(ctx context.Context, in *CtmBasePartialUpdateRequest, opts ...grpc.CallOption) (*CtmBaseResponse, error)
	Retrieve(ctx context.Context, in *CtmBaseRetrieveRequest, opts ...grpc.CallOption) (*CtmBaseResponse, error)
	RetrieveAddr(ctx context.Context, in *CtmAddrRetrieveRequest, opts ...grpc.CallOption) (*CtmAddrResponse, error)
	RetrieveCart(ctx context.Context, in *CtmCartRetrieveRequest, opts ...grpc.CallOption) (*CtmCartResponse, error)
	RetrieveCtmCardCares(ctx context.Context, in *CtmCardCaresRetrieveRequest, opts ...grpc.CallOption) (*CtmCardCaresResponse, error)
	RetrieveCtmProduct(ctx context.Context, in *CtmProductRetrieveRequest, opts ...grpc.CallOption) (*CtmProductResponse, error)
	RetrieveCtmWallet(ctx context.Context, in *RetrieveCtmWalletRequest, opts ...grpc.CallOption) (*CtmWalletResponse, error)
	RetrieveCtmWalletRecord(ctx context.Context, in *RetrieveCtmWalletRecordRequest, opts ...grpc.CallOption) (*CtmWalletRecordResponse, error)
	Update(ctx context.Context, in *CtmBaseRequest, opts ...grpc.CallOption) (*CtmBaseResponse, error)
	UpdateAddr(ctx context.Context, in *CtmAddrUpdateRequest, opts ...grpc.CallOption) (*CtmAddrResponse, error)
	UpdateByIdCtmProduct(ctx context.Context, in *CtmProductUpdateRequest, opts ...grpc.CallOption) (*CtmProductResponse, error)
	UpdateCart(ctx context.Context, in *CtmCartUpdateRequest, opts ...grpc.CallOption) (*CtmCartResponse, error)
	UpdateCtmCardCares(ctx context.Context, in *CtmCardCaresUpdateRequest, opts ...grpc.CallOption) (*CtmCardCaresResponse, error)
	UpdateCtmProduct(ctx context.Context, in *CtmProductUpdateRequest, opts ...grpc.CallOption) (*CtmProductResponse, error)
	UpdateCtmWallet(ctx context.Context, in *UpdateCtmWalletRequest, opts ...grpc.CallOption) (*CtmWalletResponse, error)
	UpdateCtmWalletRecord(ctx context.Context, in *UpdateCtmWalletRecordRequest, opts ...grpc.CallOption) (*CtmWalletRecordResponse, error)
	UpdateSpuSnapshot(ctx context.Context, in *CtmUpdateSpuSnapShotRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type ctmItoControllerClient struct {
	cc grpc.ClientConnInterface
}

func NewCtmItoControllerClient(cc grpc.ClientConnInterface) CtmItoControllerClient {
	return &ctmItoControllerClient{cc}
}

func (c *ctmItoControllerClient) ChangeSelectedAllCart(ctx context.Context, in *CtmCartSelectedAllChangeRequest, opts ...grpc.CallOption) (*CtmItoChangeSelectedAllCartResponse, error) {
	out := new(CtmItoChangeSelectedAllCartResponse)
	err := c.cc.Invoke(ctx, CtmItoController_ChangeSelectedAllCart_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) Create(ctx context.Context, in *CtmBaseRequest, opts ...grpc.CallOption) (*CtmBaseResponse, error) {
	out := new(CtmBaseResponse)
	err := c.cc.Invoke(ctx, CtmItoController_Create_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) CreateAddr(ctx context.Context, in *CtmAddrCreateRequest, opts ...grpc.CallOption) (*CtmAddrResponse, error) {
	out := new(CtmAddrResponse)
	err := c.cc.Invoke(ctx, CtmItoController_CreateAddr_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) CreateCart(ctx context.Context, in *CtmCartCreateRequest, opts ...grpc.CallOption) (*CtmCartResponse, error) {
	out := new(CtmCartResponse)
	err := c.cc.Invoke(ctx, CtmItoController_CreateCart_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) CreateCtmCardCares(ctx context.Context, in *CtmCardCaresCreateRequest, opts ...grpc.CallOption) (*CtmCardCaresResponse, error) {
	out := new(CtmCardCaresResponse)
	err := c.cc.Invoke(ctx, CtmItoController_CreateCtmCardCares_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) CreateCtmProduct(ctx context.Context, in *CtmProductCreateRequest, opts ...grpc.CallOption) (*CtmProductResponse, error) {
	out := new(CtmProductResponse)
	err := c.cc.Invoke(ctx, CtmItoController_CreateCtmProduct_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) CreateCtmWallet(ctx context.Context, in *CreateCtmWalletRequest, opts ...grpc.CallOption) (*CtmWalletResponse, error) {
	out := new(CtmWalletResponse)
	err := c.cc.Invoke(ctx, CtmItoController_CreateCtmWallet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) CreateCtmWalletRecord(ctx context.Context, in *CreateCtmWalletRecordRequest, opts ...grpc.CallOption) (*CtmWalletRecordResponse, error) {
	out := new(CtmWalletRecordResponse)
	err := c.cc.Invoke(ctx, CtmItoController_CreateCtmWalletRecord_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) DefaultAddr(ctx context.Context, in *CtmDefaultAddrRequest, opts ...grpc.CallOption) (*CtmItoDefaultAddrResponse, error) {
	out := new(CtmItoDefaultAddrResponse)
	err := c.cc.Invoke(ctx, CtmItoController_DefaultAddr_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) Destroy(ctx context.Context, in *CtmBaseDestroyRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, CtmItoController_Destroy_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) DestroyAddr(ctx context.Context, in *CtmAddrDestroyRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, CtmItoController_DestroyAddr_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) DestroyCart(ctx context.Context, in *CtmCartDestroyRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, CtmItoController_DestroyCart_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) DestroyCtmCardCares(ctx context.Context, in *CtmItoDestroyCtmCardCaresRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, CtmItoController_DestroyCtmCardCares_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) DestroyCtmProduct(ctx context.Context, in *CtmItoDestroyCtmProductRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, CtmItoController_DestroyCtmProduct_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) DestroyCtmWallet(ctx context.Context, in *DestroyCtmWalletRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, CtmItoController_DestroyCtmWallet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) DestroyCtmWalletRecord(ctx context.Context, in *DestroyCtmWalletRecordRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, CtmItoController_DestroyCtmWalletRecord_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) List(ctx context.Context, in *CtmBaseListRequest, opts ...grpc.CallOption) (*CtmBaseListResponse, error) {
	out := new(CtmBaseListResponse)
	err := c.cc.Invoke(ctx, CtmItoController_List_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) ListAddr(ctx context.Context, in *CtmAddrListRequest, opts ...grpc.CallOption) (*CtmAddrListResponse, error) {
	out := new(CtmAddrListResponse)
	err := c.cc.Invoke(ctx, CtmItoController_ListAddr_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) ListCart(ctx context.Context, in *CtmCartListRequest, opts ...grpc.CallOption) (*CtmCartListResponse, error) {
	out := new(CtmCartListResponse)
	err := c.cc.Invoke(ctx, CtmItoController_ListCart_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) ListCtmCardCares(ctx context.Context, in *CtmCardCaresListRequest, opts ...grpc.CallOption) (*CtmCardCaresListResponse, error) {
	out := new(CtmCardCaresListResponse)
	err := c.cc.Invoke(ctx, CtmItoController_ListCtmCardCares_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) ListCtmProduct(ctx context.Context, in *CtmProductListRequest, opts ...grpc.CallOption) (*CtmProductListResponse, error) {
	out := new(CtmProductListResponse)
	err := c.cc.Invoke(ctx, CtmItoController_ListCtmProduct_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) ListCtmWallet(ctx context.Context, in *ListCtmWalletRequest, opts ...grpc.CallOption) (*CtmWalletListResponse, error) {
	out := new(CtmWalletListResponse)
	err := c.cc.Invoke(ctx, CtmItoController_ListCtmWallet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) ListCtmWalletRecord(ctx context.Context, in *ListCtmWalletRecordRequest, opts ...grpc.CallOption) (*CtmWalletRecordListResponse, error) {
	out := new(CtmWalletRecordListResponse)
	err := c.cc.Invoke(ctx, CtmItoController_ListCtmWalletRecord_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) NextCardNoCtmWallet(ctx context.Context, in *WalletNextCardCodeRequest, opts ...grpc.CallOption) (*WalletNextCardCodeResponse, error) {
	out := new(WalletNextCardCodeResponse)
	err := c.cc.Invoke(ctx, CtmItoController_NextCardNoCtmWallet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) OptionsCtmWallet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*CtmWalletOptionsResponse, error) {
	out := new(CtmWalletOptionsResponse)
	err := c.cc.Invoke(ctx, CtmItoController_OptionsCtmWallet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) PartialUpdate(ctx context.Context, in *CtmBasePartialUpdateRequest, opts ...grpc.CallOption) (*CtmBaseResponse, error) {
	out := new(CtmBaseResponse)
	err := c.cc.Invoke(ctx, CtmItoController_PartialUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) Retrieve(ctx context.Context, in *CtmBaseRetrieveRequest, opts ...grpc.CallOption) (*CtmBaseResponse, error) {
	out := new(CtmBaseResponse)
	err := c.cc.Invoke(ctx, CtmItoController_Retrieve_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) RetrieveAddr(ctx context.Context, in *CtmAddrRetrieveRequest, opts ...grpc.CallOption) (*CtmAddrResponse, error) {
	out := new(CtmAddrResponse)
	err := c.cc.Invoke(ctx, CtmItoController_RetrieveAddr_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) RetrieveCart(ctx context.Context, in *CtmCartRetrieveRequest, opts ...grpc.CallOption) (*CtmCartResponse, error) {
	out := new(CtmCartResponse)
	err := c.cc.Invoke(ctx, CtmItoController_RetrieveCart_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) RetrieveCtmCardCares(ctx context.Context, in *CtmCardCaresRetrieveRequest, opts ...grpc.CallOption) (*CtmCardCaresResponse, error) {
	out := new(CtmCardCaresResponse)
	err := c.cc.Invoke(ctx, CtmItoController_RetrieveCtmCardCares_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) RetrieveCtmProduct(ctx context.Context, in *CtmProductRetrieveRequest, opts ...grpc.CallOption) (*CtmProductResponse, error) {
	out := new(CtmProductResponse)
	err := c.cc.Invoke(ctx, CtmItoController_RetrieveCtmProduct_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) RetrieveCtmWallet(ctx context.Context, in *RetrieveCtmWalletRequest, opts ...grpc.CallOption) (*CtmWalletResponse, error) {
	out := new(CtmWalletResponse)
	err := c.cc.Invoke(ctx, CtmItoController_RetrieveCtmWallet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) RetrieveCtmWalletRecord(ctx context.Context, in *RetrieveCtmWalletRecordRequest, opts ...grpc.CallOption) (*CtmWalletRecordResponse, error) {
	out := new(CtmWalletRecordResponse)
	err := c.cc.Invoke(ctx, CtmItoController_RetrieveCtmWalletRecord_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) Update(ctx context.Context, in *CtmBaseRequest, opts ...grpc.CallOption) (*CtmBaseResponse, error) {
	out := new(CtmBaseResponse)
	err := c.cc.Invoke(ctx, CtmItoController_Update_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) UpdateAddr(ctx context.Context, in *CtmAddrUpdateRequest, opts ...grpc.CallOption) (*CtmAddrResponse, error) {
	out := new(CtmAddrResponse)
	err := c.cc.Invoke(ctx, CtmItoController_UpdateAddr_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) UpdateByIdCtmProduct(ctx context.Context, in *CtmProductUpdateRequest, opts ...grpc.CallOption) (*CtmProductResponse, error) {
	out := new(CtmProductResponse)
	err := c.cc.Invoke(ctx, CtmItoController_UpdateByIdCtmProduct_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) UpdateCart(ctx context.Context, in *CtmCartUpdateRequest, opts ...grpc.CallOption) (*CtmCartResponse, error) {
	out := new(CtmCartResponse)
	err := c.cc.Invoke(ctx, CtmItoController_UpdateCart_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) UpdateCtmCardCares(ctx context.Context, in *CtmCardCaresUpdateRequest, opts ...grpc.CallOption) (*CtmCardCaresResponse, error) {
	out := new(CtmCardCaresResponse)
	err := c.cc.Invoke(ctx, CtmItoController_UpdateCtmCardCares_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) UpdateCtmProduct(ctx context.Context, in *CtmProductUpdateRequest, opts ...grpc.CallOption) (*CtmProductResponse, error) {
	out := new(CtmProductResponse)
	err := c.cc.Invoke(ctx, CtmItoController_UpdateCtmProduct_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) UpdateCtmWallet(ctx context.Context, in *UpdateCtmWalletRequest, opts ...grpc.CallOption) (*CtmWalletResponse, error) {
	out := new(CtmWalletResponse)
	err := c.cc.Invoke(ctx, CtmItoController_UpdateCtmWallet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) UpdateCtmWalletRecord(ctx context.Context, in *UpdateCtmWalletRecordRequest, opts ...grpc.CallOption) (*CtmWalletRecordResponse, error) {
	out := new(CtmWalletRecordResponse)
	err := c.cc.Invoke(ctx, CtmItoController_UpdateCtmWalletRecord_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) UpdateSpuSnapshot(ctx context.Context, in *CtmUpdateSpuSnapShotRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, CtmItoController_UpdateSpuSnapshot_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CtmItoControllerServer is the server API for CtmItoController service.
// All implementations must embed UnimplementedCtmItoControllerServer
// for forward compatibility
type CtmItoControllerServer interface {
	ChangeSelectedAllCart(context.Context, *CtmCartSelectedAllChangeRequest) (*CtmItoChangeSelectedAllCartResponse, error)
	Create(context.Context, *CtmBaseRequest) (*CtmBaseResponse, error)
	CreateAddr(context.Context, *CtmAddrCreateRequest) (*CtmAddrResponse, error)
	CreateCart(context.Context, *CtmCartCreateRequest) (*CtmCartResponse, error)
	CreateCtmCardCares(context.Context, *CtmCardCaresCreateRequest) (*CtmCardCaresResponse, error)
	CreateCtmProduct(context.Context, *CtmProductCreateRequest) (*CtmProductResponse, error)
	CreateCtmWallet(context.Context, *CreateCtmWalletRequest) (*CtmWalletResponse, error)
	CreateCtmWalletRecord(context.Context, *CreateCtmWalletRecordRequest) (*CtmWalletRecordResponse, error)
	DefaultAddr(context.Context, *CtmDefaultAddrRequest) (*CtmItoDefaultAddrResponse, error)
	Destroy(context.Context, *CtmBaseDestroyRequest) (*emptypb.Empty, error)
	DestroyAddr(context.Context, *CtmAddrDestroyRequest) (*emptypb.Empty, error)
	DestroyCart(context.Context, *CtmCartDestroyRequest) (*emptypb.Empty, error)
	DestroyCtmCardCares(context.Context, *CtmItoDestroyCtmCardCaresRequest) (*emptypb.Empty, error)
	DestroyCtmProduct(context.Context, *CtmItoDestroyCtmProductRequest) (*emptypb.Empty, error)
	DestroyCtmWallet(context.Context, *DestroyCtmWalletRequest) (*emptypb.Empty, error)
	DestroyCtmWalletRecord(context.Context, *DestroyCtmWalletRecordRequest) (*emptypb.Empty, error)
	List(context.Context, *CtmBaseListRequest) (*CtmBaseListResponse, error)
	ListAddr(context.Context, *CtmAddrListRequest) (*CtmAddrListResponse, error)
	ListCart(context.Context, *CtmCartListRequest) (*CtmCartListResponse, error)
	ListCtmCardCares(context.Context, *CtmCardCaresListRequest) (*CtmCardCaresListResponse, error)
	ListCtmProduct(context.Context, *CtmProductListRequest) (*CtmProductListResponse, error)
	ListCtmWallet(context.Context, *ListCtmWalletRequest) (*CtmWalletListResponse, error)
	ListCtmWalletRecord(context.Context, *ListCtmWalletRecordRequest) (*CtmWalletRecordListResponse, error)
	NextCardNoCtmWallet(context.Context, *WalletNextCardCodeRequest) (*WalletNextCardCodeResponse, error)
	OptionsCtmWallet(context.Context, *emptypb.Empty) (*CtmWalletOptionsResponse, error)
	PartialUpdate(context.Context, *CtmBasePartialUpdateRequest) (*CtmBaseResponse, error)
	Retrieve(context.Context, *CtmBaseRetrieveRequest) (*CtmBaseResponse, error)
	RetrieveAddr(context.Context, *CtmAddrRetrieveRequest) (*CtmAddrResponse, error)
	RetrieveCart(context.Context, *CtmCartRetrieveRequest) (*CtmCartResponse, error)
	RetrieveCtmCardCares(context.Context, *CtmCardCaresRetrieveRequest) (*CtmCardCaresResponse, error)
	RetrieveCtmProduct(context.Context, *CtmProductRetrieveRequest) (*CtmProductResponse, error)
	RetrieveCtmWallet(context.Context, *RetrieveCtmWalletRequest) (*CtmWalletResponse, error)
	RetrieveCtmWalletRecord(context.Context, *RetrieveCtmWalletRecordRequest) (*CtmWalletRecordResponse, error)
	Update(context.Context, *CtmBaseRequest) (*CtmBaseResponse, error)
	UpdateAddr(context.Context, *CtmAddrUpdateRequest) (*CtmAddrResponse, error)
	UpdateByIdCtmProduct(context.Context, *CtmProductUpdateRequest) (*CtmProductResponse, error)
	UpdateCart(context.Context, *CtmCartUpdateRequest) (*CtmCartResponse, error)
	UpdateCtmCardCares(context.Context, *CtmCardCaresUpdateRequest) (*CtmCardCaresResponse, error)
	UpdateCtmProduct(context.Context, *CtmProductUpdateRequest) (*CtmProductResponse, error)
	UpdateCtmWallet(context.Context, *UpdateCtmWalletRequest) (*CtmWalletResponse, error)
	UpdateCtmWalletRecord(context.Context, *UpdateCtmWalletRecordRequest) (*CtmWalletRecordResponse, error)
	UpdateSpuSnapshot(context.Context, *CtmUpdateSpuSnapShotRequest) (*emptypb.Empty, error)
	mustEmbedUnimplementedCtmItoControllerServer()
}

// UnimplementedCtmItoControllerServer must be embedded to have forward compatible implementations.
type UnimplementedCtmItoControllerServer struct {
}

func (UnimplementedCtmItoControllerServer) ChangeSelectedAllCart(context.Context, *CtmCartSelectedAllChangeRequest) (*CtmItoChangeSelectedAllCartResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeSelectedAllCart not implemented")
}
func (UnimplementedCtmItoControllerServer) Create(context.Context, *CtmBaseRequest) (*CtmBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (UnimplementedCtmItoControllerServer) CreateAddr(context.Context, *CtmAddrCreateRequest) (*CtmAddrResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAddr not implemented")
}
func (UnimplementedCtmItoControllerServer) CreateCart(context.Context, *CtmCartCreateRequest) (*CtmCartResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCart not implemented")
}
func (UnimplementedCtmItoControllerServer) CreateCtmCardCares(context.Context, *CtmCardCaresCreateRequest) (*CtmCardCaresResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCtmCardCares not implemented")
}
func (UnimplementedCtmItoControllerServer) CreateCtmProduct(context.Context, *CtmProductCreateRequest) (*CtmProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCtmProduct not implemented")
}
func (UnimplementedCtmItoControllerServer) CreateCtmWallet(context.Context, *CreateCtmWalletRequest) (*CtmWalletResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCtmWallet not implemented")
}
func (UnimplementedCtmItoControllerServer) CreateCtmWalletRecord(context.Context, *CreateCtmWalletRecordRequest) (*CtmWalletRecordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCtmWalletRecord not implemented")
}
func (UnimplementedCtmItoControllerServer) DefaultAddr(context.Context, *CtmDefaultAddrRequest) (*CtmItoDefaultAddrResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DefaultAddr not implemented")
}
func (UnimplementedCtmItoControllerServer) Destroy(context.Context, *CtmBaseDestroyRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Destroy not implemented")
}
func (UnimplementedCtmItoControllerServer) DestroyAddr(context.Context, *CtmAddrDestroyRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyAddr not implemented")
}
func (UnimplementedCtmItoControllerServer) DestroyCart(context.Context, *CtmCartDestroyRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyCart not implemented")
}
func (UnimplementedCtmItoControllerServer) DestroyCtmCardCares(context.Context, *CtmItoDestroyCtmCardCaresRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyCtmCardCares not implemented")
}
func (UnimplementedCtmItoControllerServer) DestroyCtmProduct(context.Context, *CtmItoDestroyCtmProductRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyCtmProduct not implemented")
}
func (UnimplementedCtmItoControllerServer) DestroyCtmWallet(context.Context, *DestroyCtmWalletRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyCtmWallet not implemented")
}
func (UnimplementedCtmItoControllerServer) DestroyCtmWalletRecord(context.Context, *DestroyCtmWalletRecordRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyCtmWalletRecord not implemented")
}
func (UnimplementedCtmItoControllerServer) List(context.Context, *CtmBaseListRequest) (*CtmBaseListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (UnimplementedCtmItoControllerServer) ListAddr(context.Context, *CtmAddrListRequest) (*CtmAddrListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAddr not implemented")
}
func (UnimplementedCtmItoControllerServer) ListCart(context.Context, *CtmCartListRequest) (*CtmCartListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCart not implemented")
}
func (UnimplementedCtmItoControllerServer) ListCtmCardCares(context.Context, *CtmCardCaresListRequest) (*CtmCardCaresListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCtmCardCares not implemented")
}
func (UnimplementedCtmItoControllerServer) ListCtmProduct(context.Context, *CtmProductListRequest) (*CtmProductListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCtmProduct not implemented")
}
func (UnimplementedCtmItoControllerServer) ListCtmWallet(context.Context, *ListCtmWalletRequest) (*CtmWalletListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCtmWallet not implemented")
}
func (UnimplementedCtmItoControllerServer) ListCtmWalletRecord(context.Context, *ListCtmWalletRecordRequest) (*CtmWalletRecordListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCtmWalletRecord not implemented")
}
func (UnimplementedCtmItoControllerServer) NextCardNoCtmWallet(context.Context, *WalletNextCardCodeRequest) (*WalletNextCardCodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NextCardNoCtmWallet not implemented")
}
func (UnimplementedCtmItoControllerServer) OptionsCtmWallet(context.Context, *emptypb.Empty) (*CtmWalletOptionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OptionsCtmWallet not implemented")
}
func (UnimplementedCtmItoControllerServer) PartialUpdate(context.Context, *CtmBasePartialUpdateRequest) (*CtmBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PartialUpdate not implemented")
}
func (UnimplementedCtmItoControllerServer) Retrieve(context.Context, *CtmBaseRetrieveRequest) (*CtmBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Retrieve not implemented")
}
func (UnimplementedCtmItoControllerServer) RetrieveAddr(context.Context, *CtmAddrRetrieveRequest) (*CtmAddrResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveAddr not implemented")
}
func (UnimplementedCtmItoControllerServer) RetrieveCart(context.Context, *CtmCartRetrieveRequest) (*CtmCartResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveCart not implemented")
}
func (UnimplementedCtmItoControllerServer) RetrieveCtmCardCares(context.Context, *CtmCardCaresRetrieveRequest) (*CtmCardCaresResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveCtmCardCares not implemented")
}
func (UnimplementedCtmItoControllerServer) RetrieveCtmProduct(context.Context, *CtmProductRetrieveRequest) (*CtmProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveCtmProduct not implemented")
}
func (UnimplementedCtmItoControllerServer) RetrieveCtmWallet(context.Context, *RetrieveCtmWalletRequest) (*CtmWalletResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveCtmWallet not implemented")
}
func (UnimplementedCtmItoControllerServer) RetrieveCtmWalletRecord(context.Context, *RetrieveCtmWalletRecordRequest) (*CtmWalletRecordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveCtmWalletRecord not implemented")
}
func (UnimplementedCtmItoControllerServer) Update(context.Context, *CtmBaseRequest) (*CtmBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (UnimplementedCtmItoControllerServer) UpdateAddr(context.Context, *CtmAddrUpdateRequest) (*CtmAddrResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAddr not implemented")
}
func (UnimplementedCtmItoControllerServer) UpdateByIdCtmProduct(context.Context, *CtmProductUpdateRequest) (*CtmProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateByIdCtmProduct not implemented")
}
func (UnimplementedCtmItoControllerServer) UpdateCart(context.Context, *CtmCartUpdateRequest) (*CtmCartResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCart not implemented")
}
func (UnimplementedCtmItoControllerServer) UpdateCtmCardCares(context.Context, *CtmCardCaresUpdateRequest) (*CtmCardCaresResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCtmCardCares not implemented")
}
func (UnimplementedCtmItoControllerServer) UpdateCtmProduct(context.Context, *CtmProductUpdateRequest) (*CtmProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCtmProduct not implemented")
}
func (UnimplementedCtmItoControllerServer) UpdateCtmWallet(context.Context, *UpdateCtmWalletRequest) (*CtmWalletResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCtmWallet not implemented")
}
func (UnimplementedCtmItoControllerServer) UpdateCtmWalletRecord(context.Context, *UpdateCtmWalletRecordRequest) (*CtmWalletRecordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCtmWalletRecord not implemented")
}
func (UnimplementedCtmItoControllerServer) UpdateSpuSnapshot(context.Context, *CtmUpdateSpuSnapShotRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSpuSnapshot not implemented")
}
func (UnimplementedCtmItoControllerServer) mustEmbedUnimplementedCtmItoControllerServer() {}

// UnsafeCtmItoControllerServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CtmItoControllerServer will
// result in compilation errors.
type UnsafeCtmItoControllerServer interface {
	mustEmbedUnimplementedCtmItoControllerServer()
}

func RegisterCtmItoControllerServer(s grpc.ServiceRegistrar, srv CtmItoControllerServer) {
	s.RegisterService(&CtmItoController_ServiceDesc, srv)
}

func _CtmItoController_ChangeSelectedAllCart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmCartSelectedAllChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).ChangeSelectedAllCart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_ChangeSelectedAllCart_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).ChangeSelectedAllCart(ctx, req.(*CtmCartSelectedAllChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmBaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_Create_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).Create(ctx, req.(*CtmBaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_CreateAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmAddrCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).CreateAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_CreateAddr_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).CreateAddr(ctx, req.(*CtmAddrCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_CreateCart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmCartCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).CreateCart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_CreateCart_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).CreateCart(ctx, req.(*CtmCartCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_CreateCtmCardCares_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmCardCaresCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).CreateCtmCardCares(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_CreateCtmCardCares_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).CreateCtmCardCares(ctx, req.(*CtmCardCaresCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_CreateCtmProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmProductCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).CreateCtmProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_CreateCtmProduct_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).CreateCtmProduct(ctx, req.(*CtmProductCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_CreateCtmWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCtmWalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).CreateCtmWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_CreateCtmWallet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).CreateCtmWallet(ctx, req.(*CreateCtmWalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_CreateCtmWalletRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCtmWalletRecordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).CreateCtmWalletRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_CreateCtmWalletRecord_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).CreateCtmWalletRecord(ctx, req.(*CreateCtmWalletRecordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_DefaultAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmDefaultAddrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).DefaultAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_DefaultAddr_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).DefaultAddr(ctx, req.(*CtmDefaultAddrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_Destroy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmBaseDestroyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).Destroy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_Destroy_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).Destroy(ctx, req.(*CtmBaseDestroyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_DestroyAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmAddrDestroyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).DestroyAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_DestroyAddr_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).DestroyAddr(ctx, req.(*CtmAddrDestroyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_DestroyCart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmCartDestroyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).DestroyCart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_DestroyCart_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).DestroyCart(ctx, req.(*CtmCartDestroyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_DestroyCtmCardCares_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmItoDestroyCtmCardCaresRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).DestroyCtmCardCares(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_DestroyCtmCardCares_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).DestroyCtmCardCares(ctx, req.(*CtmItoDestroyCtmCardCaresRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_DestroyCtmProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmItoDestroyCtmProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).DestroyCtmProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_DestroyCtmProduct_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).DestroyCtmProduct(ctx, req.(*CtmItoDestroyCtmProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_DestroyCtmWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestroyCtmWalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).DestroyCtmWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_DestroyCtmWallet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).DestroyCtmWallet(ctx, req.(*DestroyCtmWalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_DestroyCtmWalletRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestroyCtmWalletRecordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).DestroyCtmWalletRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_DestroyCtmWalletRecord_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).DestroyCtmWalletRecord(ctx, req.(*DestroyCtmWalletRecordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmBaseListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_List_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).List(ctx, req.(*CtmBaseListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_ListAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmAddrListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).ListAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_ListAddr_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).ListAddr(ctx, req.(*CtmAddrListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_ListCart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmCartListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).ListCart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_ListCart_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).ListCart(ctx, req.(*CtmCartListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_ListCtmCardCares_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmCardCaresListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).ListCtmCardCares(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_ListCtmCardCares_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).ListCtmCardCares(ctx, req.(*CtmCardCaresListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_ListCtmProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmProductListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).ListCtmProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_ListCtmProduct_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).ListCtmProduct(ctx, req.(*CtmProductListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_ListCtmWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCtmWalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).ListCtmWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_ListCtmWallet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).ListCtmWallet(ctx, req.(*ListCtmWalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_ListCtmWalletRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCtmWalletRecordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).ListCtmWalletRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_ListCtmWalletRecord_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).ListCtmWalletRecord(ctx, req.(*ListCtmWalletRecordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_NextCardNoCtmWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WalletNextCardCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).NextCardNoCtmWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_NextCardNoCtmWallet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).NextCardNoCtmWallet(ctx, req.(*WalletNextCardCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_OptionsCtmWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).OptionsCtmWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_OptionsCtmWallet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).OptionsCtmWallet(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_PartialUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmBasePartialUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).PartialUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_PartialUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).PartialUpdate(ctx, req.(*CtmBasePartialUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_Retrieve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmBaseRetrieveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).Retrieve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_Retrieve_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).Retrieve(ctx, req.(*CtmBaseRetrieveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_RetrieveAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmAddrRetrieveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).RetrieveAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_RetrieveAddr_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).RetrieveAddr(ctx, req.(*CtmAddrRetrieveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_RetrieveCart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmCartRetrieveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).RetrieveCart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_RetrieveCart_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).RetrieveCart(ctx, req.(*CtmCartRetrieveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_RetrieveCtmCardCares_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmCardCaresRetrieveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).RetrieveCtmCardCares(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_RetrieveCtmCardCares_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).RetrieveCtmCardCares(ctx, req.(*CtmCardCaresRetrieveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_RetrieveCtmProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmProductRetrieveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).RetrieveCtmProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_RetrieveCtmProduct_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).RetrieveCtmProduct(ctx, req.(*CtmProductRetrieveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_RetrieveCtmWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveCtmWalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).RetrieveCtmWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_RetrieveCtmWallet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).RetrieveCtmWallet(ctx, req.(*RetrieveCtmWalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_RetrieveCtmWalletRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveCtmWalletRecordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).RetrieveCtmWalletRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_RetrieveCtmWalletRecord_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).RetrieveCtmWalletRecord(ctx, req.(*RetrieveCtmWalletRecordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmBaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_Update_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).Update(ctx, req.(*CtmBaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_UpdateAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmAddrUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).UpdateAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_UpdateAddr_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).UpdateAddr(ctx, req.(*CtmAddrUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_UpdateByIdCtmProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmProductUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).UpdateByIdCtmProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_UpdateByIdCtmProduct_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).UpdateByIdCtmProduct(ctx, req.(*CtmProductUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_UpdateCart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmCartUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).UpdateCart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_UpdateCart_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).UpdateCart(ctx, req.(*CtmCartUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_UpdateCtmCardCares_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmCardCaresUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).UpdateCtmCardCares(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_UpdateCtmCardCares_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).UpdateCtmCardCares(ctx, req.(*CtmCardCaresUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_UpdateCtmProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmProductUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).UpdateCtmProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_UpdateCtmProduct_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).UpdateCtmProduct(ctx, req.(*CtmProductUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_UpdateCtmWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCtmWalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).UpdateCtmWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_UpdateCtmWallet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).UpdateCtmWallet(ctx, req.(*UpdateCtmWalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_UpdateCtmWalletRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCtmWalletRecordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).UpdateCtmWalletRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_UpdateCtmWalletRecord_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).UpdateCtmWalletRecord(ctx, req.(*UpdateCtmWalletRecordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_UpdateSpuSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmUpdateSpuSnapShotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).UpdateSpuSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_UpdateSpuSnapshot_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).UpdateSpuSnapshot(ctx, req.(*CtmUpdateSpuSnapShotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// CtmItoController_ServiceDesc is the grpc.ServiceDesc for CtmItoController service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CtmItoController_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "customer_service.customer_ito.CtmItoController",
	HandlerType: (*CtmItoControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ChangeSelectedAllCart",
			Handler:    _CtmItoController_ChangeSelectedAllCart_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _CtmItoController_Create_Handler,
		},
		{
			MethodName: "CreateAddr",
			Handler:    _CtmItoController_CreateAddr_Handler,
		},
		{
			MethodName: "CreateCart",
			Handler:    _CtmItoController_CreateCart_Handler,
		},
		{
			MethodName: "CreateCtmCardCares",
			Handler:    _CtmItoController_CreateCtmCardCares_Handler,
		},
		{
			MethodName: "CreateCtmProduct",
			Handler:    _CtmItoController_CreateCtmProduct_Handler,
		},
		{
			MethodName: "CreateCtmWallet",
			Handler:    _CtmItoController_CreateCtmWallet_Handler,
		},
		{
			MethodName: "CreateCtmWalletRecord",
			Handler:    _CtmItoController_CreateCtmWalletRecord_Handler,
		},
		{
			MethodName: "DefaultAddr",
			Handler:    _CtmItoController_DefaultAddr_Handler,
		},
		{
			MethodName: "Destroy",
			Handler:    _CtmItoController_Destroy_Handler,
		},
		{
			MethodName: "DestroyAddr",
			Handler:    _CtmItoController_DestroyAddr_Handler,
		},
		{
			MethodName: "DestroyCart",
			Handler:    _CtmItoController_DestroyCart_Handler,
		},
		{
			MethodName: "DestroyCtmCardCares",
			Handler:    _CtmItoController_DestroyCtmCardCares_Handler,
		},
		{
			MethodName: "DestroyCtmProduct",
			Handler:    _CtmItoController_DestroyCtmProduct_Handler,
		},
		{
			MethodName: "DestroyCtmWallet",
			Handler:    _CtmItoController_DestroyCtmWallet_Handler,
		},
		{
			MethodName: "DestroyCtmWalletRecord",
			Handler:    _CtmItoController_DestroyCtmWalletRecord_Handler,
		},
		{
			MethodName: "List",
			Handler:    _CtmItoController_List_Handler,
		},
		{
			MethodName: "ListAddr",
			Handler:    _CtmItoController_ListAddr_Handler,
		},
		{
			MethodName: "ListCart",
			Handler:    _CtmItoController_ListCart_Handler,
		},
		{
			MethodName: "ListCtmCardCares",
			Handler:    _CtmItoController_ListCtmCardCares_Handler,
		},
		{
			MethodName: "ListCtmProduct",
			Handler:    _CtmItoController_ListCtmProduct_Handler,
		},
		{
			MethodName: "ListCtmWallet",
			Handler:    _CtmItoController_ListCtmWallet_Handler,
		},
		{
			MethodName: "ListCtmWalletRecord",
			Handler:    _CtmItoController_ListCtmWalletRecord_Handler,
		},
		{
			MethodName: "NextCardNoCtmWallet",
			Handler:    _CtmItoController_NextCardNoCtmWallet_Handler,
		},
		{
			MethodName: "OptionsCtmWallet",
			Handler:    _CtmItoController_OptionsCtmWallet_Handler,
		},
		{
			MethodName: "PartialUpdate",
			Handler:    _CtmItoController_PartialUpdate_Handler,
		},
		{
			MethodName: "Retrieve",
			Handler:    _CtmItoController_Retrieve_Handler,
		},
		{
			MethodName: "RetrieveAddr",
			Handler:    _CtmItoController_RetrieveAddr_Handler,
		},
		{
			MethodName: "RetrieveCart",
			Handler:    _CtmItoController_RetrieveCart_Handler,
		},
		{
			MethodName: "RetrieveCtmCardCares",
			Handler:    _CtmItoController_RetrieveCtmCardCares_Handler,
		},
		{
			MethodName: "RetrieveCtmProduct",
			Handler:    _CtmItoController_RetrieveCtmProduct_Handler,
		},
		{
			MethodName: "RetrieveCtmWallet",
			Handler:    _CtmItoController_RetrieveCtmWallet_Handler,
		},
		{
			MethodName: "RetrieveCtmWalletRecord",
			Handler:    _CtmItoController_RetrieveCtmWalletRecord_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _CtmItoController_Update_Handler,
		},
		{
			MethodName: "UpdateAddr",
			Handler:    _CtmItoController_UpdateAddr_Handler,
		},
		{
			MethodName: "UpdateByIdCtmProduct",
			Handler:    _CtmItoController_UpdateByIdCtmProduct_Handler,
		},
		{
			MethodName: "UpdateCart",
			Handler:    _CtmItoController_UpdateCart_Handler,
		},
		{
			MethodName: "UpdateCtmCardCares",
			Handler:    _CtmItoController_UpdateCtmCardCares_Handler,
		},
		{
			MethodName: "UpdateCtmProduct",
			Handler:    _CtmItoController_UpdateCtmProduct_Handler,
		},
		{
			MethodName: "UpdateCtmWallet",
			Handler:    _CtmItoController_UpdateCtmWallet_Handler,
		},
		{
			MethodName: "UpdateCtmWalletRecord",
			Handler:    _CtmItoController_UpdateCtmWalletRecord_Handler,
		},
		{
			MethodName: "UpdateSpuSnapshot",
			Handler:    _CtmItoController_UpdateSpuSnapshot_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "customer_ito.proto",
}
