// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.19.4
// source: customer_ito.proto

package pbCtmIto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CardCaresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TypeName       string  `protobuf:"bytes,2,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`
	Name           *string `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Type           int32   `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	ExtendTimeDiff *int32  `protobuf:"varint,5,opt,name=extend_time_diff,json=extendTimeDiff,proto3,oneof" json:"extend_time_diff,omitempty"`
	ActiveTimeDiff *int32  `protobuf:"varint,6,opt,name=active_time_diff,json=activeTimeDiff,proto3,oneof" json:"active_time_diff,omitempty"`
	ExtendTimeUnit string  `protobuf:"bytes,7,opt,name=extend_time_unit,json=extendTimeUnit,proto3" json:"extend_time_unit,omitempty"`
	ActiveTimeUnit string  `protobuf:"bytes,8,opt,name=active_time_unit,json=activeTimeUnit,proto3" json:"active_time_unit,omitempty"`
	IsValid        bool    `protobuf:"varint,9,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Remark         *string `protobuf:"bytes,10,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
	CreateTime     string  `protobuf:"bytes,11,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime     string  `protobuf:"bytes,12,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *CardCaresResponse) Reset() {
	*x = CardCaresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardCaresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardCaresResponse) ProtoMessage() {}

func (x *CardCaresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardCaresResponse.ProtoReflect.Descriptor instead.
func (*CardCaresResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{0}
}

func (x *CardCaresResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardCaresResponse) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *CardCaresResponse) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CardCaresResponse) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CardCaresResponse) GetExtendTimeDiff() int32 {
	if x != nil && x.ExtendTimeDiff != nil {
		return *x.ExtendTimeDiff
	}
	return 0
}

func (x *CardCaresResponse) GetActiveTimeDiff() int32 {
	if x != nil && x.ActiveTimeDiff != nil {
		return *x.ActiveTimeDiff
	}
	return 0
}

func (x *CardCaresResponse) GetExtendTimeUnit() string {
	if x != nil {
		return x.ExtendTimeUnit
	}
	return ""
}

func (x *CardCaresResponse) GetActiveTimeUnit() string {
	if x != nil {
		return x.ActiveTimeUnit
	}
	return ""
}

func (x *CardCaresResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *CardCaresResponse) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

func (x *CardCaresResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CardCaresResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type CreateCtmWalletRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters      string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	ActivityId   *int32   `protobuf:"varint,3,opt,name=activity_id,json=activityId,proto3,oneof" json:"activity_id,omitempty"`
	ChangeType   *int32   `protobuf:"varint,4,opt,name=change_type,json=changeType,proto3,oneof" json:"change_type,omitempty"`
	BeforePoints *int32   `protobuf:"varint,5,opt,name=before_points,json=beforePoints,proto3,oneof" json:"before_points,omitempty"`
	AfterPoints  *int32   `protobuf:"varint,6,opt,name=after_points,json=afterPoints,proto3,oneof" json:"after_points,omitempty"`
	BeforeAmount *float64 `protobuf:"fixed64,7,opt,name=before_amount,json=beforeAmount,proto3,oneof" json:"before_amount,omitempty"`
	AfterAmount  *float64 `protobuf:"fixed64,8,opt,name=after_amount,json=afterAmount,proto3,oneof" json:"after_amount,omitempty"`
	ChangeCode   *string  `protobuf:"bytes,9,opt,name=change_code,json=changeCode,proto3,oneof" json:"change_code,omitempty"`
	ChangeReason *string  `protobuf:"bytes,10,opt,name=change_reason,json=changeReason,proto3,oneof" json:"change_reason,omitempty"`
	Wallet       *int64   `protobuf:"varint,11,opt,name=wallet,proto3,oneof" json:"wallet,omitempty"`
	OrderUsed    *int64   `protobuf:"varint,12,opt,name=order_used,json=orderUsed,proto3,oneof" json:"order_used,omitempty"`
	RefundUsed   *int64   `protobuf:"varint,13,opt,name=refund_used,json=refundUsed,proto3,oneof" json:"refund_used,omitempty"`
}

func (x *CreateCtmWalletRecordRequest) Reset() {
	*x = CreateCtmWalletRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCtmWalletRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCtmWalletRecordRequest) ProtoMessage() {}

func (x *CreateCtmWalletRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCtmWalletRecordRequest.ProtoReflect.Descriptor instead.
func (*CreateCtmWalletRecordRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCtmWalletRecordRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateCtmWalletRecordRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CreateCtmWalletRecordRequest) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *CreateCtmWalletRecordRequest) GetChangeType() int32 {
	if x != nil && x.ChangeType != nil {
		return *x.ChangeType
	}
	return 0
}

func (x *CreateCtmWalletRecordRequest) GetBeforePoints() int32 {
	if x != nil && x.BeforePoints != nil {
		return *x.BeforePoints
	}
	return 0
}

func (x *CreateCtmWalletRecordRequest) GetAfterPoints() int32 {
	if x != nil && x.AfterPoints != nil {
		return *x.AfterPoints
	}
	return 0
}

func (x *CreateCtmWalletRecordRequest) GetBeforeAmount() float64 {
	if x != nil && x.BeforeAmount != nil {
		return *x.BeforeAmount
	}
	return 0
}

func (x *CreateCtmWalletRecordRequest) GetAfterAmount() float64 {
	if x != nil && x.AfterAmount != nil {
		return *x.AfterAmount
	}
	return 0
}

func (x *CreateCtmWalletRecordRequest) GetChangeCode() string {
	if x != nil && x.ChangeCode != nil {
		return *x.ChangeCode
	}
	return ""
}

func (x *CreateCtmWalletRecordRequest) GetChangeReason() string {
	if x != nil && x.ChangeReason != nil {
		return *x.ChangeReason
	}
	return ""
}

func (x *CreateCtmWalletRecordRequest) GetWallet() int64 {
	if x != nil && x.Wallet != nil {
		return *x.Wallet
	}
	return 0
}

func (x *CreateCtmWalletRecordRequest) GetOrderUsed() int64 {
	if x != nil && x.OrderUsed != nil {
		return *x.OrderUsed
	}
	return 0
}

func (x *CreateCtmWalletRecordRequest) GetRefundUsed() int64 {
	if x != nil && x.RefundUsed != nil {
		return *x.RefundUsed
	}
	return 0
}

type CreateCtmWalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters    string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	CanDeposit *bool    `protobuf:"varint,3,opt,name=can_deposit,json=canDeposit,proto3,oneof" json:"can_deposit,omitempty"`
	ActCardId  *int32   `protobuf:"varint,4,opt,name=act_card_id,json=actCardId,proto3,oneof" json:"act_card_id,omitempty"`
	CardSku    *string  `protobuf:"bytes,5,opt,name=card_sku,json=cardSku,proto3,oneof" json:"card_sku,omitempty"`
	CardCode   *string  `protobuf:"bytes,6,opt,name=card_code,json=cardCode,proto3,oneof" json:"card_code,omitempty"`
	CardName   *string  `protobuf:"bytes,7,opt,name=card_name,json=cardName,proto3,oneof" json:"card_name,omitempty"`
	CardIntro  *string  `protobuf:"bytes,8,opt,name=card_intro,json=cardIntro,proto3,oneof" json:"card_intro,omitempty"`
	CardClass  *int32   `protobuf:"varint,9,opt,name=card_class,json=cardClass,proto3,oneof" json:"card_class,omitempty"`
	CardType   *int32   `protobuf:"varint,10,opt,name=card_type,json=cardType,proto3,oneof" json:"card_type,omitempty"`
	Points     *int32   `protobuf:"varint,11,opt,name=points,proto3,oneof" json:"points,omitempty"`
	Amounts    *float64 `protobuf:"fixed64,12,opt,name=amounts,proto3,oneof" json:"amounts,omitempty"`
	Ctm        *int64   `protobuf:"varint,13,opt,name=ctm,proto3,oneof" json:"ctm,omitempty"`
}

func (x *CreateCtmWalletRequest) Reset() {
	*x = CreateCtmWalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCtmWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCtmWalletRequest) ProtoMessage() {}

func (x *CreateCtmWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCtmWalletRequest.ProtoReflect.Descriptor instead.
func (*CreateCtmWalletRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCtmWalletRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateCtmWalletRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CreateCtmWalletRequest) GetCanDeposit() bool {
	if x != nil && x.CanDeposit != nil {
		return *x.CanDeposit
	}
	return false
}

func (x *CreateCtmWalletRequest) GetActCardId() int32 {
	if x != nil && x.ActCardId != nil {
		return *x.ActCardId
	}
	return 0
}

func (x *CreateCtmWalletRequest) GetCardSku() string {
	if x != nil && x.CardSku != nil {
		return *x.CardSku
	}
	return ""
}

func (x *CreateCtmWalletRequest) GetCardCode() string {
	if x != nil && x.CardCode != nil {
		return *x.CardCode
	}
	return ""
}

func (x *CreateCtmWalletRequest) GetCardName() string {
	if x != nil && x.CardName != nil {
		return *x.CardName
	}
	return ""
}

func (x *CreateCtmWalletRequest) GetCardIntro() string {
	if x != nil && x.CardIntro != nil {
		return *x.CardIntro
	}
	return ""
}

func (x *CreateCtmWalletRequest) GetCardClass() int32 {
	if x != nil && x.CardClass != nil {
		return *x.CardClass
	}
	return 0
}

func (x *CreateCtmWalletRequest) GetCardType() int32 {
	if x != nil && x.CardType != nil {
		return *x.CardType
	}
	return 0
}

func (x *CreateCtmWalletRequest) GetPoints() int32 {
	if x != nil && x.Points != nil {
		return *x.Points
	}
	return 0
}

func (x *CreateCtmWalletRequest) GetAmounts() float64 {
	if x != nil && x.Amounts != nil {
		return *x.Amounts
	}
	return 0
}

func (x *CreateCtmWalletRequest) GetCtm() int64 {
	if x != nil && x.Ctm != nil {
		return *x.Ctm
	}
	return 0
}

type CtmAddrCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters        string  `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	Province       string  `protobuf:"bytes,3,opt,name=province,proto3" json:"province,omitempty"`
	City           string  `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
	District       string  `protobuf:"bytes,5,opt,name=district,proto3" json:"district,omitempty"`
	AddrDetail     string  `protobuf:"bytes,6,opt,name=addr_detail,json=addrDetail,proto3" json:"addr_detail,omitempty"`
	AddrTag        *string `protobuf:"bytes,7,opt,name=addr_tag,json=addrTag,proto3,oneof" json:"addr_tag,omitempty"`
	ZipCode        *string `protobuf:"bytes,8,opt,name=zip_code,json=zipCode,proto3,oneof" json:"zip_code,omitempty"`
	IsDefault      bool    `protobuf:"varint,9,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
	Receiver       string  `protobuf:"bytes,10,opt,name=receiver,proto3" json:"receiver,omitempty"`
	ReceiverMobile string  `protobuf:"bytes,11,opt,name=receiver_mobile,json=receiverMobile,proto3" json:"receiver_mobile,omitempty"`
	Ctm            int64   `protobuf:"varint,12,opt,name=ctm,proto3" json:"ctm,omitempty"`
}

func (x *CtmAddrCreateRequest) Reset() {
	*x = CtmAddrCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmAddrCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmAddrCreateRequest) ProtoMessage() {}

func (x *CtmAddrCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmAddrCreateRequest.ProtoReflect.Descriptor instead.
func (*CtmAddrCreateRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{3}
}

func (x *CtmAddrCreateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmAddrCreateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmAddrCreateRequest) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *CtmAddrCreateRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CtmAddrCreateRequest) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *CtmAddrCreateRequest) GetAddrDetail() string {
	if x != nil {
		return x.AddrDetail
	}
	return ""
}

func (x *CtmAddrCreateRequest) GetAddrTag() string {
	if x != nil && x.AddrTag != nil {
		return *x.AddrTag
	}
	return ""
}

func (x *CtmAddrCreateRequest) GetZipCode() string {
	if x != nil && x.ZipCode != nil {
		return *x.ZipCode
	}
	return ""
}

func (x *CtmAddrCreateRequest) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *CtmAddrCreateRequest) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *CtmAddrCreateRequest) GetReceiverMobile() string {
	if x != nil {
		return x.ReceiverMobile
	}
	return ""
}

func (x *CtmAddrCreateRequest) GetCtm() int64 {
	if x != nil {
		return x.Ctm
	}
	return 0
}

type CtmAddrDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmAddrDestroyRequest) Reset() {
	*x = CtmAddrDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmAddrDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmAddrDestroyRequest) ProtoMessage() {}

func (x *CtmAddrDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmAddrDestroyRequest.ProtoReflect.Descriptor instead.
func (*CtmAddrDestroyRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{4}
}

func (x *CtmAddrDestroyRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmAddrListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters string `protobuf:"bytes,1,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *CtmAddrListRequest) Reset() {
	*x = CtmAddrListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmAddrListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmAddrListRequest) ProtoMessage() {}

func (x *CtmAddrListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmAddrListRequest.ProtoReflect.Descriptor instead.
func (*CtmAddrListRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{5}
}

func (x *CtmAddrListRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

type CtmAddrListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CtmAddrResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32              `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CtmAddrListResponse) Reset() {
	*x = CtmAddrListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmAddrListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmAddrListResponse) ProtoMessage() {}

func (x *CtmAddrListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmAddrListResponse.ProtoReflect.Descriptor instead.
func (*CtmAddrListResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{6}
}

func (x *CtmAddrListResponse) GetResults() []*CtmAddrResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CtmAddrListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CtmAddrResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime     string  `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime     string  `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Province       string  `protobuf:"bytes,4,opt,name=province,proto3" json:"province,omitempty"`
	City           string  `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	District       string  `protobuf:"bytes,6,opt,name=district,proto3" json:"district,omitempty"`
	AddrDetail     string  `protobuf:"bytes,7,opt,name=addr_detail,json=addrDetail,proto3" json:"addr_detail,omitempty"`
	AddrTag        *string `protobuf:"bytes,8,opt,name=addr_tag,json=addrTag,proto3,oneof" json:"addr_tag,omitempty"`
	ZipCode        *string `protobuf:"bytes,9,opt,name=zip_code,json=zipCode,proto3,oneof" json:"zip_code,omitempty"`
	IsDefault      bool    `protobuf:"varint,10,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
	Receiver       string  `protobuf:"bytes,11,opt,name=receiver,proto3" json:"receiver,omitempty"`
	ReceiverMobile string  `protobuf:"bytes,12,opt,name=receiver_mobile,json=receiverMobile,proto3" json:"receiver_mobile,omitempty"`
	Ctm            int64   `protobuf:"varint,13,opt,name=ctm,proto3" json:"ctm,omitempty"`
}

func (x *CtmAddrResponse) Reset() {
	*x = CtmAddrResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmAddrResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmAddrResponse) ProtoMessage() {}

func (x *CtmAddrResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmAddrResponse.ProtoReflect.Descriptor instead.
func (*CtmAddrResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{7}
}

func (x *CtmAddrResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmAddrResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CtmAddrResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CtmAddrResponse) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *CtmAddrResponse) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CtmAddrResponse) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *CtmAddrResponse) GetAddrDetail() string {
	if x != nil {
		return x.AddrDetail
	}
	return ""
}

func (x *CtmAddrResponse) GetAddrTag() string {
	if x != nil && x.AddrTag != nil {
		return *x.AddrTag
	}
	return ""
}

func (x *CtmAddrResponse) GetZipCode() string {
	if x != nil && x.ZipCode != nil {
		return *x.ZipCode
	}
	return ""
}

func (x *CtmAddrResponse) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *CtmAddrResponse) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *CtmAddrResponse) GetReceiverMobile() string {
	if x != nil {
		return x.ReceiverMobile
	}
	return ""
}

func (x *CtmAddrResponse) GetCtm() int64 {
	if x != nil {
		return x.Ctm
	}
	return 0
}

type CtmAddrRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmAddrRetrieveRequest) Reset() {
	*x = CtmAddrRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmAddrRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmAddrRetrieveRequest) ProtoMessage() {}

func (x *CtmAddrRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmAddrRetrieveRequest.ProtoReflect.Descriptor instead.
func (*CtmAddrRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{8}
}

func (x *CtmAddrRetrieveRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmAddrUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters              string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,3,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	Province             string   `protobuf:"bytes,4,opt,name=province,proto3" json:"province,omitempty"`
	City                 string   `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	District             string   `protobuf:"bytes,6,opt,name=district,proto3" json:"district,omitempty"`
	AddrDetail           string   `protobuf:"bytes,7,opt,name=addr_detail,json=addrDetail,proto3" json:"addr_detail,omitempty"`
	AddrTag              *string  `protobuf:"bytes,8,opt,name=addr_tag,json=addrTag,proto3,oneof" json:"addr_tag,omitempty"`
	ZipCode              *string  `protobuf:"bytes,9,opt,name=zip_code,json=zipCode,proto3,oneof" json:"zip_code,omitempty"`
	IsDefault            bool     `protobuf:"varint,10,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
	Receiver             string   `protobuf:"bytes,11,opt,name=receiver,proto3" json:"receiver,omitempty"`
	ReceiverMobile       string   `protobuf:"bytes,12,opt,name=receiver_mobile,json=receiverMobile,proto3" json:"receiver_mobile,omitempty"`
	Ctm                  int64    `protobuf:"varint,13,opt,name=ctm,proto3" json:"ctm,omitempty"`
}

func (x *CtmAddrUpdateRequest) Reset() {
	*x = CtmAddrUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmAddrUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmAddrUpdateRequest) ProtoMessage() {}

func (x *CtmAddrUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmAddrUpdateRequest.ProtoReflect.Descriptor instead.
func (*CtmAddrUpdateRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{9}
}

func (x *CtmAddrUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmAddrUpdateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmAddrUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *CtmAddrUpdateRequest) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *CtmAddrUpdateRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CtmAddrUpdateRequest) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *CtmAddrUpdateRequest) GetAddrDetail() string {
	if x != nil {
		return x.AddrDetail
	}
	return ""
}

func (x *CtmAddrUpdateRequest) GetAddrTag() string {
	if x != nil && x.AddrTag != nil {
		return *x.AddrTag
	}
	return ""
}

func (x *CtmAddrUpdateRequest) GetZipCode() string {
	if x != nil && x.ZipCode != nil {
		return *x.ZipCode
	}
	return ""
}

func (x *CtmAddrUpdateRequest) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *CtmAddrUpdateRequest) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *CtmAddrUpdateRequest) GetReceiverMobile() string {
	if x != nil {
		return x.ReceiverMobile
	}
	return ""
}

func (x *CtmAddrUpdateRequest) GetCtm() int64 {
	if x != nil {
		return x.Ctm
	}
	return 0
}

type CtmBaseDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MpOpenId string `protobuf:"bytes,1,opt,name=mp_openId,json=mpOpenId,proto3" json:"mp_openId,omitempty"`
}

func (x *CtmBaseDestroyRequest) Reset() {
	*x = CtmBaseDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmBaseDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmBaseDestroyRequest) ProtoMessage() {}

func (x *CtmBaseDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmBaseDestroyRequest.ProtoReflect.Descriptor instead.
func (*CtmBaseDestroyRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{10}
}

func (x *CtmBaseDestroyRequest) GetMpOpenId() string {
	if x != nil {
		return x.MpOpenId
	}
	return ""
}

type CtmBaseListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters      string  `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	Avatar       *string `protobuf:"bytes,3,opt,name=avatar,proto3,oneof" json:"avatar,omitempty"`
	Name         *string `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Mobile       *string `protobuf:"bytes,5,opt,name=mobile,proto3,oneof" json:"mobile,omitempty"`
	Gender       *int32  `protobuf:"varint,6,opt,name=gender,proto3,oneof" json:"gender,omitempty"`
	Birthday     *string `protobuf:"bytes,7,opt,name=birthday,proto3,oneof" json:"birthday,omitempty"`
	Describe     *string `protobuf:"bytes,8,opt,name=describe,proto3,oneof" json:"describe,omitempty"`
	DwMemId      *string `protobuf:"bytes,9,opt,name=dw_memId,json=dwMemId,proto3,oneof" json:"dw_memId,omitempty"`
	PlatformName *string `protobuf:"bytes,10,opt,name=platform_name,json=platformName,proto3,oneof" json:"platform_name,omitempty"`
	PlatUnionId  *string `protobuf:"bytes,11,opt,name=plat_unionId,json=platUnionId,proto3,oneof" json:"plat_unionId,omitempty"`
	MpOpenId     string  `protobuf:"bytes,12,opt,name=mp_openId,json=mpOpenId,proto3" json:"mp_openId,omitempty"`
	Nickname     *string `protobuf:"bytes,13,opt,name=nickname,proto3,oneof" json:"nickname,omitempty"`
	ChannelCode  *string `protobuf:"bytes,14,opt,name=channel_code,json=channelCode,proto3,oneof" json:"channel_code,omitempty"`
	Property     *string `protobuf:"bytes,15,opt,name=property,proto3,oneof" json:"property,omitempty"`
	Area         *string `protobuf:"bytes,16,opt,name=area,proto3,oneof" json:"area,omitempty"`
	Type         *int32  `protobuf:"varint,17,opt,name=type,proto3,oneof" json:"type,omitempty"`
}

func (x *CtmBaseListRequest) Reset() {
	*x = CtmBaseListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmBaseListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmBaseListRequest) ProtoMessage() {}

func (x *CtmBaseListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmBaseListRequest.ProtoReflect.Descriptor instead.
func (*CtmBaseListRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{11}
}

func (x *CtmBaseListRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmBaseListRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmBaseListRequest) GetAvatar() string {
	if x != nil && x.Avatar != nil {
		return *x.Avatar
	}
	return ""
}

func (x *CtmBaseListRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CtmBaseListRequest) GetMobile() string {
	if x != nil && x.Mobile != nil {
		return *x.Mobile
	}
	return ""
}

func (x *CtmBaseListRequest) GetGender() int32 {
	if x != nil && x.Gender != nil {
		return *x.Gender
	}
	return 0
}

func (x *CtmBaseListRequest) GetBirthday() string {
	if x != nil && x.Birthday != nil {
		return *x.Birthday
	}
	return ""
}

func (x *CtmBaseListRequest) GetDescribe() string {
	if x != nil && x.Describe != nil {
		return *x.Describe
	}
	return ""
}

func (x *CtmBaseListRequest) GetDwMemId() string {
	if x != nil && x.DwMemId != nil {
		return *x.DwMemId
	}
	return ""
}

func (x *CtmBaseListRequest) GetPlatformName() string {
	if x != nil && x.PlatformName != nil {
		return *x.PlatformName
	}
	return ""
}

func (x *CtmBaseListRequest) GetPlatUnionId() string {
	if x != nil && x.PlatUnionId != nil {
		return *x.PlatUnionId
	}
	return ""
}

func (x *CtmBaseListRequest) GetMpOpenId() string {
	if x != nil {
		return x.MpOpenId
	}
	return ""
}

func (x *CtmBaseListRequest) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

func (x *CtmBaseListRequest) GetChannelCode() string {
	if x != nil && x.ChannelCode != nil {
		return *x.ChannelCode
	}
	return ""
}

func (x *CtmBaseListRequest) GetProperty() string {
	if x != nil && x.Property != nil {
		return *x.Property
	}
	return ""
}

func (x *CtmBaseListRequest) GetArea() string {
	if x != nil && x.Area != nil {
		return *x.Area
	}
	return ""
}

func (x *CtmBaseListRequest) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

type CtmBaseListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CtmBaseResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32              `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CtmBaseListResponse) Reset() {
	*x = CtmBaseListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmBaseListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmBaseListResponse) ProtoMessage() {}

func (x *CtmBaseListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmBaseListResponse.ProtoReflect.Descriptor instead.
func (*CtmBaseListResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{12}
}

func (x *CtmBaseListResponse) GetResults() []*CtmBaseResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CtmBaseListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CtmBasePartialUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters              string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,3,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	Avatar               *string  `protobuf:"bytes,4,opt,name=avatar,proto3,oneof" json:"avatar,omitempty"`
	Name                 *string  `protobuf:"bytes,5,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Mobile               *string  `protobuf:"bytes,6,opt,name=mobile,proto3,oneof" json:"mobile,omitempty"`
	Gender               *int32   `protobuf:"varint,7,opt,name=gender,proto3,oneof" json:"gender,omitempty"`
	Birthday             *string  `protobuf:"bytes,8,opt,name=birthday,proto3,oneof" json:"birthday,omitempty"`
	Describe             *string  `protobuf:"bytes,9,opt,name=describe,proto3,oneof" json:"describe,omitempty"`
	DwMemId              *string  `protobuf:"bytes,10,opt,name=dw_memId,json=dwMemId,proto3,oneof" json:"dw_memId,omitempty"`
	PlatformName         *string  `protobuf:"bytes,11,opt,name=platform_name,json=platformName,proto3,oneof" json:"platform_name,omitempty"`
	PlatUnionId          *string  `protobuf:"bytes,12,opt,name=plat_unionId,json=platUnionId,proto3,oneof" json:"plat_unionId,omitempty"`
	MpOpenId             string   `protobuf:"bytes,13,opt,name=mp_openId,json=mpOpenId,proto3" json:"mp_openId,omitempty"`
	Nickname             *string  `protobuf:"bytes,14,opt,name=nickname,proto3,oneof" json:"nickname,omitempty"`
	ChannelCode          *string  `protobuf:"bytes,15,opt,name=channel_code,json=channelCode,proto3,oneof" json:"channel_code,omitempty"`
	Property             *string  `protobuf:"bytes,16,opt,name=property,proto3,oneof" json:"property,omitempty"`
	Area                 *string  `protobuf:"bytes,17,opt,name=area,proto3,oneof" json:"area,omitempty"`
	Type                 *int32   `protobuf:"varint,18,opt,name=type,proto3,oneof" json:"type,omitempty"`
}

func (x *CtmBasePartialUpdateRequest) Reset() {
	*x = CtmBasePartialUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmBasePartialUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmBasePartialUpdateRequest) ProtoMessage() {}

func (x *CtmBasePartialUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmBasePartialUpdateRequest.ProtoReflect.Descriptor instead.
func (*CtmBasePartialUpdateRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{13}
}

func (x *CtmBasePartialUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmBasePartialUpdateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmBasePartialUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *CtmBasePartialUpdateRequest) GetAvatar() string {
	if x != nil && x.Avatar != nil {
		return *x.Avatar
	}
	return ""
}

func (x *CtmBasePartialUpdateRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CtmBasePartialUpdateRequest) GetMobile() string {
	if x != nil && x.Mobile != nil {
		return *x.Mobile
	}
	return ""
}

func (x *CtmBasePartialUpdateRequest) GetGender() int32 {
	if x != nil && x.Gender != nil {
		return *x.Gender
	}
	return 0
}

func (x *CtmBasePartialUpdateRequest) GetBirthday() string {
	if x != nil && x.Birthday != nil {
		return *x.Birthday
	}
	return ""
}

func (x *CtmBasePartialUpdateRequest) GetDescribe() string {
	if x != nil && x.Describe != nil {
		return *x.Describe
	}
	return ""
}

func (x *CtmBasePartialUpdateRequest) GetDwMemId() string {
	if x != nil && x.DwMemId != nil {
		return *x.DwMemId
	}
	return ""
}

func (x *CtmBasePartialUpdateRequest) GetPlatformName() string {
	if x != nil && x.PlatformName != nil {
		return *x.PlatformName
	}
	return ""
}

func (x *CtmBasePartialUpdateRequest) GetPlatUnionId() string {
	if x != nil && x.PlatUnionId != nil {
		return *x.PlatUnionId
	}
	return ""
}

func (x *CtmBasePartialUpdateRequest) GetMpOpenId() string {
	if x != nil {
		return x.MpOpenId
	}
	return ""
}

func (x *CtmBasePartialUpdateRequest) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

func (x *CtmBasePartialUpdateRequest) GetChannelCode() string {
	if x != nil && x.ChannelCode != nil {
		return *x.ChannelCode
	}
	return ""
}

func (x *CtmBasePartialUpdateRequest) GetProperty() string {
	if x != nil && x.Property != nil {
		return *x.Property
	}
	return ""
}

func (x *CtmBasePartialUpdateRequest) GetArea() string {
	if x != nil && x.Area != nil {
		return *x.Area
	}
	return ""
}

func (x *CtmBasePartialUpdateRequest) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

type CtmBaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters      string  `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	Avatar       *string `protobuf:"bytes,3,opt,name=avatar,proto3,oneof" json:"avatar,omitempty"`
	Name         *string `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Mobile       *string `protobuf:"bytes,5,opt,name=mobile,proto3,oneof" json:"mobile,omitempty"`
	Gender       *int32  `protobuf:"varint,6,opt,name=gender,proto3,oneof" json:"gender,omitempty"`
	Birthday     *string `protobuf:"bytes,7,opt,name=birthday,proto3,oneof" json:"birthday,omitempty"`
	Describe     *string `protobuf:"bytes,8,opt,name=describe,proto3,oneof" json:"describe,omitempty"`
	DwMemId      *string `protobuf:"bytes,9,opt,name=dw_memId,json=dwMemId,proto3,oneof" json:"dw_memId,omitempty"`
	PlatformName *string `protobuf:"bytes,10,opt,name=platform_name,json=platformName,proto3,oneof" json:"platform_name,omitempty"`
	PlatUnionId  *string `protobuf:"bytes,11,opt,name=plat_unionId,json=platUnionId,proto3,oneof" json:"plat_unionId,omitempty"`
	MpOpenId     string  `protobuf:"bytes,12,opt,name=mp_openId,json=mpOpenId,proto3" json:"mp_openId,omitempty"`
	Nickname     *string `protobuf:"bytes,13,opt,name=nickname,proto3,oneof" json:"nickname,omitempty"`
	ChannelCode  *string `protobuf:"bytes,14,opt,name=channel_code,json=channelCode,proto3,oneof" json:"channel_code,omitempty"`
	Property     *string `protobuf:"bytes,15,opt,name=property,proto3,oneof" json:"property,omitempty"`
	Area         *string `protobuf:"bytes,16,opt,name=area,proto3,oneof" json:"area,omitempty"`
	Type         *int32  `protobuf:"varint,17,opt,name=type,proto3,oneof" json:"type,omitempty"`
}

func (x *CtmBaseRequest) Reset() {
	*x = CtmBaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmBaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmBaseRequest) ProtoMessage() {}

func (x *CtmBaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmBaseRequest.ProtoReflect.Descriptor instead.
func (*CtmBaseRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{14}
}

func (x *CtmBaseRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmBaseRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmBaseRequest) GetAvatar() string {
	if x != nil && x.Avatar != nil {
		return *x.Avatar
	}
	return ""
}

func (x *CtmBaseRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CtmBaseRequest) GetMobile() string {
	if x != nil && x.Mobile != nil {
		return *x.Mobile
	}
	return ""
}

func (x *CtmBaseRequest) GetGender() int32 {
	if x != nil && x.Gender != nil {
		return *x.Gender
	}
	return 0
}

func (x *CtmBaseRequest) GetBirthday() string {
	if x != nil && x.Birthday != nil {
		return *x.Birthday
	}
	return ""
}

func (x *CtmBaseRequest) GetDescribe() string {
	if x != nil && x.Describe != nil {
		return *x.Describe
	}
	return ""
}

func (x *CtmBaseRequest) GetDwMemId() string {
	if x != nil && x.DwMemId != nil {
		return *x.DwMemId
	}
	return ""
}

func (x *CtmBaseRequest) GetPlatformName() string {
	if x != nil && x.PlatformName != nil {
		return *x.PlatformName
	}
	return ""
}

func (x *CtmBaseRequest) GetPlatUnionId() string {
	if x != nil && x.PlatUnionId != nil {
		return *x.PlatUnionId
	}
	return ""
}

func (x *CtmBaseRequest) GetMpOpenId() string {
	if x != nil {
		return x.MpOpenId
	}
	return ""
}

func (x *CtmBaseRequest) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

func (x *CtmBaseRequest) GetChannelCode() string {
	if x != nil && x.ChannelCode != nil {
		return *x.ChannelCode
	}
	return ""
}

func (x *CtmBaseRequest) GetProperty() string {
	if x != nil && x.Property != nil {
		return *x.Property
	}
	return ""
}

func (x *CtmBaseRequest) GetArea() string {
	if x != nil && x.Area != nil {
		return *x.Area
	}
	return ""
}

func (x *CtmBaseRequest) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

type CtmBaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	GenderName   string             `protobuf:"bytes,2,opt,name=gender_name,json=genderName,proto3" json:"gender_name,omitempty"`
	CtmAddresses []*CtmAddrResponse `protobuf:"bytes,3,rep,name=ctm_addresses,json=ctmAddresses,proto3" json:"ctm_addresses,omitempty"`
	OrderCount   int32              `protobuf:"varint,4,opt,name=order_count,json=orderCount,proto3" json:"order_count,omitempty"`
	TypeName     string             `protobuf:"bytes,5,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`
	CreateTime   string             `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime   string             `protobuf:"bytes,7,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Avatar       *string            `protobuf:"bytes,8,opt,name=avatar,proto3,oneof" json:"avatar,omitempty"`
	Name         *string            `protobuf:"bytes,9,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Mobile       *string            `protobuf:"bytes,10,opt,name=mobile,proto3,oneof" json:"mobile,omitempty"`
	Gender       *int32             `protobuf:"varint,11,opt,name=gender,proto3,oneof" json:"gender,omitempty"`
	Birthday     *string            `protobuf:"bytes,12,opt,name=birthday,proto3,oneof" json:"birthday,omitempty"`
	Describe     *string            `protobuf:"bytes,13,opt,name=describe,proto3,oneof" json:"describe,omitempty"`
	DwMemId      *string            `protobuf:"bytes,14,opt,name=dw_memId,json=dwMemId,proto3,oneof" json:"dw_memId,omitempty"`
	PlatformName *string            `protobuf:"bytes,15,opt,name=platform_name,json=platformName,proto3,oneof" json:"platform_name,omitempty"`
	PlatUnionId  *string            `protobuf:"bytes,16,opt,name=plat_unionId,json=platUnionId,proto3,oneof" json:"plat_unionId,omitempty"`
	MpOpenId     string             `protobuf:"bytes,17,opt,name=mp_openId,json=mpOpenId,proto3" json:"mp_openId,omitempty"`
	Nickname     *string            `protobuf:"bytes,18,opt,name=nickname,proto3,oneof" json:"nickname,omitempty"`
	ChannelCode  *string            `protobuf:"bytes,19,opt,name=channel_code,json=channelCode,proto3,oneof" json:"channel_code,omitempty"`
	Property     *string            `protobuf:"bytes,20,opt,name=property,proto3,oneof" json:"property,omitempty"`
	Area         *string            `protobuf:"bytes,21,opt,name=area,proto3,oneof" json:"area,omitempty"`
	Type         *int32             `protobuf:"varint,22,opt,name=type,proto3,oneof" json:"type,omitempty"`
}

func (x *CtmBaseResponse) Reset() {
	*x = CtmBaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmBaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmBaseResponse) ProtoMessage() {}

func (x *CtmBaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmBaseResponse.ProtoReflect.Descriptor instead.
func (*CtmBaseResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{15}
}

func (x *CtmBaseResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmBaseResponse) GetGenderName() string {
	if x != nil {
		return x.GenderName
	}
	return ""
}

func (x *CtmBaseResponse) GetCtmAddresses() []*CtmAddrResponse {
	if x != nil {
		return x.CtmAddresses
	}
	return nil
}

func (x *CtmBaseResponse) GetOrderCount() int32 {
	if x != nil {
		return x.OrderCount
	}
	return 0
}

func (x *CtmBaseResponse) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *CtmBaseResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CtmBaseResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CtmBaseResponse) GetAvatar() string {
	if x != nil && x.Avatar != nil {
		return *x.Avatar
	}
	return ""
}

func (x *CtmBaseResponse) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CtmBaseResponse) GetMobile() string {
	if x != nil && x.Mobile != nil {
		return *x.Mobile
	}
	return ""
}

func (x *CtmBaseResponse) GetGender() int32 {
	if x != nil && x.Gender != nil {
		return *x.Gender
	}
	return 0
}

func (x *CtmBaseResponse) GetBirthday() string {
	if x != nil && x.Birthday != nil {
		return *x.Birthday
	}
	return ""
}

func (x *CtmBaseResponse) GetDescribe() string {
	if x != nil && x.Describe != nil {
		return *x.Describe
	}
	return ""
}

func (x *CtmBaseResponse) GetDwMemId() string {
	if x != nil && x.DwMemId != nil {
		return *x.DwMemId
	}
	return ""
}

func (x *CtmBaseResponse) GetPlatformName() string {
	if x != nil && x.PlatformName != nil {
		return *x.PlatformName
	}
	return ""
}

func (x *CtmBaseResponse) GetPlatUnionId() string {
	if x != nil && x.PlatUnionId != nil {
		return *x.PlatUnionId
	}
	return ""
}

func (x *CtmBaseResponse) GetMpOpenId() string {
	if x != nil {
		return x.MpOpenId
	}
	return ""
}

func (x *CtmBaseResponse) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

func (x *CtmBaseResponse) GetChannelCode() string {
	if x != nil && x.ChannelCode != nil {
		return *x.ChannelCode
	}
	return ""
}

func (x *CtmBaseResponse) GetProperty() string {
	if x != nil && x.Property != nil {
		return *x.Property
	}
	return ""
}

func (x *CtmBaseResponse) GetArea() string {
	if x != nil && x.Area != nil {
		return *x.Area
	}
	return ""
}

func (x *CtmBaseResponse) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

type CtmBaseRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MpOpenId string `protobuf:"bytes,1,opt,name=mp_openId,json=mpOpenId,proto3" json:"mp_openId,omitempty"`
}

func (x *CtmBaseRetrieveRequest) Reset() {
	*x = CtmBaseRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmBaseRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmBaseRetrieveRequest) ProtoMessage() {}

func (x *CtmBaseRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmBaseRetrieveRequest.ProtoReflect.Descriptor instead.
func (*CtmBaseRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{16}
}

func (x *CtmBaseRetrieveRequest) GetMpOpenId() string {
	if x != nil {
		return x.MpOpenId
	}
	return ""
}

type CtmCardCaresCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters         string  `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	CaresId         int32   `protobuf:"varint,3,opt,name=cares_id,json=caresId,proto3" json:"cares_id,omitempty"`
	CardNo          string  `protobuf:"bytes,4,opt,name=card_no,json=cardNo,proto3" json:"card_no,omitempty"`
	Name            *string `protobuf:"bytes,5,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Status          int32   `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	AcquireTime     *string `protobuf:"bytes,7,opt,name=acquire_time,json=acquireTime,proto3,oneof" json:"acquire_time,omitempty"`
	ClaimTime       *string `protobuf:"bytes,8,opt,name=claim_time,json=claimTime,proto3,oneof" json:"claim_time,omitempty"`
	ActivateExpired *string `protobuf:"bytes,9,opt,name=activate_expired,json=activateExpired,proto3,oneof" json:"activate_expired,omitempty"`
	Remark          *string `protobuf:"bytes,10,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
	Ctm             int64   `protobuf:"varint,11,opt,name=ctm,proto3" json:"ctm,omitempty"`
	CtmProd         *int64  `protobuf:"varint,12,opt,name=ctm_prod,json=ctmProd,proto3,oneof" json:"ctm_prod,omitempty"`
}

func (x *CtmCardCaresCreateRequest) Reset() {
	*x = CtmCardCaresCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCardCaresCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCardCaresCreateRequest) ProtoMessage() {}

func (x *CtmCardCaresCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCardCaresCreateRequest.ProtoReflect.Descriptor instead.
func (*CtmCardCaresCreateRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{17}
}

func (x *CtmCardCaresCreateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmCardCaresCreateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmCardCaresCreateRequest) GetCaresId() int32 {
	if x != nil {
		return x.CaresId
	}
	return 0
}

func (x *CtmCardCaresCreateRequest) GetCardNo() string {
	if x != nil {
		return x.CardNo
	}
	return ""
}

func (x *CtmCardCaresCreateRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CtmCardCaresCreateRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CtmCardCaresCreateRequest) GetAcquireTime() string {
	if x != nil && x.AcquireTime != nil {
		return *x.AcquireTime
	}
	return ""
}

func (x *CtmCardCaresCreateRequest) GetClaimTime() string {
	if x != nil && x.ClaimTime != nil {
		return *x.ClaimTime
	}
	return ""
}

func (x *CtmCardCaresCreateRequest) GetActivateExpired() string {
	if x != nil && x.ActivateExpired != nil {
		return *x.ActivateExpired
	}
	return ""
}

func (x *CtmCardCaresCreateRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

func (x *CtmCardCaresCreateRequest) GetCtm() int64 {
	if x != nil {
		return x.Ctm
	}
	return 0
}

func (x *CtmCardCaresCreateRequest) GetCtmProd() int64 {
	if x != nil && x.CtmProd != nil {
		return *x.CtmProd
	}
	return 0
}

type CtmCardCaresListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters string `protobuf:"bytes,1,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *CtmCardCaresListRequest) Reset() {
	*x = CtmCardCaresListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCardCaresListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCardCaresListRequest) ProtoMessage() {}

func (x *CtmCardCaresListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCardCaresListRequest.ProtoReflect.Descriptor instead.
func (*CtmCardCaresListRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{18}
}

func (x *CtmCardCaresListRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

type CtmCardCaresListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CtmCardCaresResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CtmCardCaresListResponse) Reset() {
	*x = CtmCardCaresListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCardCaresListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCardCaresListResponse) ProtoMessage() {}

func (x *CtmCardCaresListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCardCaresListResponse.ProtoReflect.Descriptor instead.
func (*CtmCardCaresListResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{19}
}

func (x *CtmCardCaresListResponse) GetResults() []*CtmCardCaresResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CtmCardCaresListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CtmCardCaresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Cares           *CardCaresResponse `protobuf:"bytes,2,opt,name=cares,proto3" json:"cares,omitempty"`
	CaresId         int32              `protobuf:"varint,3,opt,name=cares_id,json=caresId,proto3" json:"cares_id,omitempty"`
	StatusName      string             `protobuf:"bytes,4,opt,name=status_name,json=statusName,proto3" json:"status_name,omitempty"`
	CardNo          string             `protobuf:"bytes,5,opt,name=card_no,json=cardNo,proto3" json:"card_no,omitempty"`
	Name            *string            `protobuf:"bytes,6,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Status          int32              `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	AcquireTime     *string            `protobuf:"bytes,8,opt,name=acquire_time,json=acquireTime,proto3,oneof" json:"acquire_time,omitempty"`
	ClaimTime       *string            `protobuf:"bytes,9,opt,name=claim_time,json=claimTime,proto3,oneof" json:"claim_time,omitempty"`
	ActivateExpired *string            `protobuf:"bytes,10,opt,name=activate_expired,json=activateExpired,proto3,oneof" json:"activate_expired,omitempty"`
	Remark          *string            `protobuf:"bytes,11,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
	CreateTime      string             `protobuf:"bytes,12,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime      string             `protobuf:"bytes,13,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Ctm             int64              `protobuf:"varint,14,opt,name=ctm,proto3" json:"ctm,omitempty"`
	CtmProd         *int64             `protobuf:"varint,15,opt,name=ctm_prod,json=ctmProd,proto3,oneof" json:"ctm_prod,omitempty"`
}

func (x *CtmCardCaresResponse) Reset() {
	*x = CtmCardCaresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCardCaresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCardCaresResponse) ProtoMessage() {}

func (x *CtmCardCaresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCardCaresResponse.ProtoReflect.Descriptor instead.
func (*CtmCardCaresResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{20}
}

func (x *CtmCardCaresResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmCardCaresResponse) GetCares() *CardCaresResponse {
	if x != nil {
		return x.Cares
	}
	return nil
}

func (x *CtmCardCaresResponse) GetCaresId() int32 {
	if x != nil {
		return x.CaresId
	}
	return 0
}

func (x *CtmCardCaresResponse) GetStatusName() string {
	if x != nil {
		return x.StatusName
	}
	return ""
}

func (x *CtmCardCaresResponse) GetCardNo() string {
	if x != nil {
		return x.CardNo
	}
	return ""
}

func (x *CtmCardCaresResponse) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CtmCardCaresResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CtmCardCaresResponse) GetAcquireTime() string {
	if x != nil && x.AcquireTime != nil {
		return *x.AcquireTime
	}
	return ""
}

func (x *CtmCardCaresResponse) GetClaimTime() string {
	if x != nil && x.ClaimTime != nil {
		return *x.ClaimTime
	}
	return ""
}

func (x *CtmCardCaresResponse) GetActivateExpired() string {
	if x != nil && x.ActivateExpired != nil {
		return *x.ActivateExpired
	}
	return ""
}

func (x *CtmCardCaresResponse) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

func (x *CtmCardCaresResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CtmCardCaresResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CtmCardCaresResponse) GetCtm() int64 {
	if x != nil {
		return x.Ctm
	}
	return 0
}

func (x *CtmCardCaresResponse) GetCtmProd() int64 {
	if x != nil && x.CtmProd != nil {
		return *x.CtmProd
	}
	return 0
}

type CtmCardCaresRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmCardCaresRetrieveRequest) Reset() {
	*x = CtmCardCaresRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCardCaresRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCardCaresRetrieveRequest) ProtoMessage() {}

func (x *CtmCardCaresRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCardCaresRetrieveRequest.ProtoReflect.Descriptor instead.
func (*CtmCardCaresRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{21}
}

func (x *CtmCardCaresRetrieveRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmCardCaresUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters              string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	CaresId              int32    `protobuf:"varint,3,opt,name=cares_id,json=caresId,proto3" json:"cares_id,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,4,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	CardNo               string   `protobuf:"bytes,5,opt,name=card_no,json=cardNo,proto3" json:"card_no,omitempty"`
	Name                 *string  `protobuf:"bytes,6,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Status               int32    `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	AcquireTime          *string  `protobuf:"bytes,8,opt,name=acquire_time,json=acquireTime,proto3,oneof" json:"acquire_time,omitempty"`
	ClaimTime            *string  `protobuf:"bytes,9,opt,name=claim_time,json=claimTime,proto3,oneof" json:"claim_time,omitempty"`
	ActivateExpired      *string  `protobuf:"bytes,10,opt,name=activate_expired,json=activateExpired,proto3,oneof" json:"activate_expired,omitempty"`
	Remark               *string  `protobuf:"bytes,11,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
	Ctm                  int64    `protobuf:"varint,12,opt,name=ctm,proto3" json:"ctm,omitempty"`
	CtmProd              *int64   `protobuf:"varint,13,opt,name=ctm_prod,json=ctmProd,proto3,oneof" json:"ctm_prod,omitempty"`
}

func (x *CtmCardCaresUpdateRequest) Reset() {
	*x = CtmCardCaresUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCardCaresUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCardCaresUpdateRequest) ProtoMessage() {}

func (x *CtmCardCaresUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCardCaresUpdateRequest.ProtoReflect.Descriptor instead.
func (*CtmCardCaresUpdateRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{22}
}

func (x *CtmCardCaresUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmCardCaresUpdateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmCardCaresUpdateRequest) GetCaresId() int32 {
	if x != nil {
		return x.CaresId
	}
	return 0
}

func (x *CtmCardCaresUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *CtmCardCaresUpdateRequest) GetCardNo() string {
	if x != nil {
		return x.CardNo
	}
	return ""
}

func (x *CtmCardCaresUpdateRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CtmCardCaresUpdateRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CtmCardCaresUpdateRequest) GetAcquireTime() string {
	if x != nil && x.AcquireTime != nil {
		return *x.AcquireTime
	}
	return ""
}

func (x *CtmCardCaresUpdateRequest) GetClaimTime() string {
	if x != nil && x.ClaimTime != nil {
		return *x.ClaimTime
	}
	return ""
}

func (x *CtmCardCaresUpdateRequest) GetActivateExpired() string {
	if x != nil && x.ActivateExpired != nil {
		return *x.ActivateExpired
	}
	return ""
}

func (x *CtmCardCaresUpdateRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

func (x *CtmCardCaresUpdateRequest) GetCtm() int64 {
	if x != nil {
		return x.Ctm
	}
	return 0
}

func (x *CtmCardCaresUpdateRequest) GetCtmProd() int64 {
	if x != nil && x.CtmProd != nil {
		return *x.CtmProd
	}
	return 0
}

type CtmCartCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters    string  `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	TradeType  *int32  `protobuf:"varint,3,opt,name=trade_type,json=tradeType,proto3,oneof" json:"trade_type,omitempty"`
	Spu        string  `protobuf:"bytes,4,opt,name=spu,proto3" json:"spu,omitempty"`
	SkuId      string  `protobuf:"bytes,5,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	Sku        string  `protobuf:"bytes,6,opt,name=sku,proto3" json:"sku,omitempty"`
	OrderNum   int32   `protobuf:"varint,7,opt,name=order_num,json=orderNum,proto3" json:"order_num,omitempty"`
	Price      string  `protobuf:"bytes,8,opt,name=price,proto3" json:"price,omitempty"`
	IsSelected bool    `protobuf:"varint,9,opt,name=is_selected,json=isSelected,proto3" json:"is_selected,omitempty"`
	AttrsText  string  `protobuf:"bytes,10,opt,name=attrs_text,json=attrsText,proto3" json:"attrs_text,omitempty"`
	PriceNut   *int32  `protobuf:"varint,11,opt,name=price_nut,json=priceNut,proto3,oneof" json:"price_nut,omitempty"`
	PriceScore *int32  `protobuf:"varint,12,opt,name=price_score,json=priceScore,proto3,oneof" json:"price_score,omitempty"`
	PriceBadge *int32  `protobuf:"varint,13,opt,name=price_badge,json=priceBadge,proto3,oneof" json:"price_badge,omitempty"`
	Remark     *string `protobuf:"bytes,14,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
	Memo       *string `protobuf:"bytes,15,opt,name=memo,proto3,oneof" json:"memo,omitempty"`
	Ctm        int64   `protobuf:"varint,16,opt,name=ctm,proto3" json:"ctm,omitempty"`
}

func (x *CtmCartCreateRequest) Reset() {
	*x = CtmCartCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCartCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCartCreateRequest) ProtoMessage() {}

func (x *CtmCartCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCartCreateRequest.ProtoReflect.Descriptor instead.
func (*CtmCartCreateRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{23}
}

func (x *CtmCartCreateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmCartCreateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmCartCreateRequest) GetTradeType() int32 {
	if x != nil && x.TradeType != nil {
		return *x.TradeType
	}
	return 0
}

func (x *CtmCartCreateRequest) GetSpu() string {
	if x != nil {
		return x.Spu
	}
	return ""
}

func (x *CtmCartCreateRequest) GetSkuId() string {
	if x != nil {
		return x.SkuId
	}
	return ""
}

func (x *CtmCartCreateRequest) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *CtmCartCreateRequest) GetOrderNum() int32 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *CtmCartCreateRequest) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *CtmCartCreateRequest) GetIsSelected() bool {
	if x != nil {
		return x.IsSelected
	}
	return false
}

func (x *CtmCartCreateRequest) GetAttrsText() string {
	if x != nil {
		return x.AttrsText
	}
	return ""
}

func (x *CtmCartCreateRequest) GetPriceNut() int32 {
	if x != nil && x.PriceNut != nil {
		return *x.PriceNut
	}
	return 0
}

func (x *CtmCartCreateRequest) GetPriceScore() int32 {
	if x != nil && x.PriceScore != nil {
		return *x.PriceScore
	}
	return 0
}

func (x *CtmCartCreateRequest) GetPriceBadge() int32 {
	if x != nil && x.PriceBadge != nil {
		return *x.PriceBadge
	}
	return 0
}

func (x *CtmCartCreateRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

func (x *CtmCartCreateRequest) GetMemo() string {
	if x != nil && x.Memo != nil {
		return *x.Memo
	}
	return ""
}

func (x *CtmCartCreateRequest) GetCtm() int64 {
	if x != nil {
		return x.Ctm
	}
	return 0
}

type CtmCartDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmCartDestroyRequest) Reset() {
	*x = CtmCartDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCartDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCartDestroyRequest) ProtoMessage() {}

func (x *CtmCartDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCartDestroyRequest.ProtoReflect.Descriptor instead.
func (*CtmCartDestroyRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{24}
}

func (x *CtmCartDestroyRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmCartListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters string `protobuf:"bytes,1,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *CtmCartListRequest) Reset() {
	*x = CtmCartListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCartListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCartListRequest) ProtoMessage() {}

func (x *CtmCartListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCartListRequest.ProtoReflect.Descriptor instead.
func (*CtmCartListRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{25}
}

func (x *CtmCartListRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

type CtmCartListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CtmCartResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32              `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CtmCartListResponse) Reset() {
	*x = CtmCartListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCartListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCartListResponse) ProtoMessage() {}

func (x *CtmCartListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCartListResponse.ProtoReflect.Descriptor instead.
func (*CtmCartListResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{26}
}

func (x *CtmCartListResponse) GetResults() []*CtmCartResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CtmCartListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CtmCartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime string  `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime string  `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	TradeType  *int32  `protobuf:"varint,4,opt,name=trade_type,json=tradeType,proto3,oneof" json:"trade_type,omitempty"`
	Spu        string  `protobuf:"bytes,5,opt,name=spu,proto3" json:"spu,omitempty"`
	SkuId      string  `protobuf:"bytes,6,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	Sku        string  `protobuf:"bytes,7,opt,name=sku,proto3" json:"sku,omitempty"`
	OrderNum   int32   `protobuf:"varint,8,opt,name=order_num,json=orderNum,proto3" json:"order_num,omitempty"`
	Price      string  `protobuf:"bytes,9,opt,name=price,proto3" json:"price,omitempty"`
	IsSelected bool    `protobuf:"varint,10,opt,name=is_selected,json=isSelected,proto3" json:"is_selected,omitempty"`
	AttrsText  string  `protobuf:"bytes,11,opt,name=attrs_text,json=attrsText,proto3" json:"attrs_text,omitempty"`
	PriceNut   *int32  `protobuf:"varint,12,opt,name=price_nut,json=priceNut,proto3,oneof" json:"price_nut,omitempty"`
	PriceScore *int32  `protobuf:"varint,13,opt,name=price_score,json=priceScore,proto3,oneof" json:"price_score,omitempty"`
	PriceBadge *int32  `protobuf:"varint,14,opt,name=price_badge,json=priceBadge,proto3,oneof" json:"price_badge,omitempty"`
	Remark     *string `protobuf:"bytes,15,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
	Memo       *string `protobuf:"bytes,16,opt,name=memo,proto3,oneof" json:"memo,omitempty"`
	Ctm        int64   `protobuf:"varint,17,opt,name=ctm,proto3" json:"ctm,omitempty"`
}

func (x *CtmCartResponse) Reset() {
	*x = CtmCartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCartResponse) ProtoMessage() {}

func (x *CtmCartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCartResponse.ProtoReflect.Descriptor instead.
func (*CtmCartResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{27}
}

func (x *CtmCartResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmCartResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CtmCartResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CtmCartResponse) GetTradeType() int32 {
	if x != nil && x.TradeType != nil {
		return *x.TradeType
	}
	return 0
}

func (x *CtmCartResponse) GetSpu() string {
	if x != nil {
		return x.Spu
	}
	return ""
}

func (x *CtmCartResponse) GetSkuId() string {
	if x != nil {
		return x.SkuId
	}
	return ""
}

func (x *CtmCartResponse) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *CtmCartResponse) GetOrderNum() int32 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *CtmCartResponse) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *CtmCartResponse) GetIsSelected() bool {
	if x != nil {
		return x.IsSelected
	}
	return false
}

func (x *CtmCartResponse) GetAttrsText() string {
	if x != nil {
		return x.AttrsText
	}
	return ""
}

func (x *CtmCartResponse) GetPriceNut() int32 {
	if x != nil && x.PriceNut != nil {
		return *x.PriceNut
	}
	return 0
}

func (x *CtmCartResponse) GetPriceScore() int32 {
	if x != nil && x.PriceScore != nil {
		return *x.PriceScore
	}
	return 0
}

func (x *CtmCartResponse) GetPriceBadge() int32 {
	if x != nil && x.PriceBadge != nil {
		return *x.PriceBadge
	}
	return 0
}

func (x *CtmCartResponse) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

func (x *CtmCartResponse) GetMemo() string {
	if x != nil && x.Memo != nil {
		return *x.Memo
	}
	return ""
}

func (x *CtmCartResponse) GetCtm() int64 {
	if x != nil {
		return x.Ctm
	}
	return 0
}

type CtmCartRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmCartRetrieveRequest) Reset() {
	*x = CtmCartRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCartRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCartRetrieveRequest) ProtoMessage() {}

func (x *CtmCartRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCartRetrieveRequest.ProtoReflect.Descriptor instead.
func (*CtmCartRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{28}
}

func (x *CtmCartRetrieveRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmCartSelectedAllChangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctm        int64 `protobuf:"varint,1,opt,name=ctm,proto3" json:"ctm,omitempty"`
	IsSelected bool  `protobuf:"varint,2,opt,name=is_selected,json=isSelected,proto3" json:"is_selected,omitempty"`
}

func (x *CtmCartSelectedAllChangeRequest) Reset() {
	*x = CtmCartSelectedAllChangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCartSelectedAllChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCartSelectedAllChangeRequest) ProtoMessage() {}

func (x *CtmCartSelectedAllChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCartSelectedAllChangeRequest.ProtoReflect.Descriptor instead.
func (*CtmCartSelectedAllChangeRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{29}
}

func (x *CtmCartSelectedAllChangeRequest) GetCtm() int64 {
	if x != nil {
		return x.Ctm
	}
	return 0
}

func (x *CtmCartSelectedAllChangeRequest) GetIsSelected() bool {
	if x != nil {
		return x.IsSelected
	}
	return false
}

type CtmCartUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters              string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,3,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	TradeType            *int32   `protobuf:"varint,4,opt,name=trade_type,json=tradeType,proto3,oneof" json:"trade_type,omitempty"`
	Spu                  string   `protobuf:"bytes,5,opt,name=spu,proto3" json:"spu,omitempty"`
	SkuId                string   `protobuf:"bytes,6,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	Sku                  string   `protobuf:"bytes,7,opt,name=sku,proto3" json:"sku,omitempty"`
	OrderNum             int32    `protobuf:"varint,8,opt,name=order_num,json=orderNum,proto3" json:"order_num,omitempty"`
	Price                string   `protobuf:"bytes,9,opt,name=price,proto3" json:"price,omitempty"`
	IsSelected           bool     `protobuf:"varint,10,opt,name=is_selected,json=isSelected,proto3" json:"is_selected,omitempty"`
	AttrsText            string   `protobuf:"bytes,11,opt,name=attrs_text,json=attrsText,proto3" json:"attrs_text,omitempty"`
	PriceNut             *int32   `protobuf:"varint,12,opt,name=price_nut,json=priceNut,proto3,oneof" json:"price_nut,omitempty"`
	PriceScore           *int32   `protobuf:"varint,13,opt,name=price_score,json=priceScore,proto3,oneof" json:"price_score,omitempty"`
	PriceBadge           *int32   `protobuf:"varint,14,opt,name=price_badge,json=priceBadge,proto3,oneof" json:"price_badge,omitempty"`
	Remark               *string  `protobuf:"bytes,15,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
	Memo                 *string  `protobuf:"bytes,16,opt,name=memo,proto3,oneof" json:"memo,omitempty"`
	Ctm                  int64    `protobuf:"varint,17,opt,name=ctm,proto3" json:"ctm,omitempty"`
}

func (x *CtmCartUpdateRequest) Reset() {
	*x = CtmCartUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCartUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCartUpdateRequest) ProtoMessage() {}

func (x *CtmCartUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCartUpdateRequest.ProtoReflect.Descriptor instead.
func (*CtmCartUpdateRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{30}
}

func (x *CtmCartUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmCartUpdateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmCartUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *CtmCartUpdateRequest) GetTradeType() int32 {
	if x != nil && x.TradeType != nil {
		return *x.TradeType
	}
	return 0
}

func (x *CtmCartUpdateRequest) GetSpu() string {
	if x != nil {
		return x.Spu
	}
	return ""
}

func (x *CtmCartUpdateRequest) GetSkuId() string {
	if x != nil {
		return x.SkuId
	}
	return ""
}

func (x *CtmCartUpdateRequest) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *CtmCartUpdateRequest) GetOrderNum() int32 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *CtmCartUpdateRequest) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *CtmCartUpdateRequest) GetIsSelected() bool {
	if x != nil {
		return x.IsSelected
	}
	return false
}

func (x *CtmCartUpdateRequest) GetAttrsText() string {
	if x != nil {
		return x.AttrsText
	}
	return ""
}

func (x *CtmCartUpdateRequest) GetPriceNut() int32 {
	if x != nil && x.PriceNut != nil {
		return *x.PriceNut
	}
	return 0
}

func (x *CtmCartUpdateRequest) GetPriceScore() int32 {
	if x != nil && x.PriceScore != nil {
		return *x.PriceScore
	}
	return 0
}

func (x *CtmCartUpdateRequest) GetPriceBadge() int32 {
	if x != nil && x.PriceBadge != nil {
		return *x.PriceBadge
	}
	return 0
}

func (x *CtmCartUpdateRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

func (x *CtmCartUpdateRequest) GetMemo() string {
	if x != nil && x.Memo != nil {
		return *x.Memo
	}
	return ""
}

func (x *CtmCartUpdateRequest) GetCtm() int64 {
	if x != nil {
		return x.Ctm
	}
	return 0
}

type CtmDefaultAddrRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CtmDefaultAddrRequest) Reset() {
	*x = CtmDefaultAddrRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmDefaultAddrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmDefaultAddrRequest) ProtoMessage() {}

func (x *CtmDefaultAddrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmDefaultAddrRequest.ProtoReflect.Descriptor instead.
func (*CtmDefaultAddrRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{31}
}

type CtmItoChangeSelectedAllCartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Affected int32 `protobuf:"varint,1,opt,name=affected,proto3" json:"affected,omitempty"`
}

func (x *CtmItoChangeSelectedAllCartResponse) Reset() {
	*x = CtmItoChangeSelectedAllCartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmItoChangeSelectedAllCartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmItoChangeSelectedAllCartResponse) ProtoMessage() {}

func (x *CtmItoChangeSelectedAllCartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmItoChangeSelectedAllCartResponse.ProtoReflect.Descriptor instead.
func (*CtmItoChangeSelectedAllCartResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{32}
}

func (x *CtmItoChangeSelectedAllCartResponse) GetAffected() int32 {
	if x != nil {
		return x.Affected
	}
	return 0
}

type CtmItoDefaultAddrResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmItoDefaultAddrResponse) Reset() {
	*x = CtmItoDefaultAddrResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmItoDefaultAddrResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmItoDefaultAddrResponse) ProtoMessage() {}

func (x *CtmItoDefaultAddrResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmItoDefaultAddrResponse.ProtoReflect.Descriptor instead.
func (*CtmItoDefaultAddrResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{33}
}

func (x *CtmItoDefaultAddrResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmItoDestroyCtmCardCaresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmItoDestroyCtmCardCaresRequest) Reset() {
	*x = CtmItoDestroyCtmCardCaresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmItoDestroyCtmCardCaresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmItoDestroyCtmCardCaresRequest) ProtoMessage() {}

func (x *CtmItoDestroyCtmCardCaresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmItoDestroyCtmCardCaresRequest.ProtoReflect.Descriptor instead.
func (*CtmItoDestroyCtmCardCaresRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{34}
}

func (x *CtmItoDestroyCtmCardCaresRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmItoDestroyCtmProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AcCode string `protobuf:"bytes,1,opt,name=ac_code,json=acCode,proto3" json:"ac_code,omitempty"`
}

func (x *CtmItoDestroyCtmProductRequest) Reset() {
	*x = CtmItoDestroyCtmProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmItoDestroyCtmProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmItoDestroyCtmProductRequest) ProtoMessage() {}

func (x *CtmItoDestroyCtmProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmItoDestroyCtmProductRequest.ProtoReflect.Descriptor instead.
func (*CtmItoDestroyCtmProductRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{35}
}

func (x *CtmItoDestroyCtmProductRequest) GetAcCode() string {
	if x != nil {
		return x.AcCode
	}
	return ""
}

type CtmProductCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters        string  `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	AcCode         string  `protobuf:"bytes,3,opt,name=ac_code,json=acCode,proto3" json:"ac_code,omitempty"`
	ProdCode       *string `protobuf:"bytes,4,opt,name=prod_code,json=prodCode,proto3,oneof" json:"prod_code,omitempty"`
	BuyTime        string  `protobuf:"bytes,5,opt,name=buy_time,json=buyTime,proto3" json:"buy_time,omitempty"`
	BindTime       *string `protobuf:"bytes,6,opt,name=bind_time,json=bindTime,proto3,oneof" json:"bind_time,omitempty"`
	RenewExpired   string  `protobuf:"bytes,7,opt,name=renew_expired,json=renewExpired,proto3" json:"renew_expired,omitempty"`
	RepairExpired  string  `protobuf:"bytes,8,opt,name=repair_expired,json=repairExpired,proto3" json:"repair_expired,omitempty"`
	RenewFlag      bool    `protobuf:"varint,9,opt,name=renew_flag,json=renewFlag,proto3" json:"renew_flag,omitempty"`
	Password       *string `protobuf:"bytes,10,opt,name=password,proto3,oneof" json:"password,omitempty"`
	OriginAcCode   *string `protobuf:"bytes,11,opt,name=origin_ac_code,json=originAcCode,proto3,oneof" json:"origin_ac_code,omitempty"`
	OriginProdCode *string `protobuf:"bytes,12,opt,name=origin_prod_code,json=originProdCode,proto3,oneof" json:"origin_prod_code,omitempty"`
	Ctm            int64   `protobuf:"varint,13,opt,name=ctm,proto3" json:"ctm,omitempty"`
	Remark         *string `protobuf:"bytes,14,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *CtmProductCreateRequest) Reset() {
	*x = CtmProductCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmProductCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmProductCreateRequest) ProtoMessage() {}

func (x *CtmProductCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmProductCreateRequest.ProtoReflect.Descriptor instead.
func (*CtmProductCreateRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{36}
}

func (x *CtmProductCreateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmProductCreateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmProductCreateRequest) GetAcCode() string {
	if x != nil {
		return x.AcCode
	}
	return ""
}

func (x *CtmProductCreateRequest) GetProdCode() string {
	if x != nil && x.ProdCode != nil {
		return *x.ProdCode
	}
	return ""
}

func (x *CtmProductCreateRequest) GetBuyTime() string {
	if x != nil {
		return x.BuyTime
	}
	return ""
}

func (x *CtmProductCreateRequest) GetBindTime() string {
	if x != nil && x.BindTime != nil {
		return *x.BindTime
	}
	return ""
}

func (x *CtmProductCreateRequest) GetRenewExpired() string {
	if x != nil {
		return x.RenewExpired
	}
	return ""
}

func (x *CtmProductCreateRequest) GetRepairExpired() string {
	if x != nil {
		return x.RepairExpired
	}
	return ""
}

func (x *CtmProductCreateRequest) GetRenewFlag() bool {
	if x != nil {
		return x.RenewFlag
	}
	return false
}

func (x *CtmProductCreateRequest) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *CtmProductCreateRequest) GetOriginAcCode() string {
	if x != nil && x.OriginAcCode != nil {
		return *x.OriginAcCode
	}
	return ""
}

func (x *CtmProductCreateRequest) GetOriginProdCode() string {
	if x != nil && x.OriginProdCode != nil {
		return *x.OriginProdCode
	}
	return ""
}

func (x *CtmProductCreateRequest) GetCtm() int64 {
	if x != nil {
		return x.Ctm
	}
	return 0
}

func (x *CtmProductCreateRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type CtmProductListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters string `protobuf:"bytes,1,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *CtmProductListRequest) Reset() {
	*x = CtmProductListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmProductListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmProductListRequest) ProtoMessage() {}

func (x *CtmProductListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmProductListRequest.ProtoReflect.Descriptor instead.
func (*CtmProductListRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{37}
}

func (x *CtmProductListRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

type CtmProductListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CtmProductResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CtmProductListResponse) Reset() {
	*x = CtmProductListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmProductListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmProductListResponse) ProtoMessage() {}

func (x *CtmProductListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmProductListResponse.ProtoReflect.Descriptor instead.
func (*CtmProductListResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{38}
}

func (x *CtmProductListResponse) GetResults() []*CtmProductResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CtmProductListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CtmProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Mobile         string  `protobuf:"bytes,2,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Nickname       string  `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	AcCode         string  `protobuf:"bytes,4,opt,name=ac_code,json=acCode,proto3" json:"ac_code,omitempty"`
	ProdCode       *string `protobuf:"bytes,5,opt,name=prod_code,json=prodCode,proto3,oneof" json:"prod_code,omitempty"`
	BuyTime        string  `protobuf:"bytes,6,opt,name=buy_time,json=buyTime,proto3" json:"buy_time,omitempty"`
	BindTime       *string `protobuf:"bytes,7,opt,name=bind_time,json=bindTime,proto3,oneof" json:"bind_time,omitempty"`
	RenewExpired   string  `protobuf:"bytes,8,opt,name=renew_expired,json=renewExpired,proto3" json:"renew_expired,omitempty"`
	RepairExpired  string  `protobuf:"bytes,9,opt,name=repair_expired,json=repairExpired,proto3" json:"repair_expired,omitempty"`
	RenewFlag      bool    `protobuf:"varint,10,opt,name=renew_flag,json=renewFlag,proto3" json:"renew_flag,omitempty"`
	Password       *string `protobuf:"bytes,11,opt,name=password,proto3,oneof" json:"password,omitempty"`
	OriginAcCode   *string `protobuf:"bytes,12,opt,name=origin_ac_code,json=originAcCode,proto3,oneof" json:"origin_ac_code,omitempty"`
	OriginProdCode *string `protobuf:"bytes,13,opt,name=origin_prod_code,json=originProdCode,proto3,oneof" json:"origin_prod_code,omitempty"`
	CreateTime     string  `protobuf:"bytes,14,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime     string  `protobuf:"bytes,15,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Ctm            int64   `protobuf:"varint,16,opt,name=ctm,proto3" json:"ctm,omitempty"`
	Remark         *string `protobuf:"bytes,17,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *CtmProductResponse) Reset() {
	*x = CtmProductResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmProductResponse) ProtoMessage() {}

func (x *CtmProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmProductResponse.ProtoReflect.Descriptor instead.
func (*CtmProductResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{39}
}

func (x *CtmProductResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmProductResponse) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *CtmProductResponse) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *CtmProductResponse) GetAcCode() string {
	if x != nil {
		return x.AcCode
	}
	return ""
}

func (x *CtmProductResponse) GetProdCode() string {
	if x != nil && x.ProdCode != nil {
		return *x.ProdCode
	}
	return ""
}

func (x *CtmProductResponse) GetBuyTime() string {
	if x != nil {
		return x.BuyTime
	}
	return ""
}

func (x *CtmProductResponse) GetBindTime() string {
	if x != nil && x.BindTime != nil {
		return *x.BindTime
	}
	return ""
}

func (x *CtmProductResponse) GetRenewExpired() string {
	if x != nil {
		return x.RenewExpired
	}
	return ""
}

func (x *CtmProductResponse) GetRepairExpired() string {
	if x != nil {
		return x.RepairExpired
	}
	return ""
}

func (x *CtmProductResponse) GetRenewFlag() bool {
	if x != nil {
		return x.RenewFlag
	}
	return false
}

func (x *CtmProductResponse) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *CtmProductResponse) GetOriginAcCode() string {
	if x != nil && x.OriginAcCode != nil {
		return *x.OriginAcCode
	}
	return ""
}

func (x *CtmProductResponse) GetOriginProdCode() string {
	if x != nil && x.OriginProdCode != nil {
		return *x.OriginProdCode
	}
	return ""
}

func (x *CtmProductResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CtmProductResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CtmProductResponse) GetCtm() int64 {
	if x != nil {
		return x.Ctm
	}
	return 0
}

func (x *CtmProductResponse) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type CtmProductRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AcCode string `protobuf:"bytes,1,opt,name=ac_code,json=acCode,proto3" json:"ac_code,omitempty"`
}

func (x *CtmProductRetrieveRequest) Reset() {
	*x = CtmProductRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmProductRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmProductRetrieveRequest) ProtoMessage() {}

func (x *CtmProductRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmProductRetrieveRequest.ProtoReflect.Descriptor instead.
func (*CtmProductRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{40}
}

func (x *CtmProductRetrieveRequest) GetAcCode() string {
	if x != nil {
		return x.AcCode
	}
	return ""
}

type CtmProductUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters              string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,3,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	AcCode               string   `protobuf:"bytes,4,opt,name=ac_code,json=acCode,proto3" json:"ac_code,omitempty"`
	ProdCode             *string  `protobuf:"bytes,5,opt,name=prod_code,json=prodCode,proto3,oneof" json:"prod_code,omitempty"`
	BuyTime              string   `protobuf:"bytes,6,opt,name=buy_time,json=buyTime,proto3" json:"buy_time,omitempty"`
	BindTime             *string  `protobuf:"bytes,7,opt,name=bind_time,json=bindTime,proto3,oneof" json:"bind_time,omitempty"`
	RenewExpired         string   `protobuf:"bytes,8,opt,name=renew_expired,json=renewExpired,proto3" json:"renew_expired,omitempty"`
	RepairExpired        string   `protobuf:"bytes,9,opt,name=repair_expired,json=repairExpired,proto3" json:"repair_expired,omitempty"`
	RenewFlag            bool     `protobuf:"varint,10,opt,name=renew_flag,json=renewFlag,proto3" json:"renew_flag,omitempty"`
	Password             *string  `protobuf:"bytes,11,opt,name=password,proto3,oneof" json:"password,omitempty"`
	OriginAcCode         *string  `protobuf:"bytes,12,opt,name=origin_ac_code,json=originAcCode,proto3,oneof" json:"origin_ac_code,omitempty"`
	OriginProdCode       *string  `protobuf:"bytes,13,opt,name=origin_prod_code,json=originProdCode,proto3,oneof" json:"origin_prod_code,omitempty"`
	Ctm                  int64    `protobuf:"varint,14,opt,name=ctm,proto3" json:"ctm,omitempty"`
	Remark               *string  `protobuf:"bytes,15,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *CtmProductUpdateRequest) Reset() {
	*x = CtmProductUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmProductUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmProductUpdateRequest) ProtoMessage() {}

func (x *CtmProductUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmProductUpdateRequest.ProtoReflect.Descriptor instead.
func (*CtmProductUpdateRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{41}
}

func (x *CtmProductUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmProductUpdateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmProductUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *CtmProductUpdateRequest) GetAcCode() string {
	if x != nil {
		return x.AcCode
	}
	return ""
}

func (x *CtmProductUpdateRequest) GetProdCode() string {
	if x != nil && x.ProdCode != nil {
		return *x.ProdCode
	}
	return ""
}

func (x *CtmProductUpdateRequest) GetBuyTime() string {
	if x != nil {
		return x.BuyTime
	}
	return ""
}

func (x *CtmProductUpdateRequest) GetBindTime() string {
	if x != nil && x.BindTime != nil {
		return *x.BindTime
	}
	return ""
}

func (x *CtmProductUpdateRequest) GetRenewExpired() string {
	if x != nil {
		return x.RenewExpired
	}
	return ""
}

func (x *CtmProductUpdateRequest) GetRepairExpired() string {
	if x != nil {
		return x.RepairExpired
	}
	return ""
}

func (x *CtmProductUpdateRequest) GetRenewFlag() bool {
	if x != nil {
		return x.RenewFlag
	}
	return false
}

func (x *CtmProductUpdateRequest) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *CtmProductUpdateRequest) GetOriginAcCode() string {
	if x != nil && x.OriginAcCode != nil {
		return *x.OriginAcCode
	}
	return ""
}

func (x *CtmProductUpdateRequest) GetOriginProdCode() string {
	if x != nil && x.OriginProdCode != nil {
		return *x.OriginProdCode
	}
	return ""
}

func (x *CtmProductUpdateRequest) GetCtm() int64 {
	if x != nil {
		return x.Ctm
	}
	return 0
}

func (x *CtmProductUpdateRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type CtmUpdateSpuSnapShotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsSpu string `protobuf:"bytes,1,opt,name=goods_spu,json=goodsSpu,proto3" json:"goods_spu,omitempty"`
	GoodsNo  string `protobuf:"bytes,2,opt,name=goods_no,json=goodsNo,proto3" json:"goods_no,omitempty"`
	NewSpu   string `protobuf:"bytes,3,opt,name=new_spu,json=newSpu,proto3" json:"new_spu,omitempty"`
}

func (x *CtmUpdateSpuSnapShotRequest) Reset() {
	*x = CtmUpdateSpuSnapShotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmUpdateSpuSnapShotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmUpdateSpuSnapShotRequest) ProtoMessage() {}

func (x *CtmUpdateSpuSnapShotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmUpdateSpuSnapShotRequest.ProtoReflect.Descriptor instead.
func (*CtmUpdateSpuSnapShotRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{42}
}

func (x *CtmUpdateSpuSnapShotRequest) GetGoodsSpu() string {
	if x != nil {
		return x.GoodsSpu
	}
	return ""
}

func (x *CtmUpdateSpuSnapShotRequest) GetGoodsNo() string {
	if x != nil {
		return x.GoodsNo
	}
	return ""
}

func (x *CtmUpdateSpuSnapShotRequest) GetNewSpu() string {
	if x != nil {
		return x.NewSpu
	}
	return ""
}

type CtmWalletListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CtmWalletResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CtmWalletListResponse) Reset() {
	*x = CtmWalletListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmWalletListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmWalletListResponse) ProtoMessage() {}

func (x *CtmWalletListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmWalletListResponse.ProtoReflect.Descriptor instead.
func (*CtmWalletListResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{43}
}

func (x *CtmWalletListResponse) GetResults() []*CtmWalletResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CtmWalletListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CtmWalletOptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardClass        []*LabelNumberValueResponse `protobuf:"bytes,1,rep,name=card_class,json=cardClass,proto3" json:"card_class,omitempty"`
	CardType         []*LabelNumberValueResponse `protobuf:"bytes,2,rep,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	RecordChangeType []*LabelNumberValueResponse `protobuf:"bytes,3,rep,name=record_change_type,json=recordChangeType,proto3" json:"record_change_type,omitempty"`
}

func (x *CtmWalletOptionsResponse) Reset() {
	*x = CtmWalletOptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmWalletOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmWalletOptionsResponse) ProtoMessage() {}

func (x *CtmWalletOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmWalletOptionsResponse.ProtoReflect.Descriptor instead.
func (*CtmWalletOptionsResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{44}
}

func (x *CtmWalletOptionsResponse) GetCardClass() []*LabelNumberValueResponse {
	if x != nil {
		return x.CardClass
	}
	return nil
}

func (x *CtmWalletOptionsResponse) GetCardType() []*LabelNumberValueResponse {
	if x != nil {
		return x.CardType
	}
	return nil
}

func (x *CtmWalletOptionsResponse) GetRecordChangeType() []*LabelNumberValueResponse {
	if x != nil {
		return x.RecordChangeType
	}
	return nil
}

type CtmWalletRecordListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CtmWalletRecordResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                      `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CtmWalletRecordListResponse) Reset() {
	*x = CtmWalletRecordListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmWalletRecordListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmWalletRecordListResponse) ProtoMessage() {}

func (x *CtmWalletRecordListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmWalletRecordListResponse.ProtoReflect.Descriptor instead.
func (*CtmWalletRecordListResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{45}
}

func (x *CtmWalletRecordListResponse) GetResults() []*CtmWalletRecordResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CtmWalletRecordListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CtmWalletRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ChangeTypeName string   `protobuf:"bytes,2,opt,name=change_type_name,json=changeTypeName,proto3" json:"change_type_name,omitempty"`
	CreateTime     string   `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime     string   `protobuf:"bytes,4,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	ActivityId     *int32   `protobuf:"varint,5,opt,name=activity_id,json=activityId,proto3,oneof" json:"activity_id,omitempty"`
	ChangeType     *int32   `protobuf:"varint,6,opt,name=change_type,json=changeType,proto3,oneof" json:"change_type,omitempty"`
	BeforePoints   *int32   `protobuf:"varint,7,opt,name=before_points,json=beforePoints,proto3,oneof" json:"before_points,omitempty"`
	AfterPoints    *int32   `protobuf:"varint,8,opt,name=after_points,json=afterPoints,proto3,oneof" json:"after_points,omitempty"`
	BeforeAmount   *float64 `protobuf:"fixed64,9,opt,name=before_amount,json=beforeAmount,proto3,oneof" json:"before_amount,omitempty"`
	AfterAmount    *float64 `protobuf:"fixed64,10,opt,name=after_amount,json=afterAmount,proto3,oneof" json:"after_amount,omitempty"`
	ChangeCode     *string  `protobuf:"bytes,11,opt,name=change_code,json=changeCode,proto3,oneof" json:"change_code,omitempty"`
	ChangeReason   *string  `protobuf:"bytes,12,opt,name=change_reason,json=changeReason,proto3,oneof" json:"change_reason,omitempty"`
	Wallet         *int64   `protobuf:"varint,13,opt,name=wallet,proto3,oneof" json:"wallet,omitempty"`
	OrderUsed      *int64   `protobuf:"varint,14,opt,name=order_used,json=orderUsed,proto3,oneof" json:"order_used,omitempty"`
	RefundUsed     *int64   `protobuf:"varint,15,opt,name=refund_used,json=refundUsed,proto3,oneof" json:"refund_used,omitempty"`
}

func (x *CtmWalletRecordResponse) Reset() {
	*x = CtmWalletRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmWalletRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmWalletRecordResponse) ProtoMessage() {}

func (x *CtmWalletRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmWalletRecordResponse.ProtoReflect.Descriptor instead.
func (*CtmWalletRecordResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{46}
}

func (x *CtmWalletRecordResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmWalletRecordResponse) GetChangeTypeName() string {
	if x != nil {
		return x.ChangeTypeName
	}
	return ""
}

func (x *CtmWalletRecordResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CtmWalletRecordResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CtmWalletRecordResponse) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *CtmWalletRecordResponse) GetChangeType() int32 {
	if x != nil && x.ChangeType != nil {
		return *x.ChangeType
	}
	return 0
}

func (x *CtmWalletRecordResponse) GetBeforePoints() int32 {
	if x != nil && x.BeforePoints != nil {
		return *x.BeforePoints
	}
	return 0
}

func (x *CtmWalletRecordResponse) GetAfterPoints() int32 {
	if x != nil && x.AfterPoints != nil {
		return *x.AfterPoints
	}
	return 0
}

func (x *CtmWalletRecordResponse) GetBeforeAmount() float64 {
	if x != nil && x.BeforeAmount != nil {
		return *x.BeforeAmount
	}
	return 0
}

func (x *CtmWalletRecordResponse) GetAfterAmount() float64 {
	if x != nil && x.AfterAmount != nil {
		return *x.AfterAmount
	}
	return 0
}

func (x *CtmWalletRecordResponse) GetChangeCode() string {
	if x != nil && x.ChangeCode != nil {
		return *x.ChangeCode
	}
	return ""
}

func (x *CtmWalletRecordResponse) GetChangeReason() string {
	if x != nil && x.ChangeReason != nil {
		return *x.ChangeReason
	}
	return ""
}

func (x *CtmWalletRecordResponse) GetWallet() int64 {
	if x != nil && x.Wallet != nil {
		return *x.Wallet
	}
	return 0
}

func (x *CtmWalletRecordResponse) GetOrderUsed() int64 {
	if x != nil && x.OrderUsed != nil {
		return *x.OrderUsed
	}
	return 0
}

func (x *CtmWalletRecordResponse) GetRefundUsed() int64 {
	if x != nil && x.RefundUsed != nil {
		return *x.RefundUsed
	}
	return 0
}

type CtmWalletResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CardClassName string   `protobuf:"bytes,2,opt,name=card_class_name,json=cardClassName,proto3" json:"card_class_name,omitempty"`
	CardTypeName  string   `protobuf:"bytes,3,opt,name=card_type_name,json=cardTypeName,proto3" json:"card_type_name,omitempty"`
	CreateTime    string   `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime    string   `protobuf:"bytes,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	CanDeposit    *bool    `protobuf:"varint,6,opt,name=can_deposit,json=canDeposit,proto3,oneof" json:"can_deposit,omitempty"`
	ActCardId     *int32   `protobuf:"varint,7,opt,name=act_card_id,json=actCardId,proto3,oneof" json:"act_card_id,omitempty"`
	CardSku       *string  `protobuf:"bytes,8,opt,name=card_sku,json=cardSku,proto3,oneof" json:"card_sku,omitempty"`
	CardCode      *string  `protobuf:"bytes,9,opt,name=card_code,json=cardCode,proto3,oneof" json:"card_code,omitempty"`
	CardName      *string  `protobuf:"bytes,10,opt,name=card_name,json=cardName,proto3,oneof" json:"card_name,omitempty"`
	CardIntro     *string  `protobuf:"bytes,11,opt,name=card_intro,json=cardIntro,proto3,oneof" json:"card_intro,omitempty"`
	CardClass     *int32   `protobuf:"varint,12,opt,name=card_class,json=cardClass,proto3,oneof" json:"card_class,omitempty"`
	CardType      *int32   `protobuf:"varint,13,opt,name=card_type,json=cardType,proto3,oneof" json:"card_type,omitempty"`
	Points        *int32   `protobuf:"varint,14,opt,name=points,proto3,oneof" json:"points,omitempty"`
	Amounts       *float64 `protobuf:"fixed64,15,opt,name=amounts,proto3,oneof" json:"amounts,omitempty"`
	Ctm           *int64   `protobuf:"varint,16,opt,name=ctm,proto3,oneof" json:"ctm,omitempty"`
}

func (x *CtmWalletResponse) Reset() {
	*x = CtmWalletResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmWalletResponse) ProtoMessage() {}

func (x *CtmWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmWalletResponse.ProtoReflect.Descriptor instead.
func (*CtmWalletResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{47}
}

func (x *CtmWalletResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmWalletResponse) GetCardClassName() string {
	if x != nil {
		return x.CardClassName
	}
	return ""
}

func (x *CtmWalletResponse) GetCardTypeName() string {
	if x != nil {
		return x.CardTypeName
	}
	return ""
}

func (x *CtmWalletResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CtmWalletResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CtmWalletResponse) GetCanDeposit() bool {
	if x != nil && x.CanDeposit != nil {
		return *x.CanDeposit
	}
	return false
}

func (x *CtmWalletResponse) GetActCardId() int32 {
	if x != nil && x.ActCardId != nil {
		return *x.ActCardId
	}
	return 0
}

func (x *CtmWalletResponse) GetCardSku() string {
	if x != nil && x.CardSku != nil {
		return *x.CardSku
	}
	return ""
}

func (x *CtmWalletResponse) GetCardCode() string {
	if x != nil && x.CardCode != nil {
		return *x.CardCode
	}
	return ""
}

func (x *CtmWalletResponse) GetCardName() string {
	if x != nil && x.CardName != nil {
		return *x.CardName
	}
	return ""
}

func (x *CtmWalletResponse) GetCardIntro() string {
	if x != nil && x.CardIntro != nil {
		return *x.CardIntro
	}
	return ""
}

func (x *CtmWalletResponse) GetCardClass() int32 {
	if x != nil && x.CardClass != nil {
		return *x.CardClass
	}
	return 0
}

func (x *CtmWalletResponse) GetCardType() int32 {
	if x != nil && x.CardType != nil {
		return *x.CardType
	}
	return 0
}

func (x *CtmWalletResponse) GetPoints() int32 {
	if x != nil && x.Points != nil {
		return *x.Points
	}
	return 0
}

func (x *CtmWalletResponse) GetAmounts() float64 {
	if x != nil && x.Amounts != nil {
		return *x.Amounts
	}
	return 0
}

func (x *CtmWalletResponse) GetCtm() int64 {
	if x != nil && x.Ctm != nil {
		return *x.Ctm
	}
	return 0
}

type DestroyCtmWalletRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DestroyCtmWalletRecordRequest) Reset() {
	*x = DestroyCtmWalletRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyCtmWalletRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyCtmWalletRecordRequest) ProtoMessage() {}

func (x *DestroyCtmWalletRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyCtmWalletRecordRequest.ProtoReflect.Descriptor instead.
func (*DestroyCtmWalletRecordRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{48}
}

func (x *DestroyCtmWalletRecordRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DestroyCtmWalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DestroyCtmWalletRequest) Reset() {
	*x = DestroyCtmWalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyCtmWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyCtmWalletRequest) ProtoMessage() {}

func (x *DestroyCtmWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyCtmWalletRequest.ProtoReflect.Descriptor instead.
func (*DestroyCtmWalletRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{49}
}

func (x *DestroyCtmWalletRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type LabelNumberValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32   `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Label *string `protobuf:"bytes,2,opt,name=label,proto3,oneof" json:"label,omitempty"`
	Count *int32  `protobuf:"varint,3,opt,name=count,proto3,oneof" json:"count,omitempty"`
}

func (x *LabelNumberValueResponse) Reset() {
	*x = LabelNumberValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelNumberValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelNumberValueResponse) ProtoMessage() {}

func (x *LabelNumberValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelNumberValueResponse.ProtoReflect.Descriptor instead.
func (*LabelNumberValueResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{50}
}

func (x *LabelNumberValueResponse) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *LabelNumberValueResponse) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *LabelNumberValueResponse) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type ListCtmWalletRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters string `protobuf:"bytes,1,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListCtmWalletRecordRequest) Reset() {
	*x = ListCtmWalletRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCtmWalletRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCtmWalletRecordRequest) ProtoMessage() {}

func (x *ListCtmWalletRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCtmWalletRecordRequest.ProtoReflect.Descriptor instead.
func (*ListCtmWalletRecordRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{51}
}

func (x *ListCtmWalletRecordRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

type ListCtmWalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters string `protobuf:"bytes,1,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListCtmWalletRequest) Reset() {
	*x = ListCtmWalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCtmWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCtmWalletRequest) ProtoMessage() {}

func (x *ListCtmWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCtmWalletRequest.ProtoReflect.Descriptor instead.
func (*ListCtmWalletRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{52}
}

func (x *ListCtmWalletRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

type RetrieveCtmWalletRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RetrieveCtmWalletRecordRequest) Reset() {
	*x = RetrieveCtmWalletRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveCtmWalletRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveCtmWalletRecordRequest) ProtoMessage() {}

func (x *RetrieveCtmWalletRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveCtmWalletRecordRequest.ProtoReflect.Descriptor instead.
func (*RetrieveCtmWalletRecordRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{53}
}

func (x *RetrieveCtmWalletRecordRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RetrieveCtmWalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RetrieveCtmWalletRequest) Reset() {
	*x = RetrieveCtmWalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveCtmWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveCtmWalletRequest) ProtoMessage() {}

func (x *RetrieveCtmWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveCtmWalletRequest.ProtoReflect.Descriptor instead.
func (*RetrieveCtmWalletRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{54}
}

func (x *RetrieveCtmWalletRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateCtmWalletRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters              string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,3,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	ActivityId           *int32   `protobuf:"varint,4,opt,name=activity_id,json=activityId,proto3,oneof" json:"activity_id,omitempty"`
	ChangeType           *int32   `protobuf:"varint,5,opt,name=change_type,json=changeType,proto3,oneof" json:"change_type,omitempty"`
	BeforePoints         *int32   `protobuf:"varint,6,opt,name=before_points,json=beforePoints,proto3,oneof" json:"before_points,omitempty"`
	AfterPoints          *int32   `protobuf:"varint,7,opt,name=after_points,json=afterPoints,proto3,oneof" json:"after_points,omitempty"`
	BeforeAmount         *float64 `protobuf:"fixed64,8,opt,name=before_amount,json=beforeAmount,proto3,oneof" json:"before_amount,omitempty"`
	AfterAmount          *float64 `protobuf:"fixed64,9,opt,name=after_amount,json=afterAmount,proto3,oneof" json:"after_amount,omitempty"`
	ChangeCode           *string  `protobuf:"bytes,10,opt,name=change_code,json=changeCode,proto3,oneof" json:"change_code,omitempty"`
	ChangeReason         *string  `protobuf:"bytes,11,opt,name=change_reason,json=changeReason,proto3,oneof" json:"change_reason,omitempty"`
	Wallet               *int64   `protobuf:"varint,12,opt,name=wallet,proto3,oneof" json:"wallet,omitempty"`
	OrderUsed            *int64   `protobuf:"varint,13,opt,name=order_used,json=orderUsed,proto3,oneof" json:"order_used,omitempty"`
	RefundUsed           *int64   `protobuf:"varint,14,opt,name=refund_used,json=refundUsed,proto3,oneof" json:"refund_used,omitempty"`
}

func (x *UpdateCtmWalletRecordRequest) Reset() {
	*x = UpdateCtmWalletRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCtmWalletRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCtmWalletRecordRequest) ProtoMessage() {}

func (x *UpdateCtmWalletRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCtmWalletRecordRequest.ProtoReflect.Descriptor instead.
func (*UpdateCtmWalletRecordRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{55}
}

func (x *UpdateCtmWalletRecordRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCtmWalletRecordRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *UpdateCtmWalletRecordRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *UpdateCtmWalletRecordRequest) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *UpdateCtmWalletRecordRequest) GetChangeType() int32 {
	if x != nil && x.ChangeType != nil {
		return *x.ChangeType
	}
	return 0
}

func (x *UpdateCtmWalletRecordRequest) GetBeforePoints() int32 {
	if x != nil && x.BeforePoints != nil {
		return *x.BeforePoints
	}
	return 0
}

func (x *UpdateCtmWalletRecordRequest) GetAfterPoints() int32 {
	if x != nil && x.AfterPoints != nil {
		return *x.AfterPoints
	}
	return 0
}

func (x *UpdateCtmWalletRecordRequest) GetBeforeAmount() float64 {
	if x != nil && x.BeforeAmount != nil {
		return *x.BeforeAmount
	}
	return 0
}

func (x *UpdateCtmWalletRecordRequest) GetAfterAmount() float64 {
	if x != nil && x.AfterAmount != nil {
		return *x.AfterAmount
	}
	return 0
}

func (x *UpdateCtmWalletRecordRequest) GetChangeCode() string {
	if x != nil && x.ChangeCode != nil {
		return *x.ChangeCode
	}
	return ""
}

func (x *UpdateCtmWalletRecordRequest) GetChangeReason() string {
	if x != nil && x.ChangeReason != nil {
		return *x.ChangeReason
	}
	return ""
}

func (x *UpdateCtmWalletRecordRequest) GetWallet() int64 {
	if x != nil && x.Wallet != nil {
		return *x.Wallet
	}
	return 0
}

func (x *UpdateCtmWalletRecordRequest) GetOrderUsed() int64 {
	if x != nil && x.OrderUsed != nil {
		return *x.OrderUsed
	}
	return 0
}

func (x *UpdateCtmWalletRecordRequest) GetRefundUsed() int64 {
	if x != nil && x.RefundUsed != nil {
		return *x.RefundUsed
	}
	return 0
}

type UpdateCtmWalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters              string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,3,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	CanDeposit           *bool    `protobuf:"varint,4,opt,name=can_deposit,json=canDeposit,proto3,oneof" json:"can_deposit,omitempty"`
	ActCardId            *int32   `protobuf:"varint,5,opt,name=act_card_id,json=actCardId,proto3,oneof" json:"act_card_id,omitempty"`
	CardSku              *string  `protobuf:"bytes,6,opt,name=card_sku,json=cardSku,proto3,oneof" json:"card_sku,omitempty"`
	CardCode             *string  `protobuf:"bytes,7,opt,name=card_code,json=cardCode,proto3,oneof" json:"card_code,omitempty"`
	CardName             *string  `protobuf:"bytes,8,opt,name=card_name,json=cardName,proto3,oneof" json:"card_name,omitempty"`
	CardIntro            *string  `protobuf:"bytes,9,opt,name=card_intro,json=cardIntro,proto3,oneof" json:"card_intro,omitempty"`
	CardClass            *int32   `protobuf:"varint,10,opt,name=card_class,json=cardClass,proto3,oneof" json:"card_class,omitempty"`
	CardType             *int32   `protobuf:"varint,11,opt,name=card_type,json=cardType,proto3,oneof" json:"card_type,omitempty"`
	Points               *int32   `protobuf:"varint,12,opt,name=points,proto3,oneof" json:"points,omitempty"`
	Amounts              *float64 `protobuf:"fixed64,13,opt,name=amounts,proto3,oneof" json:"amounts,omitempty"`
	Ctm                  *int64   `protobuf:"varint,14,opt,name=ctm,proto3,oneof" json:"ctm,omitempty"`
}

func (x *UpdateCtmWalletRequest) Reset() {
	*x = UpdateCtmWalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCtmWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCtmWalletRequest) ProtoMessage() {}

func (x *UpdateCtmWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCtmWalletRequest.ProtoReflect.Descriptor instead.
func (*UpdateCtmWalletRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{56}
}

func (x *UpdateCtmWalletRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCtmWalletRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *UpdateCtmWalletRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *UpdateCtmWalletRequest) GetCanDeposit() bool {
	if x != nil && x.CanDeposit != nil {
		return *x.CanDeposit
	}
	return false
}

func (x *UpdateCtmWalletRequest) GetActCardId() int32 {
	if x != nil && x.ActCardId != nil {
		return *x.ActCardId
	}
	return 0
}

func (x *UpdateCtmWalletRequest) GetCardSku() string {
	if x != nil && x.CardSku != nil {
		return *x.CardSku
	}
	return ""
}

func (x *UpdateCtmWalletRequest) GetCardCode() string {
	if x != nil && x.CardCode != nil {
		return *x.CardCode
	}
	return ""
}

func (x *UpdateCtmWalletRequest) GetCardName() string {
	if x != nil && x.CardName != nil {
		return *x.CardName
	}
	return ""
}

func (x *UpdateCtmWalletRequest) GetCardIntro() string {
	if x != nil && x.CardIntro != nil {
		return *x.CardIntro
	}
	return ""
}

func (x *UpdateCtmWalletRequest) GetCardClass() int32 {
	if x != nil && x.CardClass != nil {
		return *x.CardClass
	}
	return 0
}

func (x *UpdateCtmWalletRequest) GetCardType() int32 {
	if x != nil && x.CardType != nil {
		return *x.CardType
	}
	return 0
}

func (x *UpdateCtmWalletRequest) GetPoints() int32 {
	if x != nil && x.Points != nil {
		return *x.Points
	}
	return 0
}

func (x *UpdateCtmWalletRequest) GetAmounts() float64 {
	if x != nil && x.Amounts != nil {
		return *x.Amounts
	}
	return 0
}

func (x *UpdateCtmWalletRequest) GetCtm() int64 {
	if x != nil && x.Ctm != nil {
		return *x.Ctm
	}
	return 0
}

type WalletNextCardCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardClass int32 `protobuf:"varint,1,opt,name=card_class,json=cardClass,proto3" json:"card_class,omitempty"`
	CardType  int32 `protobuf:"varint,2,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
}

func (x *WalletNextCardCodeRequest) Reset() {
	*x = WalletNextCardCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletNextCardCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletNextCardCodeRequest) ProtoMessage() {}

func (x *WalletNextCardCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletNextCardCodeRequest.ProtoReflect.Descriptor instead.
func (*WalletNextCardCodeRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{57}
}

func (x *WalletNextCardCodeRequest) GetCardClass() int32 {
	if x != nil {
		return x.CardClass
	}
	return 0
}

func (x *WalletNextCardCodeRequest) GetCardType() int32 {
	if x != nil {
		return x.CardType
	}
	return 0
}

type WalletNextCardCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextCardCode string `protobuf:"bytes,1,opt,name=next_card_code,json=nextCardCode,proto3" json:"next_card_code,omitempty"`
}

func (x *WalletNextCardCodeResponse) Reset() {
	*x = WalletNextCardCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletNextCardCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletNextCardCodeResponse) ProtoMessage() {}

func (x *WalletNextCardCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletNextCardCodeResponse.ProtoReflect.Descriptor instead.
func (*WalletNextCardCodeResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{58}
}

func (x *WalletNextCardCodeResponse) GetNextCardCode() string {
	if x != nil {
		return x.NextCardCode
	}
	return ""
}

var File_customer_ito_proto protoreflect.FileDescriptor

var file_customer_ito_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xd7, 0x03, 0x0a, 0x11, 0x43, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x2d, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x64, 0x69, 0x66, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x0e, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x69, 0x66, 0x66, 0x88, 0x01, 0x01, 0x12,
	0x2d, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64,
	0x69, 0x66, 0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x0e, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x69, 0x66, 0x66, 0x88, 0x01, 0x01, 0x12, 0x28,
	0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e,
	0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e,
	0x69, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xa1, 0x05, 0x0a, 0x1c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x01, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x28, 0x0a, 0x0d, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x0c, 0x62, 0x65, 0x66, 0x6f,
	0x72, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x61,
	0x66, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x03, 0x52, 0x0b, 0x61, 0x66, 0x74, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x48, 0x04, 0x52, 0x0c, 0x62, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a,
	0x0c, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x01, 0x48, 0x05, 0x52, 0x0b, 0x61, 0x66, 0x74, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0a, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x07, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x48, 0x08, 0x52, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x48, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x55,
	0x73, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0a, 0x52, 0x0a, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x22, 0xc2,
	0x04, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0b, 0x61, 0x63, 0x74,
	0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01,
	0x52, 0x09, 0x61, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e,
	0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x6b, 0x75, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x07, 0x63, 0x61, 0x72, 0x64, 0x53, 0x6b, 0x75, 0x88, 0x01, 0x01, 0x12, 0x20,
	0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x03, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x20, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x6f,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x09, 0x63, 0x61, 0x72, 0x64, 0x49, 0x6e,
	0x74, 0x72, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x48, 0x06, 0x52, 0x09, 0x63, 0x61,
	0x72, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x48, 0x07, 0x52,
	0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x48, 0x08, 0x52, 0x06,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x48, 0x09, 0x52, 0x07, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0a, 0x52, 0x03, 0x63, 0x74, 0x6d, 0x88, 0x01, 0x01, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x61, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x6b, 0x75, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x63, 0x74, 0x6d, 0x22, 0xfd, 0x02, 0x0a, 0x14, 0x43, 0x74, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x1e, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x54, 0x61, 0x67,
	0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x7a, 0x69, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x7a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x27,
	0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x74, 0x6d, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x7a, 0x69, 0x70, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0x27, 0x0a, 0x15, 0x43, 0x74, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x44, 0x65,
	0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x12,
	0x43, 0x74, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x75, 0x0a, 0x13,
	0x43, 0x74, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0xa0, 0x03, 0x0a, 0x0f, 0x43, 0x74, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1e, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x74,
	0x61, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x54, 0x61, 0x67, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x7a, 0x69, 0x70, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x7a, 0x69, 0x70, 0x43,
	0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x74,
	0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x74, 0x6d, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x7a, 0x69,
	0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x28, 0x0a, 0x16, 0x43, 0x74, 0x6d, 0x41, 0x64, 0x64,
	0x72, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xb2, 0x03, 0x0a, 0x14, 0x43, 0x74, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1e, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x74, 0x61,
	0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x54,
	0x61, 0x67, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x7a, 0x69, 0x70, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x7a, 0x69, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x74, 0x6d,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x74, 0x6d, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x7a, 0x69, 0x70,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x34, 0x0a, 0x15, 0x43, 0x74, 0x6d, 0x42, 0x61, 0x73, 0x65,
	0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6d, 0x70, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x22, 0xcc, 0x05, 0x0a, 0x12,
	0x43, 0x74, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04,
	0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a,
	0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x05, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e,
	0x0a, 0x08, 0x64, 0x77, 0x5f, 0x6d, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x06, 0x52, 0x07, 0x64, 0x77, 0x4d, 0x65, 0x6d, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x28,
	0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74,
	0x5f, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08,
	0x52, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x70, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26,
	0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43,
	0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0d,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x64, 0x77, 0x5f, 0x6d, 0x65, 0x6d, 0x49, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x61, 0x72, 0x65,
	0x61, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x75, 0x0a, 0x13, 0x43, 0x74,
	0x6d, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x48, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x8a, 0x06, 0x0a, 0x1b, 0x43, 0x74, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x33, 0x0a, 0x16, 0x5f,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x12, 0x1b, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01,
	0x12, 0x1f, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x04, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x88, 0x01,
	0x01, 0x12, 0x1f, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x64, 0x77, 0x5f, 0x6d, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x07, 0x64, 0x77, 0x4d, 0x65, 0x6d, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0c, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c,
	0x70, 0x6c, 0x61, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x08, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x49,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x70, 0x4f, 0x70, 0x65, 0x6e, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x61,
	0x72, 0x65, 0x61, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x04, 0x61, 0x72, 0x65,
	0x61, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x77, 0x5f, 0x6d, 0x65, 0x6d, 0x49, 0x64, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x61, 0x72, 0x65, 0x61, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0xc8,
	0x05, 0x0a, 0x0e, 0x43, 0x74, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03,
	0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52,
	0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05,
	0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a,
	0x08, 0x64, 0x77, 0x5f, 0x6d, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x06, 0x52, 0x07, 0x64, 0x77, 0x4d, 0x65, 0x6d, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a,
	0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x5f,
	0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52,
	0x0b, 0x70, 0x6c, 0x61, 0x74, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6d, 0x70, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a,
	0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f,
	0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x88, 0x01, 0x01, 0x12,
	0x17, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0d, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x64, 0x77, 0x5f, 0x6d, 0x65, 0x6d, 0x49, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x70, 0x6c, 0x61, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x61, 0x72, 0x65, 0x61,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0xa5, 0x07, 0x0a, 0x0f, 0x43, 0x74,
	0x6d, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x53,
	0x0a, 0x0d, 0x63, 0x74, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x63, 0x74, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61,
	0x79, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x64, 0x77, 0x5f, 0x6d, 0x65, 0x6d, 0x49,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x07, 0x64, 0x77, 0x4d, 0x65, 0x6d,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0c,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x26, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x55, 0x6e, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x70, 0x5f, 0x6f, 0x70,
	0x65, 0x6e, 0x49, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x70, 0x4f, 0x70,
	0x65, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x0b, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x0b, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x17,
	0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x04,
	0x61, 0x72, 0x65, 0x61, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x77, 0x5f, 0x6d, 0x65, 0x6d, 0x49,
	0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x75, 0x6e, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x35, 0x0a, 0x16, 0x43, 0x74, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x70, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6d, 0x70, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x22, 0xcb, 0x03, 0x0a, 0x19, 0x43, 0x74, 0x6d,
	0x43, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x63, 0x61, 0x72, 0x65, 0x73, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61,
	0x72, 0x64, 0x4e, 0x6f, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0c, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x61,
	0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a,
	0x0a, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x2e, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x04, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x74, 0x6d,
	0x12, 0x1e, 0x0a, 0x08, 0x63, 0x74, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x05, 0x52, 0x07, 0x63, 0x74, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x88, 0x01, 0x01,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x61, 0x63,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63,
	0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x74,
	0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x22, 0x33, 0x0a, 0x17, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72,
	0x64, 0x43, 0x61, 0x72, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x7f, 0x0a, 0x18, 0x43,
	0x74, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x64,
	0x43, 0x61, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xd7, 0x04, 0x0a,
	0x14, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x46, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x63, 0x61, 0x72, 0x65, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x61, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x63, 0x61, 0x72, 0x65, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x72, 0x64,
	0x4e, 0x6f, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0c, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63,
	0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x02, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x2e, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0f, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x04, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x74, 0x6d,
	0x12, 0x1e, 0x0a, 0x08, 0x63, 0x74, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x05, 0x52, 0x07, 0x63, 0x74, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x88, 0x01, 0x01,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x61, 0x63,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63,
	0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x74,
	0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x22, 0x2d, 0x0a, 0x1b, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72,
	0x64, 0x43, 0x61, 0x72, 0x65, 0x73, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x80, 0x04, 0x0a, 0x19, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72,
	0x64, 0x43, 0x61, 0x72, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x61, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x63, 0x61, 0x72, 0x65, 0x73, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61,
	0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0c, 0x61, 0x63, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x0b, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x69, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52,
	0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63,
	0x74, 0x6d, 0x12, 0x1e, 0x0a, 0x08, 0x63, 0x74, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x05, 0x52, 0x07, 0x63, 0x74, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x88,
	0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x61, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x63, 0x74, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x22, 0x99, 0x04, 0x0a, 0x14, 0x43, 0x74, 0x6d,
	0x43, 0x61, 0x72, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x0a, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x70, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x70,
	0x75, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6b, 0x75, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x6b, 0x75, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x73, 0x54, 0x65, 0x78, 0x74, 0x12, 0x20, 0x0a,
	0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x01, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4e, 0x75, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x24, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x0a, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x42, 0x61, 0x64, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x88, 0x01,
	0x01, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x63, 0x74, 0x6d, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x74,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x6d, 0x65, 0x6d, 0x6f, 0x22, 0x27, 0x0a, 0x15, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x44,
	0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2e, 0x0a,
	0x12, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x75, 0x0a,
	0x13, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xbc, 0x04, 0x0a, 0x0f, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00,
	0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x70, 0x75, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x70, 0x75,
	0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6b, 0x75, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x6b, 0x75, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x73, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x69, 0x73, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x73, 0x54, 0x65, 0x78, 0x74, 0x12, 0x20, 0x0a, 0x09,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x01, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4e, 0x75, 0x74, 0x88, 0x01, 0x01, 0x12, 0x24,
	0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x0a, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x42, 0x61, 0x64, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x88, 0x01, 0x01,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63,
	0x74, 0x6d, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x74, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6d,
	0x65, 0x6d, 0x6f, 0x22, 0x28, 0x0a, 0x16, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x54, 0x0a,
	0x1f, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x41, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63,
	0x74, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x22, 0xce, 0x04, 0x0a, 0x14, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0a, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x70, 0x75, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x70,
	0x75, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6b, 0x75, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x6b, 0x75, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x73, 0x54, 0x65, 0x78, 0x74, 0x12, 0x20, 0x0a,
	0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x01, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4e, 0x75, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x24, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x0a, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x42, 0x61, 0x64, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x88, 0x01,
	0x01, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x63, 0x74, 0x6d, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x74,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x6d, 0x65, 0x6d, 0x6f, 0x22, 0x17, 0x0a, 0x15, 0x43, 0x74, 0x6d, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x41, 0x0a,
	0x23, 0x43, 0x74, 0x6d, 0x49, 0x74, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x22, 0x2b, 0x0a, 0x19, 0x43, 0x74, 0x6d, 0x49, 0x74, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x32, 0x0a,
	0x20, 0x43, 0x74, 0x6d, 0x49, 0x74, 0x6f, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x43, 0x74,
	0x6d, 0x43, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x39, 0x0a, 0x1e, 0x43, 0x74, 0x6d, 0x49, 0x74, 0x6f, 0x44, 0x65, 0x73, 0x74, 0x72,
	0x6f, 0x79, 0x43, 0x74, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x63, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xac, 0x04, 0x0a,
	0x17, 0x43, 0x74, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x63, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a,
	0x08, 0x62, 0x75, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x75, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x62, 0x69, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x62,
	0x69, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x6e, 0x65, 0x77, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x5f,
	0x66, 0x6c, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x6e, 0x65,
	0x77, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x5f, 0x61, 0x63, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x2d, 0x0a, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x64,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0e, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63,
	0x74, 0x6d, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x05, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x5f, 0x61, 0x63, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x31, 0x0a, 0x15, 0x43,
	0x74, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x7b,
	0x0a, 0x16, 0x43, 0x74, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x83, 0x05, 0x0a, 0x12,
	0x43, 0x74, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x63, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x09,
	0x62, 0x69, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x08, 0x62, 0x69, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x70,
	0x61, 0x69, 0x72, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x6e, 0x65, 0x77, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x72, 0x65, 0x6e, 0x65, 0x77, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x63, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x03, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x43, 0x6f,
	0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f,
	0x70, 0x72, 0x6f, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x04, 0x52, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x43, 0x6f, 0x64,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x74, 0x6d, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x63, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f,
	0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x22, 0x34, 0x0a, 0x19, 0x43, 0x74, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x61, 0x63, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x63, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xe1, 0x04, 0x0a, 0x17, 0x43, 0x74, 0x6d, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x33, 0x0a,
	0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x63, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a,
	0x08, 0x62, 0x75, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x75, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x62, 0x69, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x62,
	0x69, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x6e, 0x65, 0x77, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x5f,
	0x66, 0x6c, 0x61, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x6e, 0x65,
	0x77, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x5f, 0x61, 0x63, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x2d, 0x0a, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x64,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0e, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63,
	0x74, 0x6d, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x05, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x5f, 0x61, 0x63, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x6e, 0x0a, 0x1b, 0x43,
	0x74, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x75, 0x53, 0x6e, 0x61, 0x70, 0x53,
	0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x75, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x4e, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x5f, 0x73, 0x70, 0x75, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x65, 0x77, 0x53, 0x70, 0x75, 0x22, 0x79, 0x0a, 0x15, 0x43,
	0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xaf, 0x02, 0x0a, 0x18, 0x43, 0x74, 0x6d, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x09, 0x63, 0x61, 0x72, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x54, 0x0a, 0x09, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x65, 0x0a, 0x12, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x1b, 0x43, 0x74, 0x6d,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0xee, 0x05, 0x0a, 0x17, 0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24,
	0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x0c, 0x62,
	0x65, 0x66, 0x6f, 0x72, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x26,
	0x0a, 0x0c, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x0b, 0x61, 0x66, 0x74, 0x65, 0x72, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x48, 0x04, 0x52,
	0x0c, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x26, 0x0a, 0x0c, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x48, 0x05, 0x52, 0x0b, 0x61, 0x66, 0x74, 0x65, 0x72, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52,
	0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28,
	0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x48, 0x08, 0x52, 0x06, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x75,
	0x73, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x48, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0a,
	0x52, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65,
	0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x75, 0x73, 0x65,
	0x64, 0x22, 0xb3, 0x05, 0x0a, 0x11, 0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x61, 0x72, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x24, 0x0a, 0x0e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x5f, 0x64,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0a,
	0x63, 0x61, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a,
	0x0b, 0x61, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x01, 0x52, 0x09, 0x61, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x6b, 0x75, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x63, 0x61, 0x72, 0x64, 0x53, 0x6b, 0x75, 0x88,
	0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x64,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x6e, 0x74, 0x72, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x09, 0x63, 0x61,
	0x72, 0x64, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x48, 0x06,
	0x52, 0x09, 0x63, 0x61, 0x72, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x20,
	0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x07, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1b, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x08, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a,
	0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x48, 0x09,
	0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03,
	0x63, 0x74, 0x6d, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0a, 0x52, 0x03, 0x63, 0x74, 0x6d,
	0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x61, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x6b, 0x75,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x42,
	0x06, 0x0a, 0x04, 0x5f, 0x63, 0x74, 0x6d, 0x22, 0x2f, 0x0a, 0x1d, 0x44, 0x65, 0x73, 0x74, 0x72,
	0x6f, 0x79, 0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x17, 0x44, 0x65, 0x73, 0x74,
	0x72, 0x6f, 0x79, 0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x7a, 0x0a, 0x18, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x01, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x36, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x30, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x30, 0x0a, 0x1e, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x18, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xd6, 0x05, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a,
	0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x01, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x0c, 0x62, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a,
	0x0c, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x0b, 0x61, 0x66, 0x74, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x48, 0x04, 0x52, 0x0c,
	0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x26, 0x0a, 0x0c, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x01, 0x48, 0x05, 0x52, 0x0b, 0x61, 0x66, 0x74, 0x65, 0x72, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0a,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a,
	0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x48, 0x08, 0x52, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x73,
	0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x48, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x55, 0x73, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0a, 0x52,
	0x0a, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x64,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x64,
	0x22, 0xf7, 0x04, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x74, 0x6d, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61,
	0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x61,
	0x6e, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x00, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x23, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x09, 0x61, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x6b,
	0x75, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x63, 0x61, 0x72, 0x64, 0x53,
	0x6b, 0x75, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64,
	0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x08, 0x63, 0x61,
	0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52,
	0x09, 0x63, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a,
	0x0a, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x06, 0x52, 0x09, 0x63, 0x61, 0x72, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x07, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x08, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x1d, 0x0a, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x09, 0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x15, 0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0a, 0x52, 0x03,
	0x63, 0x74, 0x6d, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x61, 0x6e, 0x5f, 0x64,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x61, 0x63, 0x74, 0x5f, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x73, 0x6b, 0x75, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x63, 0x74, 0x6d, 0x22, 0x57, 0x0a, 0x19, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x61, 0x72,
	0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x42, 0x0a, 0x1a, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4e, 0x65, 0x78,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x43,
	0x61, 0x72, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x32, 0xc2, 0x27, 0x0a, 0x10, 0x43, 0x74, 0x6d, 0x49,
	0x74, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x9d, 0x01, 0x0a,
	0x15, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41,
	0x6c, 0x6c, 0x43, 0x61, 0x72, 0x74, 0x12, 0x3e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x49, 0x74, 0x6f, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x6c, 0x6c, 0x43, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x06,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x64, 0x64, 0x72, 0x12, 0x33, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x41, 0x64,
	0x64, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x12, 0x33, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x61,
	0x72, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x85, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x74, 0x6d, 0x43,
	0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x65, 0x73, 0x12, 0x38, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x64,
	0x43, 0x61, 0x72, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7f, 0x0a, 0x10, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x74, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x36, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74,
	0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x0f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x35, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8e, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x12, 0x3b, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7f, 0x0a, 0x0b, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x34, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43,
	0x74, 0x6d, 0x49, 0x74, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x07, 0x44, 0x65,
	0x73, 0x74, 0x72, 0x6f, 0x79, 0x12, 0x34, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x44, 0x65, 0x73,
	0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79,
	0x41, 0x64, 0x64, 0x72, 0x12, 0x34, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x44, 0x65, 0x73, 0x74,
	0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x43,
	0x61, 0x72, 0x74, 0x12, 0x34, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x44, 0x65, 0x73, 0x74, 0x72,
	0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x13, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x43, 0x74,
	0x6d, 0x43, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x65, 0x73, 0x12, 0x3f, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x49, 0x74,
	0x6f, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x43,
	0x61, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x11, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79,
	0x43, 0x74, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x3d, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x49, 0x74,
	0x6f, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x43, 0x74, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x10, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x43, 0x74,
	0x6d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x43,
	0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x16, 0x44, 0x65, 0x73,
	0x74, 0x72, 0x6f, 0x79, 0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x12, 0x3c, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x43, 0x74, 0x6d, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x08,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x41, 0x64, 0x64, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x41,
	0x64, 0x64, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x73, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x72, 0x74, 0x12, 0x31, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74,
	0x6d, 0x43, 0x61, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x32, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x74, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x65, 0x73, 0x12, 0x36, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43,
	0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x65, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7f,
	0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x74, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x12, 0x34, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x74, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x7c, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x12, 0x33, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8e, 0x01,
	0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x39, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8c,
	0x01, 0x0a, 0x13, 0x4e, 0x65, 0x78, 0x74, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x43, 0x74, 0x6d,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x38, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4e, 0x65, 0x78,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x39, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x43, 0x61, 0x72, 0x64, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a,
	0x10, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x37, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x12,
	0x35, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x43, 0x74, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x0c, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x12, 0x35, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x41, 0x64, 0x64, 0x72,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x43, 0x74, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x77, 0x0a, 0x0c, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x61, 0x72,
	0x74, 0x12, 0x35, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x89, 0x01, 0x0a, 0x14, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x43, 0x61,
	0x72, 0x65, 0x73, 0x12, 0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x65, 0x73,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x33, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x83, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x43, 0x74, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x38, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74,
	0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x80, 0x01, 0x0a,
	0x11, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x12, 0x37, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x74, 0x6d, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x92, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x74, 0x6d, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x3d, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2d,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43,
	0x74, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74,
	0x6d, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x73, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x12, 0x33, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74,
	0x6d, 0x41, 0x64, 0x64, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x72, 0x74, 0x12, 0x33, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x65, 0x73,
	0x12, 0x38, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x65, 0x73, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x61,
	0x72, 0x64, 0x43, 0x61, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x7f, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x74, 0x6d, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74,
	0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x7c, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x74, 0x6d, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x35, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x74, 0x6d, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x8e, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x74, 0x6d, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x3b, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x69, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x75, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x70, 0x75, 0x53, 0x6e, 0x61, 0x70, 0x53, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b,
	0x2e, 0x2e, 0x2f, 0x70, 0x62, 0x43, 0x74, 0x6d, 0x49, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_customer_ito_proto_rawDescOnce sync.Once
	file_customer_ito_proto_rawDescData = file_customer_ito_proto_rawDesc
)

func file_customer_ito_proto_rawDescGZIP() []byte {
	file_customer_ito_proto_rawDescOnce.Do(func() {
		file_customer_ito_proto_rawDescData = protoimpl.X.CompressGZIP(file_customer_ito_proto_rawDescData)
	})
	return file_customer_ito_proto_rawDescData
}

var file_customer_ito_proto_msgTypes = make([]protoimpl.MessageInfo, 59)
var file_customer_ito_proto_goTypes = []interface{}{
	(*CardCaresResponse)(nil),                   // 0: customer_service.customer_ito.CardCaresResponse
	(*CreateCtmWalletRecordRequest)(nil),        // 1: customer_service.customer_ito.CreateCtmWalletRecordRequest
	(*CreateCtmWalletRequest)(nil),              // 2: customer_service.customer_ito.CreateCtmWalletRequest
	(*CtmAddrCreateRequest)(nil),                // 3: customer_service.customer_ito.CtmAddrCreateRequest
	(*CtmAddrDestroyRequest)(nil),               // 4: customer_service.customer_ito.CtmAddrDestroyRequest
	(*CtmAddrListRequest)(nil),                  // 5: customer_service.customer_ito.CtmAddrListRequest
	(*CtmAddrListResponse)(nil),                 // 6: customer_service.customer_ito.CtmAddrListResponse
	(*CtmAddrResponse)(nil),                     // 7: customer_service.customer_ito.CtmAddrResponse
	(*CtmAddrRetrieveRequest)(nil),              // 8: customer_service.customer_ito.CtmAddrRetrieveRequest
	(*CtmAddrUpdateRequest)(nil),                // 9: customer_service.customer_ito.CtmAddrUpdateRequest
	(*CtmBaseDestroyRequest)(nil),               // 10: customer_service.customer_ito.CtmBaseDestroyRequest
	(*CtmBaseListRequest)(nil),                  // 11: customer_service.customer_ito.CtmBaseListRequest
	(*CtmBaseListResponse)(nil),                 // 12: customer_service.customer_ito.CtmBaseListResponse
	(*CtmBasePartialUpdateRequest)(nil),         // 13: customer_service.customer_ito.CtmBasePartialUpdateRequest
	(*CtmBaseRequest)(nil),                      // 14: customer_service.customer_ito.CtmBaseRequest
	(*CtmBaseResponse)(nil),                     // 15: customer_service.customer_ito.CtmBaseResponse
	(*CtmBaseRetrieveRequest)(nil),              // 16: customer_service.customer_ito.CtmBaseRetrieveRequest
	(*CtmCardCaresCreateRequest)(nil),           // 17: customer_service.customer_ito.CtmCardCaresCreateRequest
	(*CtmCardCaresListRequest)(nil),             // 18: customer_service.customer_ito.CtmCardCaresListRequest
	(*CtmCardCaresListResponse)(nil),            // 19: customer_service.customer_ito.CtmCardCaresListResponse
	(*CtmCardCaresResponse)(nil),                // 20: customer_service.customer_ito.CtmCardCaresResponse
	(*CtmCardCaresRetrieveRequest)(nil),         // 21: customer_service.customer_ito.CtmCardCaresRetrieveRequest
	(*CtmCardCaresUpdateRequest)(nil),           // 22: customer_service.customer_ito.CtmCardCaresUpdateRequest
	(*CtmCartCreateRequest)(nil),                // 23: customer_service.customer_ito.CtmCartCreateRequest
	(*CtmCartDestroyRequest)(nil),               // 24: customer_service.customer_ito.CtmCartDestroyRequest
	(*CtmCartListRequest)(nil),                  // 25: customer_service.customer_ito.CtmCartListRequest
	(*CtmCartListResponse)(nil),                 // 26: customer_service.customer_ito.CtmCartListResponse
	(*CtmCartResponse)(nil),                     // 27: customer_service.customer_ito.CtmCartResponse
	(*CtmCartRetrieveRequest)(nil),              // 28: customer_service.customer_ito.CtmCartRetrieveRequest
	(*CtmCartSelectedAllChangeRequest)(nil),     // 29: customer_service.customer_ito.CtmCartSelectedAllChangeRequest
	(*CtmCartUpdateRequest)(nil),                // 30: customer_service.customer_ito.CtmCartUpdateRequest
	(*CtmDefaultAddrRequest)(nil),               // 31: customer_service.customer_ito.CtmDefaultAddrRequest
	(*CtmItoChangeSelectedAllCartResponse)(nil), // 32: customer_service.customer_ito.CtmItoChangeSelectedAllCartResponse
	(*CtmItoDefaultAddrResponse)(nil),           // 33: customer_service.customer_ito.CtmItoDefaultAddrResponse
	(*CtmItoDestroyCtmCardCaresRequest)(nil),    // 34: customer_service.customer_ito.CtmItoDestroyCtmCardCaresRequest
	(*CtmItoDestroyCtmProductRequest)(nil),      // 35: customer_service.customer_ito.CtmItoDestroyCtmProductRequest
	(*CtmProductCreateRequest)(nil),             // 36: customer_service.customer_ito.CtmProductCreateRequest
	(*CtmProductListRequest)(nil),               // 37: customer_service.customer_ito.CtmProductListRequest
	(*CtmProductListResponse)(nil),              // 38: customer_service.customer_ito.CtmProductListResponse
	(*CtmProductResponse)(nil),                  // 39: customer_service.customer_ito.CtmProductResponse
	(*CtmProductRetrieveRequest)(nil),           // 40: customer_service.customer_ito.CtmProductRetrieveRequest
	(*CtmProductUpdateRequest)(nil),             // 41: customer_service.customer_ito.CtmProductUpdateRequest
	(*CtmUpdateSpuSnapShotRequest)(nil),         // 42: customer_service.customer_ito.CtmUpdateSpuSnapShotRequest
	(*CtmWalletListResponse)(nil),               // 43: customer_service.customer_ito.CtmWalletListResponse
	(*CtmWalletOptionsResponse)(nil),            // 44: customer_service.customer_ito.CtmWalletOptionsResponse
	(*CtmWalletRecordListResponse)(nil),         // 45: customer_service.customer_ito.CtmWalletRecordListResponse
	(*CtmWalletRecordResponse)(nil),             // 46: customer_service.customer_ito.CtmWalletRecordResponse
	(*CtmWalletResponse)(nil),                   // 47: customer_service.customer_ito.CtmWalletResponse
	(*DestroyCtmWalletRecordRequest)(nil),       // 48: customer_service.customer_ito.DestroyCtmWalletRecordRequest
	(*DestroyCtmWalletRequest)(nil),             // 49: customer_service.customer_ito.DestroyCtmWalletRequest
	(*LabelNumberValueResponse)(nil),            // 50: customer_service.customer_ito.LabelNumberValueResponse
	(*ListCtmWalletRecordRequest)(nil),          // 51: customer_service.customer_ito.ListCtmWalletRecordRequest
	(*ListCtmWalletRequest)(nil),                // 52: customer_service.customer_ito.ListCtmWalletRequest
	(*RetrieveCtmWalletRecordRequest)(nil),      // 53: customer_service.customer_ito.RetrieveCtmWalletRecordRequest
	(*RetrieveCtmWalletRequest)(nil),            // 54: customer_service.customer_ito.RetrieveCtmWalletRequest
	(*UpdateCtmWalletRecordRequest)(nil),        // 55: customer_service.customer_ito.UpdateCtmWalletRecordRequest
	(*UpdateCtmWalletRequest)(nil),              // 56: customer_service.customer_ito.UpdateCtmWalletRequest
	(*WalletNextCardCodeRequest)(nil),           // 57: customer_service.customer_ito.WalletNextCardCodeRequest
	(*WalletNextCardCodeResponse)(nil),          // 58: customer_service.customer_ito.WalletNextCardCodeResponse
	(*emptypb.Empty)(nil),                       // 59: google.protobuf.Empty
}
var file_customer_ito_proto_depIdxs = []int32{
	7,  // 0: customer_service.customer_ito.CtmAddrListResponse.results:type_name -> customer_service.customer_ito.CtmAddrResponse
	15, // 1: customer_service.customer_ito.CtmBaseListResponse.results:type_name -> customer_service.customer_ito.CtmBaseResponse
	7,  // 2: customer_service.customer_ito.CtmBaseResponse.ctm_addresses:type_name -> customer_service.customer_ito.CtmAddrResponse
	20, // 3: customer_service.customer_ito.CtmCardCaresListResponse.results:type_name -> customer_service.customer_ito.CtmCardCaresResponse
	0,  // 4: customer_service.customer_ito.CtmCardCaresResponse.cares:type_name -> customer_service.customer_ito.CardCaresResponse
	27, // 5: customer_service.customer_ito.CtmCartListResponse.results:type_name -> customer_service.customer_ito.CtmCartResponse
	39, // 6: customer_service.customer_ito.CtmProductListResponse.results:type_name -> customer_service.customer_ito.CtmProductResponse
	47, // 7: customer_service.customer_ito.CtmWalletListResponse.results:type_name -> customer_service.customer_ito.CtmWalletResponse
	50, // 8: customer_service.customer_ito.CtmWalletOptionsResponse.card_class:type_name -> customer_service.customer_ito.LabelNumberValueResponse
	50, // 9: customer_service.customer_ito.CtmWalletOptionsResponse.card_type:type_name -> customer_service.customer_ito.LabelNumberValueResponse
	50, // 10: customer_service.customer_ito.CtmWalletOptionsResponse.record_change_type:type_name -> customer_service.customer_ito.LabelNumberValueResponse
	46, // 11: customer_service.customer_ito.CtmWalletRecordListResponse.results:type_name -> customer_service.customer_ito.CtmWalletRecordResponse
	29, // 12: customer_service.customer_ito.CtmItoController.ChangeSelectedAllCart:input_type -> customer_service.customer_ito.CtmCartSelectedAllChangeRequest
	14, // 13: customer_service.customer_ito.CtmItoController.Create:input_type -> customer_service.customer_ito.CtmBaseRequest
	3,  // 14: customer_service.customer_ito.CtmItoController.CreateAddr:input_type -> customer_service.customer_ito.CtmAddrCreateRequest
	23, // 15: customer_service.customer_ito.CtmItoController.CreateCart:input_type -> customer_service.customer_ito.CtmCartCreateRequest
	17, // 16: customer_service.customer_ito.CtmItoController.CreateCtmCardCares:input_type -> customer_service.customer_ito.CtmCardCaresCreateRequest
	36, // 17: customer_service.customer_ito.CtmItoController.CreateCtmProduct:input_type -> customer_service.customer_ito.CtmProductCreateRequest
	2,  // 18: customer_service.customer_ito.CtmItoController.CreateCtmWallet:input_type -> customer_service.customer_ito.CreateCtmWalletRequest
	1,  // 19: customer_service.customer_ito.CtmItoController.CreateCtmWalletRecord:input_type -> customer_service.customer_ito.CreateCtmWalletRecordRequest
	31, // 20: customer_service.customer_ito.CtmItoController.DefaultAddr:input_type -> customer_service.customer_ito.CtmDefaultAddrRequest
	10, // 21: customer_service.customer_ito.CtmItoController.Destroy:input_type -> customer_service.customer_ito.CtmBaseDestroyRequest
	4,  // 22: customer_service.customer_ito.CtmItoController.DestroyAddr:input_type -> customer_service.customer_ito.CtmAddrDestroyRequest
	24, // 23: customer_service.customer_ito.CtmItoController.DestroyCart:input_type -> customer_service.customer_ito.CtmCartDestroyRequest
	34, // 24: customer_service.customer_ito.CtmItoController.DestroyCtmCardCares:input_type -> customer_service.customer_ito.CtmItoDestroyCtmCardCaresRequest
	35, // 25: customer_service.customer_ito.CtmItoController.DestroyCtmProduct:input_type -> customer_service.customer_ito.CtmItoDestroyCtmProductRequest
	49, // 26: customer_service.customer_ito.CtmItoController.DestroyCtmWallet:input_type -> customer_service.customer_ito.DestroyCtmWalletRequest
	48, // 27: customer_service.customer_ito.CtmItoController.DestroyCtmWalletRecord:input_type -> customer_service.customer_ito.DestroyCtmWalletRecordRequest
	11, // 28: customer_service.customer_ito.CtmItoController.List:input_type -> customer_service.customer_ito.CtmBaseListRequest
	5,  // 29: customer_service.customer_ito.CtmItoController.ListAddr:input_type -> customer_service.customer_ito.CtmAddrListRequest
	25, // 30: customer_service.customer_ito.CtmItoController.ListCart:input_type -> customer_service.customer_ito.CtmCartListRequest
	18, // 31: customer_service.customer_ito.CtmItoController.ListCtmCardCares:input_type -> customer_service.customer_ito.CtmCardCaresListRequest
	37, // 32: customer_service.customer_ito.CtmItoController.ListCtmProduct:input_type -> customer_service.customer_ito.CtmProductListRequest
	52, // 33: customer_service.customer_ito.CtmItoController.ListCtmWallet:input_type -> customer_service.customer_ito.ListCtmWalletRequest
	51, // 34: customer_service.customer_ito.CtmItoController.ListCtmWalletRecord:input_type -> customer_service.customer_ito.ListCtmWalletRecordRequest
	57, // 35: customer_service.customer_ito.CtmItoController.NextCardNoCtmWallet:input_type -> customer_service.customer_ito.WalletNextCardCodeRequest
	59, // 36: customer_service.customer_ito.CtmItoController.OptionsCtmWallet:input_type -> google.protobuf.Empty
	13, // 37: customer_service.customer_ito.CtmItoController.PartialUpdate:input_type -> customer_service.customer_ito.CtmBasePartialUpdateRequest
	16, // 38: customer_service.customer_ito.CtmItoController.Retrieve:input_type -> customer_service.customer_ito.CtmBaseRetrieveRequest
	8,  // 39: customer_service.customer_ito.CtmItoController.RetrieveAddr:input_type -> customer_service.customer_ito.CtmAddrRetrieveRequest
	28, // 40: customer_service.customer_ito.CtmItoController.RetrieveCart:input_type -> customer_service.customer_ito.CtmCartRetrieveRequest
	21, // 41: customer_service.customer_ito.CtmItoController.RetrieveCtmCardCares:input_type -> customer_service.customer_ito.CtmCardCaresRetrieveRequest
	40, // 42: customer_service.customer_ito.CtmItoController.RetrieveCtmProduct:input_type -> customer_service.customer_ito.CtmProductRetrieveRequest
	54, // 43: customer_service.customer_ito.CtmItoController.RetrieveCtmWallet:input_type -> customer_service.customer_ito.RetrieveCtmWalletRequest
	53, // 44: customer_service.customer_ito.CtmItoController.RetrieveCtmWalletRecord:input_type -> customer_service.customer_ito.RetrieveCtmWalletRecordRequest
	14, // 45: customer_service.customer_ito.CtmItoController.Update:input_type -> customer_service.customer_ito.CtmBaseRequest
	9,  // 46: customer_service.customer_ito.CtmItoController.UpdateAddr:input_type -> customer_service.customer_ito.CtmAddrUpdateRequest
	30, // 47: customer_service.customer_ito.CtmItoController.UpdateCart:input_type -> customer_service.customer_ito.CtmCartUpdateRequest
	22, // 48: customer_service.customer_ito.CtmItoController.UpdateCtmCardCares:input_type -> customer_service.customer_ito.CtmCardCaresUpdateRequest
	41, // 49: customer_service.customer_ito.CtmItoController.UpdateCtmProduct:input_type -> customer_service.customer_ito.CtmProductUpdateRequest
	56, // 50: customer_service.customer_ito.CtmItoController.UpdateCtmWallet:input_type -> customer_service.customer_ito.UpdateCtmWalletRequest
	55, // 51: customer_service.customer_ito.CtmItoController.UpdateCtmWalletRecord:input_type -> customer_service.customer_ito.UpdateCtmWalletRecordRequest
	42, // 52: customer_service.customer_ito.CtmItoController.UpdateSpuSnapshot:input_type -> customer_service.customer_ito.CtmUpdateSpuSnapShotRequest
	32, // 53: customer_service.customer_ito.CtmItoController.ChangeSelectedAllCart:output_type -> customer_service.customer_ito.CtmItoChangeSelectedAllCartResponse
	15, // 54: customer_service.customer_ito.CtmItoController.Create:output_type -> customer_service.customer_ito.CtmBaseResponse
	7,  // 55: customer_service.customer_ito.CtmItoController.CreateAddr:output_type -> customer_service.customer_ito.CtmAddrResponse
	27, // 56: customer_service.customer_ito.CtmItoController.CreateCart:output_type -> customer_service.customer_ito.CtmCartResponse
	20, // 57: customer_service.customer_ito.CtmItoController.CreateCtmCardCares:output_type -> customer_service.customer_ito.CtmCardCaresResponse
	39, // 58: customer_service.customer_ito.CtmItoController.CreateCtmProduct:output_type -> customer_service.customer_ito.CtmProductResponse
	47, // 59: customer_service.customer_ito.CtmItoController.CreateCtmWallet:output_type -> customer_service.customer_ito.CtmWalletResponse
	46, // 60: customer_service.customer_ito.CtmItoController.CreateCtmWalletRecord:output_type -> customer_service.customer_ito.CtmWalletRecordResponse
	33, // 61: customer_service.customer_ito.CtmItoController.DefaultAddr:output_type -> customer_service.customer_ito.CtmItoDefaultAddrResponse
	59, // 62: customer_service.customer_ito.CtmItoController.Destroy:output_type -> google.protobuf.Empty
	59, // 63: customer_service.customer_ito.CtmItoController.DestroyAddr:output_type -> google.protobuf.Empty
	59, // 64: customer_service.customer_ito.CtmItoController.DestroyCart:output_type -> google.protobuf.Empty
	59, // 65: customer_service.customer_ito.CtmItoController.DestroyCtmCardCares:output_type -> google.protobuf.Empty
	59, // 66: customer_service.customer_ito.CtmItoController.DestroyCtmProduct:output_type -> google.protobuf.Empty
	59, // 67: customer_service.customer_ito.CtmItoController.DestroyCtmWallet:output_type -> google.protobuf.Empty
	59, // 68: customer_service.customer_ito.CtmItoController.DestroyCtmWalletRecord:output_type -> google.protobuf.Empty
	12, // 69: customer_service.customer_ito.CtmItoController.List:output_type -> customer_service.customer_ito.CtmBaseListResponse
	6,  // 70: customer_service.customer_ito.CtmItoController.ListAddr:output_type -> customer_service.customer_ito.CtmAddrListResponse
	26, // 71: customer_service.customer_ito.CtmItoController.ListCart:output_type -> customer_service.customer_ito.CtmCartListResponse
	19, // 72: customer_service.customer_ito.CtmItoController.ListCtmCardCares:output_type -> customer_service.customer_ito.CtmCardCaresListResponse
	38, // 73: customer_service.customer_ito.CtmItoController.ListCtmProduct:output_type -> customer_service.customer_ito.CtmProductListResponse
	43, // 74: customer_service.customer_ito.CtmItoController.ListCtmWallet:output_type -> customer_service.customer_ito.CtmWalletListResponse
	45, // 75: customer_service.customer_ito.CtmItoController.ListCtmWalletRecord:output_type -> customer_service.customer_ito.CtmWalletRecordListResponse
	58, // 76: customer_service.customer_ito.CtmItoController.NextCardNoCtmWallet:output_type -> customer_service.customer_ito.WalletNextCardCodeResponse
	44, // 77: customer_service.customer_ito.CtmItoController.OptionsCtmWallet:output_type -> customer_service.customer_ito.CtmWalletOptionsResponse
	15, // 78: customer_service.customer_ito.CtmItoController.PartialUpdate:output_type -> customer_service.customer_ito.CtmBaseResponse
	15, // 79: customer_service.customer_ito.CtmItoController.Retrieve:output_type -> customer_service.customer_ito.CtmBaseResponse
	7,  // 80: customer_service.customer_ito.CtmItoController.RetrieveAddr:output_type -> customer_service.customer_ito.CtmAddrResponse
	27, // 81: customer_service.customer_ito.CtmItoController.RetrieveCart:output_type -> customer_service.customer_ito.CtmCartResponse
	20, // 82: customer_service.customer_ito.CtmItoController.RetrieveCtmCardCares:output_type -> customer_service.customer_ito.CtmCardCaresResponse
	39, // 83: customer_service.customer_ito.CtmItoController.RetrieveCtmProduct:output_type -> customer_service.customer_ito.CtmProductResponse
	47, // 84: customer_service.customer_ito.CtmItoController.RetrieveCtmWallet:output_type -> customer_service.customer_ito.CtmWalletResponse
	46, // 85: customer_service.customer_ito.CtmItoController.RetrieveCtmWalletRecord:output_type -> customer_service.customer_ito.CtmWalletRecordResponse
	15, // 86: customer_service.customer_ito.CtmItoController.Update:output_type -> customer_service.customer_ito.CtmBaseResponse
	7,  // 87: customer_service.customer_ito.CtmItoController.UpdateAddr:output_type -> customer_service.customer_ito.CtmAddrResponse
	27, // 88: customer_service.customer_ito.CtmItoController.UpdateCart:output_type -> customer_service.customer_ito.CtmCartResponse
	20, // 89: customer_service.customer_ito.CtmItoController.UpdateCtmCardCares:output_type -> customer_service.customer_ito.CtmCardCaresResponse
	39, // 90: customer_service.customer_ito.CtmItoController.UpdateCtmProduct:output_type -> customer_service.customer_ito.CtmProductResponse
	47, // 91: customer_service.customer_ito.CtmItoController.UpdateCtmWallet:output_type -> customer_service.customer_ito.CtmWalletResponse
	46, // 92: customer_service.customer_ito.CtmItoController.UpdateCtmWalletRecord:output_type -> customer_service.customer_ito.CtmWalletRecordResponse
	59, // 93: customer_service.customer_ito.CtmItoController.UpdateSpuSnapshot:output_type -> google.protobuf.Empty
	53, // [53:94] is the sub-list for method output_type
	12, // [12:53] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_customer_ito_proto_init() }
func file_customer_ito_proto_init() {
	if File_customer_ito_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_customer_ito_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardCaresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCtmWalletRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCtmWalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmAddrCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmAddrDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmAddrListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmAddrListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmAddrResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmAddrRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmAddrUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmBaseDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmBaseListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmBaseListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmBasePartialUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmBaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmBaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmBaseRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCardCaresCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCardCaresListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCardCaresListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCardCaresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCardCaresRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCardCaresUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCartCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCartDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCartListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCartListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCartRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCartSelectedAllChangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCartUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmDefaultAddrRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmItoChangeSelectedAllCartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmItoDefaultAddrResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmItoDestroyCtmCardCaresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmItoDestroyCtmProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmProductCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmProductListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmProductListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmProductResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmProductRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmProductUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmUpdateSpuSnapShotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmWalletListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmWalletOptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmWalletRecordListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmWalletRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmWalletResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyCtmWalletRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyCtmWalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelNumberValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCtmWalletRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCtmWalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveCtmWalletRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveCtmWalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCtmWalletRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCtmWalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletNextCardCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletNextCardCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_customer_ito_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_customer_ito_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_customer_ito_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_customer_ito_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_customer_ito_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_customer_ito_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_customer_ito_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_customer_ito_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_customer_ito_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_customer_ito_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_customer_ito_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_customer_ito_proto_msgTypes[20].OneofWrappers = []interface{}{}
	file_customer_ito_proto_msgTypes[22].OneofWrappers = []interface{}{}
	file_customer_ito_proto_msgTypes[23].OneofWrappers = []interface{}{}
	file_customer_ito_proto_msgTypes[27].OneofWrappers = []interface{}{}
	file_customer_ito_proto_msgTypes[30].OneofWrappers = []interface{}{}
	file_customer_ito_proto_msgTypes[36].OneofWrappers = []interface{}{}
	file_customer_ito_proto_msgTypes[39].OneofWrappers = []interface{}{}
	file_customer_ito_proto_msgTypes[41].OneofWrappers = []interface{}{}
	file_customer_ito_proto_msgTypes[46].OneofWrappers = []interface{}{}
	file_customer_ito_proto_msgTypes[47].OneofWrappers = []interface{}{}
	file_customer_ito_proto_msgTypes[50].OneofWrappers = []interface{}{}
	file_customer_ito_proto_msgTypes[55].OneofWrappers = []interface{}{}
	file_customer_ito_proto_msgTypes[56].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_customer_ito_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   59,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_customer_ito_proto_goTypes,
		DependencyIndexes: file_customer_ito_proto_depIdxs,
		MessageInfos:      file_customer_ito_proto_msgTypes,
	}.Build()
	File_customer_ito_proto = out.File
	file_customer_ito_proto_rawDesc = nil
	file_customer_ito_proto_goTypes = nil
	file_customer_ito_proto_depIdxs = nil
}
